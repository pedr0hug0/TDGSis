/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CTR.tdgCTR;
import DTO.CorteDTO;
import DTO.EstoqueDTO;
import DTO.ProducaoDTO;
import DTO.ProdutoDTO;
import dao.CorteDAO;
import dao.EstoqueDAO;
import dao.ProducaoDAO;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author PeDr0_HuG0
 */
public class CorteVIEW extends javax.swing.JFrame {

    /**
     * Creates new form CorteVIEW
     */
    
    private String grade;
    
    public CorteVIEW() {
        initComponents();
        //botao x fechar apenas janela
        setDefaultCloseOperation(ProdutoVIEW.HIDE_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);
        
       
       tdgCTR.considerarEnterComoTab(txt_data);
       tdgCTR.considerarEnterComoTab(txt_ref);
       tdgCTR.considerarEnterComoTab(txt_qtd);
       tdgCTR.considerarEnterComoTab(jComboBox_Corte);//remover caso queira selecionar div com seta
       
       tdgCTR.considerarEnterComoTab(jCheckBox_data_entrega);
       tdgCTR.considerarEnterComoTab(txt_data_entrega);
       
       
       //dividir grade normal
        tdgCTR.considerarEnterComoTab(jRadioButton1111);
        tdgCTR.considerarEnterComoTab(jRadioButton1122);
        tdgCTR.considerarEnterComoTab(jRadioButton1221);
        tdgCTR.considerarEnterComoTab(jRadioButton2112);
        tdgCTR.considerarEnterComoTab(jRadioButton2211);
        
        //dividir grade ESPECIAL
        tdgCTR.considerarEnterComoTab(jRadioButton111);
        tdgCTR.considerarEnterComoTab(jRadioButton112);
        tdgCTR.considerarEnterComoTab(jRadioButton122);
        tdgCTR.considerarEnterComoTab(jRadioButton211);
        tdgCTR.considerarEnterComoTab(jRadioButton221);
        tdgCTR.considerarEnterComoTab(jRadioButton121);
        
        tdgCTR.considerarEnterComoTab(txt_t1_manual);
        tdgCTR.considerarEnterComoTab(txt_t2_manual);
        tdgCTR.considerarEnterComoTab(txt_t3_manual);
        tdgCTR.considerarEnterComoTab(txt_t4_manual);
        
        //tdgCTR.considerarEnterComoTab(txt_t1);
        
        tdgCTR.auto_selecionar(txt_t1_manual);
        tdgCTR.auto_selecionar(txt_t2_manual);
        tdgCTR.auto_selecionar(txt_t3_manual);
        tdgCTR.auto_selecionar(txt_t4_manual);
        
        //pegando data atual 
       Date data = new Date(System.currentTimeMillis());    
       SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
       txt_data.setText(formatarDate.format(data));
       
       txt_ref.requestFocus();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_Grade = new javax.swing.ButtonGroup();
        buttonGroup_Grade_Especial = new javax.swing.ButtonGroup();
        buttonGroup_tipo_corte = new javax.swing.ButtonGroup();
        buttonGroup_tipo_grade = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_ref = new javax.swing.JTextField();
        jComboBox_Cor = new javax.swing.JComboBox();
        txt_qtd = new javax.swing.JTextField();
        btn_Cadastrar_Corte = new javax.swing.JButton();
        txt_data = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel_Grade = new javax.swing.JPanel();
        jRadioButton1111 = new javax.swing.JRadioButton();
        jRadioButton1221 = new javax.swing.JRadioButton();
        jRadioButton1122 = new javax.swing.JRadioButton();
        jRadioButton2211 = new javax.swing.JRadioButton();
        jRadioButton2112 = new javax.swing.JRadioButton();
        jPanel_Grade_Especial = new javax.swing.JPanel();
        jRadioButton111 = new javax.swing.JRadioButton();
        jRadioButton122 = new javax.swing.JRadioButton();
        jRadioButton112 = new javax.swing.JRadioButton();
        jRadioButton221 = new javax.swing.JRadioButton();
        jRadioButton211 = new javax.swing.JRadioButton();
        jRadioButton121 = new javax.swing.JRadioButton();
        jComboBox_Cores = new javax.swing.JComboBox();
        btn_remove = new javax.swing.JButton();
        btn_adiciona = new javax.swing.JButton();
        jComboBox_Corte = new javax.swing.JComboBox();
        jRadioButton_div = new javax.swing.JRadioButton();
        jRadioButton_todos = new javax.swing.JRadioButton();
        jRadioButton_especial = new javax.swing.JRadioButton();
        txt_data_entrega = new javax.swing.JFormattedTextField();
        jCheckBox_data_entrega = new javax.swing.JCheckBox();
        jPanel_manual = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txt_t1_manual = new javax.swing.JTextField();
        txt_t2_manual = new javax.swing.JTextField();
        txt_t3_manual = new javax.swing.JTextField();
        txt_t4_manual = new javax.swing.JTextField();
        jRadioButton_Grade = new javax.swing.JRadioButton();
        jRadioButton_Manual = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Corte = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txt_ref_pesquisar = new javax.swing.JTextField();
        btn_Pesquisar = new javax.swing.JButton();
        btn_Excluir = new javax.swing.JButton();
        btn_Listar = new javax.swing.JButton();
        btn_Limpar_Lista = new javax.swing.JButton();
        btn_Ordem_Corte = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btn_Corte1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_VENDA = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        txt_total_itens_venda = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_VENDA_CORTE = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        txt_total_itens_saldo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_total_itens = new javax.swing.JTextField();
        txt_qtd_cores = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_costas = new javax.swing.JTextField();
        txt_manga = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_qtd_tamanho = new javax.swing.JTextField();
        txt_tipo_tamanho = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_t1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txt_t3 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txt_t2 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txt_t4 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_ESTOQUE = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txt_total_itens_estoque = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CORTE");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Cortes"));

        jLabel1.setText("Ref:");

        jLabel2.setText("Cor:");

        jLabel3.setText("Qtd por Cor:");

        jLabel4.setText("Corte:");

        txt_ref.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_refFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_refFocusLost(evt);
            }
        });
        txt_ref.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_refKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_refKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_refKeyTyped(evt);
            }
        });

        jComboBox_Cor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_CorKeyPressed(evt);
            }
        });

        btn_Cadastrar_Corte.setText("CADASTRAR CORTE");
        btn_Cadastrar_Corte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btn_Cadastrar_CorteFocusGained(evt);
            }
        });
        btn_Cadastrar_Corte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Cadastrar_CorteActionPerformed(evt);
            }
        });

        try {
            txt_data.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("Data:");

        jPanel_Grade.setBorder(javax.swing.BorderFactory.createTitledBorder("Dividir por Grade"));

        buttonGroup_Grade.add(jRadioButton1111);
        jRadioButton1111.setText("1 1 1 1");
        jRadioButton1111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1111ActionPerformed(evt);
            }
        });

        buttonGroup_Grade.add(jRadioButton1221);
        jRadioButton1221.setText("1 2 2 1");
        jRadioButton1221.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1221ActionPerformed(evt);
            }
        });

        buttonGroup_Grade.add(jRadioButton1122);
        jRadioButton1122.setText("1 1 2 2");
        jRadioButton1122.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1122ActionPerformed(evt);
            }
        });

        buttonGroup_Grade.add(jRadioButton2211);
        jRadioButton2211.setText("2 2 1 1");
        jRadioButton2211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2211ActionPerformed(evt);
            }
        });

        buttonGroup_Grade.add(jRadioButton2112);
        jRadioButton2112.setText("2 1 1 2");
        jRadioButton2112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2112ActionPerformed(evt);
            }
        });

        //jPanel_Grade.setVisible(false);

        javax.swing.GroupLayout jPanel_GradeLayout = new javax.swing.GroupLayout(jPanel_Grade);
        jPanel_Grade.setLayout(jPanel_GradeLayout);
        jPanel_GradeLayout.setHorizontalGroup(
            jPanel_GradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_GradeLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jRadioButton1111)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1221)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1122)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2211)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2112))
        );
        jPanel_GradeLayout.setVerticalGroup(
            jPanel_GradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_GradeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_GradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1111)
                    .addComponent(jRadioButton1221)
                    .addComponent(jRadioButton1122)
                    .addComponent(jRadioButton2211)
                    .addComponent(jRadioButton2112))
                .addContainerGap())
        );

        jPanel_Grade_Especial.setBorder(javax.swing.BorderFactory.createTitledBorder("Dividir por Grade [Especial]"));

        buttonGroup_Grade_Especial.add(jRadioButton111);
        jRadioButton111.setText("1 1 1");
        jRadioButton111.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton111ActionPerformed(evt);
            }
        });

        buttonGroup_Grade_Especial.add(jRadioButton122);
        jRadioButton122.setText("1 2 2");
        jRadioButton122.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton122ActionPerformed(evt);
            }
        });

        buttonGroup_Grade_Especial.add(jRadioButton112);
        jRadioButton112.setText("1 1 2");
        jRadioButton112.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton112ActionPerformed(evt);
            }
        });

        buttonGroup_Grade_Especial.add(jRadioButton221);
        jRadioButton221.setText("2 2 1");
        jRadioButton221.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton221ActionPerformed(evt);
            }
        });

        buttonGroup_Grade_Especial.add(jRadioButton211);
        jRadioButton211.setText("2 1 1");
        jRadioButton211.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton211ActionPerformed(evt);
            }
        });

        buttonGroup_Grade_Especial.add(jRadioButton121);
        jRadioButton121.setText("1 2 1");
        jRadioButton121.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton121ActionPerformed(evt);
            }
        });

        //jPanel_Grade.setVisible(false);

        javax.swing.GroupLayout jPanel_Grade_EspecialLayout = new javax.swing.GroupLayout(jPanel_Grade_Especial);
        jPanel_Grade_Especial.setLayout(jPanel_Grade_EspecialLayout);
        jPanel_Grade_EspecialLayout.setHorizontalGroup(
            jPanel_Grade_EspecialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_Grade_EspecialLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRadioButton111)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton122)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton112)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton221)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton211)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton121))
        );
        jPanel_Grade_EspecialLayout.setVerticalGroup(
            jPanel_Grade_EspecialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_Grade_EspecialLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_Grade_EspecialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton111)
                    .addComponent(jRadioButton122)
                    .addComponent(jRadioButton112)
                    .addComponent(jRadioButton221)
                    .addComponent(jRadioButton211)
                    .addComponent(jRadioButton121))
                .addContainerGap())
        );

        jComboBox_Cores.setMaximumRowCount(15);
        jComboBox_Cores.setFocusable(false);

        btn_remove.setText("- (F2)");
        btn_remove.setFocusable(false);
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });

        btn_adiciona.setText("+");
        btn_adiciona.setFocusable(false);
        btn_adiciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adicionaActionPerformed(evt);
            }
        });

        jComboBox_Corte.setEditable(true);
        jComboBox_Corte.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DIV 1", "DIV 2", "DIV 3", "DIV 4", "BESNI", "NOVELTY", "TORRA TORRA", "SUL CENTER" }));

        buttonGroup_tipo_corte.add(jRadioButton_div);
        jRadioButton_div.setSelected(true);
        jRadioButton_div.setText("DIV");
        jRadioButton_div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_divActionPerformed(evt);
            }
        });

        buttonGroup_tipo_corte.add(jRadioButton_todos);
        jRadioButton_todos.setText("TODOS");
        jRadioButton_todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_todosActionPerformed(evt);
            }
        });

        buttonGroup_tipo_corte.add(jRadioButton_especial);
        jRadioButton_especial.setText("ESPECIAL");
        jRadioButton_especial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_especialActionPerformed(evt);
            }
        });

        try {
            txt_data_entrega.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jCheckBox_data_entrega.setText("Data Entrega <=");
        jCheckBox_data_entrega.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox_data_entregaStateChanged(evt);
            }
        });

        jPanel_manual.setBorder(javax.swing.BorderFactory.createTitledBorder("Manual"));

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("10/P/G1");

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("12/M/G2");

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("14/G/G3");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("16/GG");

        txt_t1_manual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_t1_manualFocusLost(evt);
            }
        });

        txt_t2_manual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_t2_manualFocusLost(evt);
            }
        });

        txt_t3_manual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_t3_manualFocusLost(evt);
            }
        });

        txt_t4_manual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_t4_manualFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel_manualLayout = new javax.swing.GroupLayout(jPanel_manual);
        jPanel_manual.setLayout(jPanel_manualLayout);
        jPanel_manualLayout.setHorizontalGroup(
            jPanel_manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_manualLayout.createSequentialGroup()
                .addGroup(jPanel_manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_t1_manual, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(txt_t2_manual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(txt_t3_manual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(txt_t4_manual))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel_manualLayout.setVerticalGroup(
            jPanel_manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_manualLayout.createSequentialGroup()
                .addGroup(jPanel_manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_t1_manual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_t2_manual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_t3_manual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_t4_manual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        buttonGroup_tipo_grade.add(jRadioButton_Grade);
        jRadioButton_Grade.setSelected(true);
        jRadioButton_Grade.setText("SELECIONAR GRADE");
        jRadioButton_Grade.setFocusable(false);
        jRadioButton_Grade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_GradeActionPerformed(evt);
            }
        });

        buttonGroup_tipo_grade.add(jRadioButton_Manual);
        jRadioButton_Manual.setText("MANUAL");
        jRadioButton_Manual.setFocusable(false);
        jRadioButton_Manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_ManualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Cadastrar_Corte, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(1, 1, 1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_Corte, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox_Cor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_remove))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_data, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(txt_ref, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jComboBox_Cores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn_adiciona))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCheckBox_data_entrega)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_data_entrega))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_qtd))
                    .addComponent(jPanel_Grade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_manual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_Grade_Especial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton_div)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton_especial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton_todos)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButton_Grade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton_Manual)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_data_entrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox_data_entrega))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_div)
                    .addComponent(jRadioButton_todos)
                    .addComponent(jRadioButton_especial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_ref, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_Cores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_adiciona))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_Cor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_remove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_qtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox_Corte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_Grade)
                    .addComponent(jRadioButton_Manual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Grade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jPanel_Grade_Especial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_manual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btn_Cadastrar_Corte)
                .addContainerGap())
        );

        //jPanel_Grade.setVisible(false);
        jPanel_Grade_Especial.setVisible(false);
        tdgCTR.todasCores(jComboBox_Cores);
        txt_data_entrega.setEnabled(false);
        jPanel_manual.setVisible(false);

        jTable_Corte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DATA", "REF", "COR", "QTD", "CORTE", "T1", "T2", "T3", "T4", "TIPO_PEDIDO", "GRADE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Corte.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable_Corte.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable_CortePropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Corte);
        //ocultar coluna ID da tabela
        jTable_Corte.getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable_Corte.getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        jTable_Corte.getTableHeader().getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable_Corte.getTableHeader().getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        //fim ocultar

        //COMBOBOX TIPO
        TableColumn tipoCol = jTable_Corte.getColumnModel().getColumn(10);

        JComboBox comboBox_Tipo = new JComboBox();

        comboBox_Tipo.addItem("DIVERSOS");
        comboBox_Tipo.addItem("ESPECIAL");
        tipoCol.setCellEditor(new DefaultCellEditor(comboBox_Tipo));
        //FIM COMBOBOX TIPO

        //ordenando cliacando nas tabelas
        jTable_Corte.setAutoCreateRowSorter(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar / Excluir"));

        jLabel5.setText("Ref:");

        txt_ref_pesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ref_pesquisarKeyPressed(evt);
            }
        });

        btn_Pesquisar.setText("Pesquisar");
        btn_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PesquisarActionPerformed(evt);
            }
        });

        btn_Excluir.setText("Excluir");
        btn_Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExcluirActionPerformed(evt);
            }
        });

        btn_Listar.setText("Listar Todos");
        btn_Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListarActionPerformed(evt);
            }
        });

        btn_Limpar_Lista.setText("Limpar");
        btn_Limpar_Lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Limpar_ListaActionPerformed(evt);
            }
        });

        btn_Ordem_Corte.setText("Consultar Ordem de Corte");
        btn_Ordem_Corte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Ordem_CorteActionPerformed(evt);
            }
        });

        jButton1.setText("Calcular Corte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_Corte1.setText("Infesto");
        btn_Corte1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Corte1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ficha Corte");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_ref_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Pesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Listar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Limpar_Lista, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Excluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Ordem_Corte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Corte1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_ref_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Pesquisar)
                    .addComponent(btn_Excluir)
                    .addComponent(btn_Listar)
                    .addComponent(btn_Limpar_Lista)
                    .addComponent(btn_Ordem_Corte)
                    .addComponent(jButton1)
                    .addComponent(btn_Corte1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("VENDIDO"));

        jTable_VENDA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REF", "COR", "P/10/G1", "M/12/G2", "G/14/G3", "GG/16", "TOTAL"
            }
        ));
        jTable_VENDA.setFocusable(false);
        jScrollPane1.setViewportView(jTable_VENDA);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Total Venda");

        txt_total_itens_venda.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_total_itens_venda, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_total_itens_venda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("SALDO VENDA - CORTE"));

        jTable_VENDA_CORTE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REF", "COR", "P/10/G1", "M/12/G2", "G/14/G3", "GG/16", "TOTAL"
            }
        ));
        jTable_VENDA_CORTE.setFocusable(false);
        jScrollPane3.setViewportView(jTable_VENDA_CORTE);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Total Saldo");

        txt_total_itens_saldo.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_total_itens_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_total_itens_saldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel7.setText("Total Cortado:");

        txt_total_itens.setEditable(false);

        txt_qtd_cores.setEditable(false);
        txt_qtd_cores.setEnabled(false);
        txt_qtd_cores.setFocusable(false);

        jLabel8.setText("Qtd_Cores:");
        jLabel8.setEnabled(false);

        jLabel9.setText("Costas");
        jLabel9.setEnabled(false);

        txt_costas.setEditable(false);
        txt_costas.setEnabled(false);
        txt_costas.setFocusable(false);

        txt_manga.setEditable(false);
        txt_manga.setEnabled(false);
        txt_manga.setFocusable(false);
        txt_manga.setVisible(false);

        jLabel10.setText("Manga");
        jLabel10.setEnabled(false);
        jLabel10.setOpaque(true);

        jLabel12.setText("Tipo_Tamanho");
        jLabel12.setEnabled(false);

        jLabel11.setText("Qtd_tamanho:");
        jLabel11.setEnabled(false);

        txt_qtd_tamanho.setEditable(false);
        txt_qtd_tamanho.setEnabled(false);
        txt_qtd_tamanho.setFocusable(false);

        txt_tipo_tamanho.setEditable(false);
        txt_tipo_tamanho.setEnabled(false);
        txt_tipo_tamanho.setFocusable(false);

        jLabel13.setText("T1:");
        jLabel13.setEnabled(false);
        jLabel13.setFocusable(false);

        txt_t1.setEnabled(false);
        txt_t1.setFocusable(false);

        jLabel15.setText("T3:");
        jLabel15.setEnabled(false);
        jLabel15.setFocusable(false);

        txt_t3.setEnabled(false);
        txt_t3.setFocusable(false);

        jLabel14.setText("T2:");
        jLabel14.setEnabled(false);
        jLabel14.setFocusable(false);

        txt_t2.setEnabled(false);
        txt_t2.setFocusable(false);

        jLabel16.setText("T4:");
        jLabel16.setEnabled(false);
        jLabel16.setFocusable(false);

        txt_t4.setEnabled(false);
        txt_t4.setFocusable(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("SALDO ESTOQUE - VENDA DE TODOS OS PEDIDOS"));

        jTable_ESTOQUE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REF", "COR", "P/10/G1", "M/12/G2", "G/14/G3", "GG/16", "TOTAL"
            }
        ));
        jTable_ESTOQUE.setFocusable(false);
        jScrollPane4.setViewportView(jTable_ESTOQUE);

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Estoque");

        txt_total_itens_estoque.setEditable(false);
        txt_total_itens_estoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_total_itens_estoqueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_total_itens_estoque, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_total_itens_estoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_costas))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jLabel8)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_qtd_cores)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_manga, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 47, Short.MAX_VALUE))))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_qtd_tamanho))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_tipo_tamanho)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_t1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_t4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_t3)))
                                .addContainerGap())
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_total_itens, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel15)
                                .addComponent(txt_t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(txt_t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txt_t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txt_t4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(txt_qtd_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_manga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_costas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_qtd_cores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txt_tipo_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(3, 3, 3)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_total_itens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        txt_qtd_cores.setVisible(false);
        jLabel8.setVisible(false);
        jLabel9.setVisible(false);
        txt_costas.setVisible(false);
        jLabel10.setVisible(false);
        jLabel12.setVisible(false);
        jLabel11.setVisible(false);
        txt_qtd_tamanho.setVisible(false);
        txt_tipo_tamanho.setVisible(false);
        jLabel13.setVisible(false);
        txt_t1.setVisible(false);
        jLabel15.setVisible(false);
        txt_t3.setVisible(false);
        jLabel14.setVisible(false);
        txt_t2.setVisible(false);
        jLabel16.setVisible(false);
        txt_t4.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PesquisarActionPerformed
        // TODO add your handling code here:
        jTable_Corte.setRowSorter(null);
        String ref_pesquisar = txt_ref_pesquisar.getText();
        
        if ( (ref_pesquisar.equals("")) || (ref_pesquisar==null) ){
            JOptionPane.showMessageDialog(null, "Insira uma ref!");
            txt_ref_pesquisar.requestFocus();
        }else{
            String tipo_pedido;
            if (jRadioButton_especial.isSelected()){
                tipo_pedido="ESPECIAL";
            }else if (jRadioButton_div.isSelected()){
                tipo_pedido="DIVERSOS";
            }else{
                tipo_pedido="TODOS";
            }
            
        listar_corte_por_ref(ref_pesquisar, tipo_pedido);
        total_itens();
        }
        //ordenando cliacando nas tabelas
         jTable_Corte.setAutoCreateRowSorter(true);
    }//GEN-LAST:event_btn_PesquisarActionPerformed
    //listar corte por ref
     public void listar_corte_por_ref(String ref_pesquisar, String tipo_pedido){
        
        
        CorteDAO dao = new CorteDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel(); 
            
       model.setNumRows(0);
       
       
       
       
        for (CorteDTO c : dao.getCorteRef(ref_pesquisar, tipo_pedido)) {
           
            model.addRow(new Object[]{c.getId(), c.getData_corte(), c.getCodigo(), c.getCor(), c.getQtd(), c.getCorte(), c.getT1(), c.getT2(), c.getT3(), c.getT4(), c.getTipo_pedido(), c.getGrade()});
        }
        
       
    }//fim listar
    
    //listar todos os cortes
     public void listar_corte(String tipo_pedido){
        
        CorteDAO dao = new CorteDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel(); 
            
       model.setNumRows(0);
       
                             
       
        for (CorteDTO c : dao.getCorte(tipo_pedido)) {
           
            model.addRow(new Object[]{c.getId(), c.getData_corte(), c.getCodigo(), c.getCor(), c.getQtd(), c.getCorte(), c.getT1(), c.getT2(), c.getT3(), c.getT4(), c.getTipo_pedido(), c.getGrade()});
        }
        
       //ordenando cliacando nas tabelas
        jTable_Corte.setAutoCreateRowSorter(true);
    }//fim listar todos corte
     
    private void btn_ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExcluirActionPerformed
        CorteDTO cortes = new CorteDTO();

        Integer linhaSelecionada = -1;
        linhaSelecionada = jTable_Corte.getSelectedRow();

        if (linhaSelecionada >= 0) {//se linha selecionada

            Integer id = (Integer) jTable_Corte.getValueAt(linhaSelecionada, 0);
            String ref = (String) jTable_Corte.getValueAt(linhaSelecionada, 2);
            String cor = (String) jTable_Corte.getValueAt(linhaSelecionada, 3);

            //Confirmação
            String message = "Deseja realmente excluir o corte de ref: "+ref+" cor: "+cor+" ?";
            String title = "Confirmação";
            int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION)
            {//sim
                //se confirmou
                DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel();
                cortes.setId(id);//setar o id pra excluir
                cortes.setCodigo(ref);
                CorteDAO dao = new CorteDAO();
                if (dao.excluir(cortes)){
                    JOptionPane.showMessageDialog(null, "Corte da REF: "+ref+" excluido com sucesso!");
                }
                else {
                    JOptionPane.showMessageDialog(null, "Erro, o corte da REF: "+ref+" não foi excluido!");
                }
                model.removeRow(linhaSelecionada);
                //total itens corte
                total_itens();
            }else{
                //não confirmou
            }

        }
        else{ //se linha não estiver selecionada
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
        }   // fim linha selecionada
    }//GEN-LAST:event_btn_ExcluirActionPerformed

    private void btn_ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListarActionPerformed
        // TODO add your handling code here:
        jTable_Corte.setRowSorter(null);
        String tipo_pedido;
                         if (jRadioButton_especial.isSelected()){
                             tipo_pedido="ESPECIAL";
                         }else if (jRadioButton_div.isSelected()){
                             tipo_pedido="DIVERSOS";
                         }else{
                             tipo_pedido="TODOS";
                         }
                         
        listar_corte(tipo_pedido);
        
        total_itens();
    }//GEN-LAST:event_btn_ListarActionPerformed

    private void btn_Limpar_ListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Limpar_ListaActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel();

        model.setNumRows(0);
        //String[] linha = new String[]{"Pedro", "15" , "Masculino"};
        //model.addRow(linha);
    }//GEN-LAST:event_btn_Limpar_ListaActionPerformed

    private void txt_refFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_refFocusLost
        // TODO add your handling code here:
        //zerando alguns campos e tabelas
        
        txt_total_itens_saldo.setText("");
        txt_total_itens_venda.setText("");
        txt_total_itens_estoque.setText("");
        txt_total_itens.setText("");
                    //DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel(); 
                    //model.setNumRows(0);
                    
                     DefaultTableModel modelCorte =  (DefaultTableModel) jTable_VENDA_CORTE.getModel();
                     modelCorte.setNumRows(0);
                     
                     DefaultTableModel modelVenda =  (DefaultTableModel) jTable_VENDA.getModel();
                     modelVenda.setNumRows(0);
                     
                     DefaultTableModel modelEstoque =  (DefaultTableModel) jTable_ESTOQUE.getModel();
                     modelEstoque.setNumRows(0);
        
        //fim zerar
        
        
        jTable_Corte.setRowSorter(null);
        //****PEGANDO COR DAS REFERENCIAS ****
        EstoqueDAO dao = new EstoqueDAO();
        jComboBox_Cor.removeAllItems();
        //pegando dados da referencia inserida
        Integer qtd_cores, qtd_tamanho, costas, manga;
        
        for (ProdutoDTO p : dao.getCoresRef(txt_ref.getText())) {
            qtd_cores = Integer.parseInt(p.getQtd_cores().toString());
            qtd_tamanho = Integer.parseInt(p.getQtd_tamanho().toString());
            costas = Integer.parseInt(p.getCostas().toString());
            manga = Integer.parseInt(p.getManga().toString());
            txt_qtd_cores.setText(qtd_cores.toString());
            txt_qtd_tamanho.setText(qtd_tamanho.toString());
            txt_tipo_tamanho.setText(p.getTipo_tamanho());
            txt_costas.setText(costas.toString());
            txt_manga.setText(manga.toString());
            

            //adicionando cores na combobox
            jComboBox_Cor.addItem("TODAS");
            //passando codigo e combobox para add.
            tdgCTR.cores_ref(txt_ref.getText(), jComboBox_Cor);
                    
            
        }

        
        
        String ref = txt_ref.getText();
        //tipo_pedido
        String tipo_pedido;
        if (jRadioButton_especial.isSelected()){
            tipo_pedido="ESPECIAL";
        }else if (jRadioButton_div.isSelected()){
            tipo_pedido="DIVERSOS";
        }else{
            tipo_pedido="TODOS";
        }
        
        
        if (jCheckBox_data_entrega.isSelected()){ //se data_entrega
            String data_entrega = txt_data_entrega.getText();
            //SALDO VENDA COM DATA
            listar_saldo_vendas_menos_corteData(ref, tipo_pedido, data_entrega);
            
            //LISTANDO VENDAS
            listar_venda_por_refData(ref, tipo_pedido, data_entrega);
            //FIM LISTAR VENDAS
            
            //*igual sem data marcada
            //LISTANDO SALDO DO ESTOQUE (VENDAS - ESTOQUE)
                listar_saldo_vendas_menos_estoque(ref, tipo_pedido);
            //FIM
            
        }else{ //trazer tudo
            
                //LISTANDO SALDO VENDAS - CORTE
                listar_saldo_vendas_menos_corte(ref, tipo_pedido);
                //FIM LISTAR SALDO: VENDAS - CORTE

                //LISTANDO ESTOQUE
                //listar_estoque_por_ref(ref);
                //FIM LISTANDO ESTOQUE

                //LISTANDO VENDAS
                listar_venda_por_ref(ref, tipo_pedido);
                //FIM LISTAR VENDAS

                //LISTANDO SALDO DO ESTOQUE (VENDAS - ESTOQUE)
                listar_saldo_vendas_menos_estoque(ref, tipo_pedido);
                //FIM
        
        }//fim data_entrega selecionado
        
        //LISTANDO CORTES

                listar_corte_por_ref(ref, tipo_pedido);
        
        //total itens_corte
        total_itens();
        
        
        
        //total itens SALDO: CORTE - VENDA
        txt_total_itens_saldo.setText(tdgCTR.calc_Total_Itens(jTable_VENDA_CORTE, 6));
        //total itens VENDA
        txt_total_itens_venda.setText(tdgCTR.calc_Total_Itens(jTable_VENDA, 6));
        //total itens ESTOQUE
        txt_total_itens_estoque.setText(tdgCTR.calc_Total_Itens(jTable_ESTOQUE, 6));
        
        
        String tipo_tamanho = txt_tipo_tamanho.getText();
        if (  tipo_tamanho.equals("ESPECIAL") || tipo_tamanho.equals("BABY") || tipo_tamanho.equals("KIDS")){
                        txt_t4_manual.setEnabled(false);
                        txt_t4_manual.setText("0");
        }else{//se nao for especial/BABY/KIDS
                        txt_t4_manual.setEnabled(true);
                        
        }
        
        //Mostrar Grade Normal ou Especial ou Manual
        if (jRadioButton_Manual.isSelected()){ //MANUAL selecionado.
                    jPanel_Grade_Especial.setVisible(false);
                    jPanel_Grade.setVisible(false);
                    //txt_t4.setText("0"); //nao tem manual.
                    jPanel_manual.setVisible(true);
                    //selecionar grade 0000
                    grade = "0000";
                    txt_qtd.setEnabled(false);
                    txt_qtd.setText("0");
                    
                    
                    
                    
                    
        }else{
        
        txt_qtd.setEnabled(true);
        //Selecionar a grade padrão de cada ref
        String tipo = txt_tipo_tamanho.getText();
        switch (tipo) {
                case "ESPECIAL":
                {
                    //se for especial, desativar t4
                    jPanel_Grade_Especial.setVisible(true);
                    jPanel_Grade.setVisible(false);
                    //txt_t4.setText("0"); //nao tem manual.
                    jPanel_manual.setVisible(false);
                    
                    jRadioButton111.setSelected(true);
                    //selecionar grade 1 1 1
                     grade = "111";//seta grade para gravar, se mudar manual, a grade muda pelo action()
                    break;
                }
                case "BABY":
                {
                    //se for BABY, desativar t4
                    jPanel_Grade_Especial.setVisible(true);
                    jPanel_Grade.setVisible(false);
                    //txt_t4.setText("0"); //nao tem manual.
                    jPanel_manual.setVisible(false);
                    
                    jRadioButton111.setSelected(true);
                    //selecionar grade 1 1 1
                     grade = "111";//seta grade para gravar, se mudar manual, a grade muda pelo action()
                    break;
                }
                case "KIDS":
                {
                    //se for KIDS, desativar t4
                    jPanel_Grade_Especial.setVisible(true);
                    jPanel_Grade.setVisible(false);
                    //txt_t4.setText("0"); //nao tem manual.
                    jPanel_manual.setVisible(false);
                    
                    jRadioButton111.setSelected(true);
                    //selecionar grade 1 1 1
                     grade = "111";//seta grade para gravar, se mudar manual, a grade muda pelo action()
                    break;
                }
                case "JUVENIL":
                {
                    jPanel_Grade_Especial.setVisible(false);
                    jPanel_Grade.setVisible(true);
                    jPanel_manual.setVisible(false);
                    
                    jRadioButton1111.setSelected(true);
                    
                    //selecionar grade 1 1 1 1
                    grade = "1111";
                    break;
                }
                default:{//NORMAL (Adulto)
                    
                    jPanel_Grade_Especial.setVisible(false);
                    jPanel_Grade.setVisible(true);
                    jPanel_manual.setVisible(false);
                    
                    jRadioButton1221.setSelected(true);
                    
                    //selecionar grade 1 2 2 1
                    grade = "1221";
                }
        
        }//fim switch 
        }//fim if
        
        
    }//GEN-LAST:event_txt_refFocusLost

    //caso for grade normal (sobra está sendo adicionada no padrao 1221, se quiser mudar, criar especifico igual no grade_especial)
    public void grade_normal(){
        // DIVIDIR POR GRADE
        double t1 = 0,t2 = 0,t3 = 0,t4 = 0;
        Integer divisor; 
        Integer qtd_tamanho = Integer.parseInt(txt_qtd_tamanho.getText());
        Double qtd_total = Double.parseDouble(txt_qtd.getText());
        double qtd_divisoria;
        Integer qtd_divisoria_integer;
        double sobra_divisoria;
        Integer sobra_divisoria_integer;
        //se for grade 1111
        if (jRadioButton1111.isSelected()) {
            divisor = qtd_tamanho; 
        }else{ //se for qualquer uma outra
            divisor = 6;
        }
        
        qtd_divisoria = qtd_total/divisor;
        qtd_divisoria_integer = (int) (qtd_divisoria);
        sobra_divisoria = (qtd_divisoria - qtd_divisoria_integer)*divisor; 
        sobra_divisoria_integer = (int) (Math.round(sobra_divisoria));
        System.out.println("Qtd Total: "+qtd_total+" Qtd_divisoria: "+qtd_divisoria+" Divisor: "+divisor);
        System.out.println("Sobra divisoria: "+sobra_divisoria);
        
        
        if (jRadioButton1111.isSelected()) {
            
                t1 = qtd_divisoria_integer;
                t2 = qtd_divisoria_integer;
                t3 = qtd_divisoria_integer;
                t4 = qtd_divisoria_integer;
                //gradeSet="1111";
        }
        
        if (jRadioButton1122.isSelected()){
                t1 = qtd_divisoria_integer;
                t2 = qtd_divisoria_integer;
                t3 = qtd_divisoria_integer*2;
                t4 = qtd_divisoria_integer*2;
        }
        
        if (jRadioButton1221.isSelected()){
                t1 = qtd_divisoria_integer;
                t2 = qtd_divisoria_integer*2;
                t3 = qtd_divisoria_integer*2;
                t4 = qtd_divisoria_integer;
         }
        
        if (jRadioButton2112.isSelected()){
                t1 = qtd_divisoria_integer*2;
                t2 = qtd_divisoria_integer;
                t3 = qtd_divisoria_integer;
                t4 = qtd_divisoria_integer*2;
        }
        
        if (jRadioButton2211.isSelected()){
                t1 = qtd_divisoria_integer*2;
                t2 = qtd_divisoria_integer*2;
                t3 = qtd_divisoria_integer;
                t4 = qtd_divisoria_integer;
         }
        
        
        
        //como ficou grade sem adicionar a sobra
        System.out.println("Grade sem adicionar sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
        //adicionando sobras 
        if (qtd_tamanho==4) {
                    switch (sobra_divisoria_integer) {
                        case 1:
                        {   System.out.println("Sobro 1");
                            t1 = t1;
                            t2 = t2+1;//+
                            t3 = t3;
                            t4 = t4;
                            break;
                        }
                        case 2:
                        {   System.out.println("Sobro 2");
                            t1 = t1;
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = t4;
                            break;
                        }
                        case 3:
                        {   System.out.println("Sobro 3");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = t4;
                            break;
                        }
                        case 4:
                        {   System.out.println("Sobro 4");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = t4+1;//+
                            break;
                        }
                        case 5:
                        {   System.out.println("Sobro 5");
                            t1 = t1+1;//+
                            t2 = t2+2;//+
                            t3 = t3+1;//+
                            t4 = t4+1;//+
                            break;
                        }
                         default:{
                          System.out.println("Sobro 0, qtd iguais");
                          t1 = t1;
                          t2 = t2;
                          t3 = t3;
                          t4 = t4;
                        }
                    }
        }//fim tamanho = 4            
        
            System.out.println("Grade com sobra:");
            System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);

            
                                        Integer t1_int = (int) t1;
                                        String t1_str = t1_int.toString();

                                        Integer t2_int = (int) t2;
                                        String t2_str = t2_int.toString();
                                        
                                        Integer t3_int = (int) t3;
                                        String t3_str = t3_int.toString();
                                        
                                        Integer t4_int = (int) t4;
                                        String t4_str = t4_int.toString();
                                        
                                           
                                        txt_t1.setText((t1_str));
                                        txt_t2.setText((t2_str));
                                        txt_t3.setText((t3_str));
                                        txt_t4.setText((t4_str));   
            
    }
    
    private void atualizar_saldo_corte(){
         String ref = txt_ref.getText();
        //tipo_pedido
        String tipo_pedido;
        if (jRadioButton_especial.isSelected()){
            tipo_pedido="ESPECIAL";
        }else if (jRadioButton_div.isSelected()){
            tipo_pedido="DIVERSOS";
        }else{
            tipo_pedido="TODOS";
        }
        
        
        if (jCheckBox_data_entrega.isSelected()){ //se data_entrega
            String data_entrega = txt_data_entrega.getText();
            //SALDO VENDA COM DATA
            listar_saldo_vendas_menos_corteData(ref, tipo_pedido, data_entrega);
            
            
        }else{ //trazer tudo
            
                //LISTANDO SALDO VENDAS - CORTE
                listar_saldo_vendas_menos_corte(ref, tipo_pedido);
                //FIM LISTAR SALDO: VENDAS - CORTE

        
        }//fim data_entrega selecionado
        
        //total itens SALDO: CORTE - VENDA
        txt_total_itens_saldo.setText(tdgCTR.calc_Total_Itens(jTable_VENDA_CORTE, 6));
    }
   
    
    private void btn_Cadastrar_CorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Cadastrar_CorteActionPerformed
        // TODO add your handling code here:
        
        //**********SE ALTERAR, ALTERAR TB EM SE FOR 1 COR NO ELSE(LÁ EM BAIXO) ***************
        
        CorteDTO corte = new CorteDTO();
        
        //Adicionando processo em producao 
        ProducaoDTO producao = new ProducaoDTO();
        
        int qtd_cor = jComboBox_Cor.getItemCount()-1;
        int costas = Integer.parseInt(txt_costas.getText());
        int manga = Integer.parseInt(txt_manga.getText());
        
        

        String tipo = txt_tipo_tamanho.getText();
        
        int t1 = 0;
        int t2 = 0;
        int t3 = 0;
        int t4 = 0;
        
        
        
        //verificar se é grade ou manual
        if (jRadioButton_Manual.isSelected()){
            
            if (txt_t1_manual.getText().isEmpty() || txt_t2_manual.getText().isEmpty() || txt_t3_manual.getText().isEmpty() || txt_t4_manual.getText().isEmpty()){
                
                JOptionPane.showMessageDialog(null, "Complete os tamanhos manuais");
                
            }else{//campos completados
                
            
            
            
                    t1 = Integer.parseInt(txt_t1_manual.getText());
                    t2 = Integer.parseInt(txt_t2_manual.getText());
                    t3 = Integer.parseInt(txt_t3_manual.getText());

                    if (tipo.equals("ESPECIAL") || tipo.equals("BABY") || tipo.equals("KIDS")){
                        t4 = 0;
                    }else{
                        t4 = Integer.parseInt(txt_t4_manual.getText());
                    }
                    Integer total = t1+t2+t3+t4;
                    txt_qtd.setText(total.toString());
                    
                    
            }
            
        }
        else{//se não (grade selecionada)
            
        
            if (tipo.equals("ESPECIAL")  || tipo.equals("BABY") || tipo.equals("KIDS") ) {
                    System.err.println("Especial/BABY/KIDS");
                    grade_especial();//faz conta certa de sobra
            }else{
                System.err.println("Normal / Juvenil");
                grade_normal();//se sobrar, sobra = grade 1221
            }


            t1 = Integer.parseInt(txt_t1.getText());
            t2 = Integer.parseInt(txt_t2.getText());
            t3 = Integer.parseInt(txt_t3.getText());
            t4 = Integer.parseInt(txt_t4.getText());
        }//fim grade 
        
        
        corte.setT1(t1);
        corte.setT2(t2);
        corte.setT3(t3);
        corte.setT4(t4);
        
        corte.setProgramado("NAO");
        //fim setar tamanhos
        
        
        //se selecionado TODAS
        if((jComboBox_Cor.getSelectedItem().equals("TODAS"))){
            
        //adicionando todas as cores no processo de producao/corte
            for (int y = 1; y <= qtd_cor; y++) {
                
                //pegando cor correta
                /*if  ((jToggleButton_COR.isSelected())){
                    
                    if((jComboBox_Cor.getSelectedItem()=="TODAS")){
                        producao.setCor(jComboBox_Cor.getItemAt(y).toString());
                        corte.setCor(jComboBox_Cor.getItemAt(y).toString());
                    }else{
                        producao.setCor(jComboBox_Cor.getSelectedItem().toString());
                        corte.setCor(jComboBox_Cor.getSelectedItem().toString());
                    }

                }else{//se cor não está sendo editado
                */    
                    producao.setCor(jComboBox_Cor.getItemAt(y).toString());
                    corte.setCor(jComboBox_Cor.getItemAt(y).toString());
                //}
                 
                
                
                   // corte, codigo, cor, frente, costas, manga, status, data_alteracao, data_inicio, qtd
                   
                   producao.setCorte(jComboBox_Corte.getSelectedItem().toString());
                   producao.setCodigo(txt_ref.getText());
                   //producao.setCor(jComboBox_Cor.getSelectedItem().toString());
                   //producao.setProcesso("CORTE");
                   producao.setFrente("CORTE");
                   //ADICIONAR IF SE TXT_COSTAS = 1 ("CORTE");
                   if (costas == 1){
                       producao.setCostas("CORTE");
                   }else{
                       producao.setCostas("");
                   }
                   if (manga == 1){
                       producao.setManga("CORTE");
                   }else{
                       producao.setManga("");
                   }
                   
                   producao.setStatus("ATIVO");
                   
                   Timestamp time = new Timestamp(System.currentTimeMillis());  
                   producao.setData_alteracao(time);
                   //DATA INICIO PEGO PELO BANCO
                   producao.setQtd(Integer.parseInt(txt_qtd.getText()));
                   
                   
                   //corte
                   corte.setData_corte(txt_data.getText());
                   corte.setCodigo(txt_ref.getText());
                   //corte.setCor(jComboBox_Cor.getSelectedItem().toString());
                   corte.setQtd(Integer.parseInt(txt_qtd.getText()));

                   corte.setCorte(jComboBox_Corte.getSelectedItem().toString());
                   System.out.println("Jcombo: "+jComboBox_Corte.getSelectedItem().toString());

                   //tipo_pedido
                   String tipo_pedido = null;
                   if (jRadioButton_especial.isSelected()==true){
                       tipo_pedido="ESPECIAL";
                   }
                   else{//se for DIV ou TODOS, vai cadastrar como div
                       tipo_pedido="DIVERSOS";
                   }
                   corte.setTipo_pedido(tipo_pedido);
                   producao.setTipo_pedido(tipo_pedido);
                   producao.setEtiqueta("NAO");
                   
                   
                   corte.setInfesto("NÃO FEITO");
                   
                   corte.setGrade(grade);
                   
                       //instanciando ProduçãoDAO
                       ProducaoDAO daoProd = new ProducaoDAO();
                       
                       CorteDAO dao = new CorteDAO();
                       if (dao.adicionaCorte(corte)){
                           //listando item pedido adicionado


                                DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel();
                                model.addRow(new Object[]{corte.getId(),corte.getData_corte(), corte.getCodigo(), corte.getCor(), corte.getQtd(), corte.getCorte(), corte.getT1(), corte.getT2(), corte.getT3(), corte.getT4(), corte.getTipo_pedido(), corte.getGrade()});
                                total_itens();

                                //setando ID do corte em producao
                                producao.setId(corte.getId());
                                //adicionando processo em Produção
                                daoProd.adicionaProducao(producao);

                                


                       }
                       else {
                           JOptionPane.showMessageDialog(null, "Erro, o corte da ref: "+txt_ref.getText()+" não foi adicionado! ");
                       }
                
                
                
            }//fim for
        }//fim se for TODAS CORES
  //*********UMA COR ****************************
        else{//se for uma cor especifica
            
            
            // corte, codigo, cor, frente, costas, manga, status, data_alteracao, data_inicio, qtd
                   
                   producao.setCorte(jComboBox_Corte.getSelectedItem().toString());
                   producao.setCodigo(txt_ref.getText());
                   producao.setCor(jComboBox_Cor.getSelectedItem().toString());
                   //producao.setProcesso("CORTE");
                   producao.setFrente("CORTE");
                   
                   //ADICIONAR IF SE TXT_COSTAS = 1 ("CORTE");
                   producao.setCostas("");
                   producao.setManga("");
                   producao.setStatus("ATIVO");
                   
                   Timestamp time = new Timestamp(System.currentTimeMillis());  
                   producao.setData_alteracao(time);
                   //DATA INICIO PEGO PELO BANCO
                   producao.setQtd(Integer.parseInt(txt_qtd.getText()));
                   
                   

                   //corte
                   corte.setData_corte(txt_data.getText());
                   corte.setCodigo(txt_ref.getText());
                   corte.setCor(jComboBox_Cor.getSelectedItem().toString());
                   corte.setQtd(Integer.parseInt(txt_qtd.getText()));

                   corte.setCorte(jComboBox_Corte.getSelectedItem().toString());
                   System.out.println("Jcombo: "+jComboBox_Corte.getSelectedItem().toString());

                       //tipo_pedido
                   String tipo_pedido = null;
                   if (jRadioButton_especial.isSelected()==true){
                       tipo_pedido="ESPECIAL";
                   }
                   else{//se for DIV ou TODOS, vai cadastrar como div
                       tipo_pedido="DIVERSOS";
                   }
                   corte.setTipo_pedido(tipo_pedido);
                   producao.setTipo_pedido(tipo_pedido);
                   producao.setEtiqueta("NAO");
                   
                   
                   corte.setInfesto("NÃO FEITO");
                   corte.setGrade(grade);
                       //instanciando ProduçãoDAO
                       ProducaoDAO daoProd = new ProducaoDAO();

                       CorteDAO dao = new CorteDAO();
                       if (dao.adicionaCorte(corte)){
                           //listando item pedido adicionado


                                DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel();
                                model.addRow(new Object[]{corte.getId(),corte.getData_corte(), corte.getCodigo(), corte.getCor(), corte.getQtd(), corte.getCorte(), corte.getT1(), corte.getT2(), corte.getT3(), corte.getT4(), corte.getTipo_pedido(), corte.getGrade()});
                                total_itens();


                                //setando ID do corte em producao
                                producao.setId(corte.getId());
                                //adicionando processo em Produção
                                daoProd.adicionaProducao(producao);

                                


                       }
                       else {
                           JOptionPane.showMessageDialog(null, "Erro, o corte da ref: "+txt_ref.getText()+" não foi adicionado! ");
                       }
            
            
        }
        
        atualizar_saldo_corte();
        
        //zerando campos
                                txt_ref.setText("");
                                jComboBox_Cor.removeAllItems();
                                txt_qtd.setText("");
                                //zerando e adicionando DIV
                                



                                //voltando foco na ref
                                txt_ref.requestFocus();
       
        
    }//GEN-LAST:event_btn_Cadastrar_CorteActionPerformed

    public void grade_especial(){
        double t1 = 0,t2 = 0,t3 = 0, t4 = 0;
        Integer divisor; 
        Integer qtd_tamanho = Integer.parseInt(txt_qtd_tamanho.getText());
        Double qtd_total = Double.parseDouble(txt_qtd.getText());
        double qtd_divisoria;
        Integer qtd_divisoria_integer;
        double sobra_divisoria;
        Integer sobra_divisoria_integer;
        
        
        if (jRadioButton111.isSelected()) {
                     divisor = qtd_tamanho;
                    qtd_divisoria = qtd_total/divisor;
                    qtd_divisoria_integer = (int) (qtd_divisoria);
                    sobra_divisoria = (qtd_divisoria - qtd_divisoria_integer)*divisor; 
                    sobra_divisoria_integer = (int) (Math.round(sobra_divisoria));
                    System.out.println("Qtd Total: "+qtd_total+" Qtd_divisoria: "+qtd_divisoria+" Divisor: "+divisor);
                    System.out.println("Sobra divisoria: "+sobra_divisoria);
                t1 = qtd_divisoria_integer;
                t2 = qtd_divisoria_integer;
                t3 = qtd_divisoria_integer;
                t4 = 0;
                        //como ficou grade sem adicionar a sobra
        System.out.println("Grade sem adicionar sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
            
        //adicionando sobras 
       
                    switch (sobra_divisoria_integer) {
                        case 1:
                        {   System.out.println("Sobro 1");
                            t1 = t1;
                            t2 = t2+1;//+
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 2:
                        {   System.out.println("Sobro 2");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 3:
                        {   System.out.println("Sobro 3");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 4:
                        {   System.out.println("Sobro 4");
                            t1 = t1+2;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 5:
                        {   System.out.println("Sobro 5");
                            t1 = t1+2;//+
                            t2 = t2+2;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                         default:{
                          System.out.println("Sobro 0, qtd iguais");
                          t1 = t1;
                          t2 = t2;
                          t3 = t3;
                          t4 = 0;
                        }
                    }
       
        
        System.out.println("Grade com sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
                                        Integer t1_int = (int) t1;
                                        String t1_str = t1_int.toString();

                                        Integer t2_int = (int) t2;
                                        String t2_str = t2_int.toString();
                                        
                                        Integer t3_int = (int) t3;
                                        String t3_str = t3_int.toString();
                                        
                                        Integer t4_int = (int) t4;
                                        String t4_str = t4_int.toString();
                                        
                                        
                                        
                                        txt_t1.setText((t1_str));
                                        txt_t2.setText((t2_str));
                                        txt_t3.setText((t3_str));
                                        txt_t4.setText((t4_str));
        }
        
        if (jRadioButton112.isSelected()){
                    divisor = 4;
                    qtd_divisoria = qtd_total/divisor;
                    qtd_divisoria_integer = (int) (qtd_divisoria);
                    sobra_divisoria = (qtd_divisoria - qtd_divisoria_integer)*divisor; 
                    sobra_divisoria_integer = (int) (Math.round(sobra_divisoria));
                    System.out.println("Qtd Total: "+qtd_total+" Qtd_divisoria: "+qtd_divisoria+" Divisor: "+divisor);
                    System.out.println("Sobra divisoria: "+sobra_divisoria);
                t1 = qtd_divisoria_integer;
                t2 = qtd_divisoria_integer;
                t3 = qtd_divisoria_integer*2;
                t4 = 0;
                        //como ficou grade sem adicionar a sobra
        System.out.println("Grade sem adicionar sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
        //adicionando sobras 
        
                    switch (sobra_divisoria_integer) {
                        case 1:
                        {   System.out.println("Sobro 1");
                            t1 = t1;
                            t2 = t2;
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 2:
                        {   System.out.println("Sobro 2");
                            t1 = t1+1;//+
                            t2 = t2;
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 3:
                        {   System.out.println("Sobro 3");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 4:
                        {   System.out.println("Sobro 4");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+2;//+
                            t4 = 0;
                            break;
                        }
                        case 5:
                        {   System.out.println("Sobro 5");
                            t1 = t1+2;//+
                            t2 = t2+1;//+
                            t3 = t3+2;//+
                            t4 = 0;
                            break;
                        }
                         default:{
                          System.out.println("Sobro 0, qtd iguais");
                          t1 = t1;
                          t2 = t2;
                          t3 = t3;
                          t4 = 0;
                        }
                    }//fim sobra
      
        
        System.out.println("Grade com sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
                                        Integer t1_int = (int) t1;
                                        String t1_str = t1_int.toString();

                                        Integer t2_int = (int) t2;
                                        String t2_str = t2_int.toString();
                                        
                                        Integer t3_int = (int) t3;
                                        String t3_str = t3_int.toString();
                                        
                                        Integer t4_int = (int) t4;
                                        String t4_str = t4_int.toString();
                                        
                                        
                                        
                                        txt_t1.setText((t1_str));
                                        txt_t2.setText((t2_str));
                                        txt_t3.setText((t3_str));
                                        txt_t4.setText((t4_str));
        }
        
        if (jRadioButton122.isSelected()){
                    divisor = 5;
                    qtd_divisoria = qtd_total/divisor;
                    qtd_divisoria_integer = (int) (qtd_divisoria);
                    sobra_divisoria = (qtd_divisoria - qtd_divisoria_integer)*divisor; 
                    sobra_divisoria_integer = (int) (Math.round(sobra_divisoria));
                    System.out.println("Qtd Total: "+qtd_total+" Qtd_divisoria: "+qtd_divisoria+" Divisor: "+divisor);
                    System.out.println("Sobra divisoria: "+sobra_divisoria);
                t1 = qtd_divisoria_integer;
                t2 = qtd_divisoria_integer*2;
                t3 = qtd_divisoria_integer*2;
                t4 = 0;
                        //como ficou grade sem adicionar a sobra
        System.out.println("Grade sem adicionar sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
            //adicionando sobras 
        
                    switch (sobra_divisoria_integer) {
                        case 1:
                        {   System.out.println("Sobro 1");
                            t1 = t1;
                            t2 = t2+1;//+
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 2:
                        {   System.out.println("Sobro 2");
                            t1 = t1;
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 3:
                        {   System.out.println("Sobro 3");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 4:
                        {   System.out.println("Sobro 4");
                            t1 = t1+1;//+
                            t2 = t2+2;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 5:
                        {   System.out.println("Sobro 5");
                            t1 = t1+1;//+
                            t2 = t2+2;//+
                            t3 = t3+2;//+
                            t4 = 0;
                            break;
                        }
                         default:{
                          System.out.println("Sobro 0, qtd iguais");
                          t1 = t1;
                          t2 = t2;
                          t3 = t3;
                          t4 = 0;
                        }
                    }//fim sobra
        System.out.println("Grade com sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
                                        Integer t1_int = (int) t1;
                                        String t1_str = t1_int.toString();

                                        Integer t2_int = (int) t2;
                                        String t2_str = t2_int.toString();
                                        
                                        Integer t3_int = (int) t3;
                                        String t3_str = t3_int.toString();
                                        
                                        Integer t4_int = (int) t4;
                                        String t4_str = t4_int.toString();
                                        
                                        
                                        
                                        txt_t1.setText((t1_str));
                                        txt_t2.setText((t2_str));
                                        txt_t3.setText((t3_str));
                                        txt_t4.setText((t4_str));
        }
        
        if (jRadioButton211.isSelected()){
                    divisor = 4;
                    qtd_divisoria = qtd_total/divisor;
                    qtd_divisoria_integer = (int) (qtd_divisoria);
                    sobra_divisoria = (qtd_divisoria - qtd_divisoria_integer)*divisor; 
                    sobra_divisoria_integer = (int) (Math.round(sobra_divisoria));
                    System.out.println("Qtd Total: "+qtd_total+" Qtd_divisoria: "+qtd_divisoria+" Divisor: "+divisor);
                    System.out.println("Sobra divisoria: "+sobra_divisoria);
                t1 = qtd_divisoria_integer*2;
                t2 = qtd_divisoria_integer;
                t3 = qtd_divisoria_integer;
                t4 = 0;
                        //como ficou grade sem adicionar a sobra
        System.out.println("Grade sem adicionar sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
        //adicionando sobras 
        
                    switch (sobra_divisoria_integer) {
                        case 1:
                        {   System.out.println("Sobro 1");
                            t1 = t1+1;//+
                            t2 = t2;
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 2:
                        {   System.out.println("Sobro 2");
                            t1 = t1+1;//+;
                            t2 = t2+1;//+
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 3:
                        {   System.out.println("Sobro 3");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 4:
                        {   System.out.println("Sobro 4");
                            t1 = t1+2;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 5:
                        {   System.out.println("Sobro 5");
                            t1 = t1+2;//+
                            t2 = t2+2;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                         default:{
                          System.out.println("Sobro 0, qtd iguais");
                          t1 = t1;
                          t2 = t2;
                          t3 = t3;
                          t4 = 0;
                        }
                    }//fim sobra
                    
                    System.out.println("Grade com sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
                                        Integer t1_int = (int) t1;
                                        String t1_str = t1_int.toString();

                                        Integer t2_int = (int) t2;
                                        String t2_str = t2_int.toString();
                                        
                                        Integer t3_int = (int) t3;
                                        String t3_str = t3_int.toString();
                                        
                                        Integer t4_int = (int) t4;
                                        String t4_str = t4_int.toString();
                                        
                                        
                                        
                                        txt_t1.setText((t1_str));
                                        txt_t2.setText((t2_str));
                                        txt_t3.setText((t3_str));
                                        txt_t4.setText((t4_str));
        }
        
        if (jRadioButton221.isSelected()){
                    divisor = 5;
                    qtd_divisoria = qtd_total/divisor;
                    qtd_divisoria_integer = (int) (qtd_divisoria);
                    sobra_divisoria = (qtd_divisoria - qtd_divisoria_integer)*divisor; 
                    sobra_divisoria_integer = (int) (Math.round(sobra_divisoria));
                    System.out.println("Qtd Total: "+qtd_total+" Qtd_divisoria: "+qtd_divisoria+" Divisor: "+divisor);
                    System.out.println("Sobra divisoria: "+sobra_divisoria);
                t1 = qtd_divisoria_integer*2;
                t2 = qtd_divisoria_integer*2;
                t3 = qtd_divisoria_integer;
                t4 = 0;
                
                //como ficou grade sem adicionar a sobra
        System.out.println("Grade sem adicionar sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
         
                
                 //adicionando sobras 
        
                    switch (sobra_divisoria_integer) {
                        case 1:
                        {   System.out.println("Sobro 1");
                            t1 = t1+1;//+
                            t2 = t2;
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 2:
                        {   System.out.println("Sobro 2");
                            t1 = t1+1;//+;
                            t2 = t2+1;//+
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 3:
                        {   System.out.println("Sobro 3");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 4:
                        {   System.out.println("Sobro 4");
                            t1 = t1+2;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 5:
                        {   System.out.println("Sobro 5");
                            t1 = t1+2;//+
                            t2 = t2+2;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                         default:{
                          System.out.println("Sobro 0, qtd iguais");
                          t1 = t1;
                          t2 = t2;
                          t3 = t3;
                          t4 = 0;
                        }
                    }//fim sobra
        
        System.out.println("Grade com sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
                                        Integer t1_int = (int) t1;
                                        String t1_str = t1_int.toString();

                                        Integer t2_int = (int) t2;
                                        String t2_str = t2_int.toString();
                                        
                                        Integer t3_int = (int) t3;
                                        String t3_str = t3_int.toString();
                                        
                                        Integer t4_int = (int) t4;
                                        String t4_str = t4_int.toString();
                                        
                                        
                                        
                                        txt_t1.setText((t1_str));
                                        txt_t2.setText((t2_str));
                                        txt_t3.setText((t3_str));
                                        txt_t4.setText((t4_str));
        }
        
        
        if (jRadioButton121.isSelected()){
                    divisor = 4;
                    qtd_divisoria = qtd_total/divisor;
                    qtd_divisoria_integer = (int) (qtd_divisoria);
                    sobra_divisoria = (qtd_divisoria - qtd_divisoria_integer)*divisor; 
                    sobra_divisoria_integer = (int) (Math.round(sobra_divisoria));
                    System.out.println("Qtd Total: "+qtd_total+" Qtd_divisoria: "+qtd_divisoria+" Divisor: "+divisor);
                    System.out.println("Sobra divisoria: "+sobra_divisoria);
                t1 = qtd_divisoria_integer;
                t2 = qtd_divisoria_integer*2;
                t3 = qtd_divisoria_integer;
                t4 = 0;
                
                //como ficou grade sem adicionar a sobra
        System.out.println("Grade sem adicionar sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
         
                
                 //adicionando sobras 
        
                    switch (sobra_divisoria_integer) {
                        case 1:
                        {   System.out.println("Sobro 1");
                            t1 = t1;
                            t2 = t2+1;//+
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 2:
                        {   System.out.println("Sobro 2");
                            t1 = t1+1;//+;
                            t2 = t2+1;//+
                            t3 = t3;
                            t4 = 0;
                            break;
                        }
                        case 3:
                        {   System.out.println("Sobro 3");
                            t1 = t1+1;//+
                            t2 = t2+1;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 4:
                        {   System.out.println("Sobro 4");
                            t1 = t1+1;//+
                            t2 = t2+2;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                        case 5:
                        {   System.out.println("Sobro 5");
                            t1 = t1+2;//+
                            t2 = t2+2;//+
                            t3 = t3+1;//+
                            t4 = 0;
                            break;
                        }
                         default:{
                          System.out.println("Sobro 0, qtd iguais");
                          t1 = t1;
                          t2 = t2;
                          t3 = t3;
                          t4 = 0;
                        }
                    }//fim sobra
        
        System.out.println("Grade com sobra:");
        System.out.println("T1: "+t1+" T2: "+t2+" T3: "+t3+" T4: "+t4);
        
                                        Integer t1_int = (int) t1;
                                        String t1_str = t1_int.toString();

                                        Integer t2_int = (int) t2;
                                        String t2_str = t2_int.toString();
                                        
                                        Integer t3_int = (int) t3;
                                        String t3_str = t3_int.toString();
                                        
                                        Integer t4_int = (int) t4;
                                        String t4_str = t4_int.toString();
                                        
                                        
                                        
                                        txt_t1.setText((t1_str));
                                        txt_t2.setText((t2_str));
                                        txt_t3.setText((t3_str));
                                        txt_t4.setText((t4_str));
        }
        
    }        
    
    
    private void jComboBox_CorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_CorKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            
            if (jRadioButton_Grade.isSelected()){
                txt_qtd.requestFocus();
            }else{
                jComboBox_Corte.requestFocus();
            }
                
            
        }
        
        if(evt.getKeyCode() == evt.VK_F2){
            remove_cor();
        }
        
    }//GEN-LAST:event_jComboBox_CorKeyPressed

    private void btn_Cadastrar_CorteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_Cadastrar_CorteFocusGained
        // TODO add your handling code here:
        tdgCTR geral = new tdgCTR();
        geral.reagirEnter(btn_Cadastrar_Corte);
    }//GEN-LAST:event_btn_Cadastrar_CorteFocusGained

    private void txt_refFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_refFocusGained
        // TODO add your handling code here:
        /*
        txt_total_itens_saldo.setText("");
        txt_total_itens_venda.setText("");
        txt_total_itens_estoque.setText("");
        txt_total_itens.setText("");
                    //DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel(); 
                    //model.setNumRows(0);
                    
                     DefaultTableModel modelCorte =  (DefaultTableModel) jTable_VENDA_CORTE.getModel();
                     modelCorte.setNumRows(0);
                     
                     DefaultTableModel modelVenda =  (DefaultTableModel) jTable_VENDA.getModel();
                     modelVenda.setNumRows(0);
                     
                     DefaultTableModel modelEstoque =  (DefaultTableModel) jTable_ESTOQUE.getModel();
                     modelEstoque.setNumRows(0);
        */
    }//GEN-LAST:event_txt_refFocusGained

    private void txt_ref_pesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ref_pesquisarKeyPressed
        // TODO add your handling code here:
                    if(evt.getKeyCode() == evt.VK_ENTER){

                           String ref_pesquisar = txt_ref_pesquisar.getText();

                   if ( (ref_pesquisar.equals("")) || (ref_pesquisar==null) ){
                       JOptionPane.showMessageDialog(null, "Insira uma ref!");
                       txt_ref_pesquisar.requestFocus();
                   }else{
                        String tipo_pedido;
                         if (jRadioButton_especial.isSelected()){
                             tipo_pedido="ESPECIAL";
                         }else if (jRadioButton_div.isSelected()){
                             tipo_pedido="DIVERSOS";
                         }else{
                             tipo_pedido="TODOS";
                         }    
                   listar_corte_por_ref(ref_pesquisar, tipo_pedido);
                   total_itens();
                   }
            
        }
    }//GEN-LAST:event_txt_ref_pesquisarKeyPressed

    private void jRadioButton1111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1111ActionPerformed
        // TODO add your handling code here:
        grade = "1111";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton1111ActionPerformed

    private void jRadioButton1221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1221ActionPerformed
        // TODO add your handling code here:
        //btn_Dividir_Grade.requestFocus();
        grade = "1221";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton1221ActionPerformed

    private void jRadioButton1122ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1122ActionPerformed
        // TODO add your handling code here:
        //btn_Dividir_Grade.requestFocus();
        grade = "1122";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton1122ActionPerformed

    private void jRadioButton2211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2211ActionPerformed
        // TODO add your handling code here:
        //btn_Dividir_Grade.requestFocus();
        grade = "2211";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton2211ActionPerformed

    private void jRadioButton2112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2112ActionPerformed
        // TODO add your handling code here:
       // btn_Dividir_Grade.requestFocus();
        grade = "2112";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton2112ActionPerformed

    private void jRadioButton111ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton111ActionPerformed
        // TODO add your handling code here:
        grade = "111";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton111ActionPerformed

    private void jRadioButton122ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton122ActionPerformed
        // TODO add your handling code here:
        grade = "122";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton122ActionPerformed

    private void jRadioButton112ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton112ActionPerformed
        // TODO add your handling code here:
        grade = "112";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton112ActionPerformed

    private void jRadioButton221ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton221ActionPerformed
        // TODO add your handling code here:
        grade = "221";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton221ActionPerformed

    private void jRadioButton211ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton211ActionPerformed
        // TODO add your handling code here:
        btn_Cadastrar_Corte.requestFocus();
        grade = "211";
    }//GEN-LAST:event_jRadioButton211ActionPerformed

    private void jRadioButton121ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton121ActionPerformed
        // TODO add your handling code here:
        grade = "121";
        btn_Cadastrar_Corte.requestFocus();
    }//GEN-LAST:event_jRadioButton121ActionPerformed

    private void btn_adicionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adicionaActionPerformed
        // TODO add your handling code here:
        
        
        
        if((jComboBox_Cores.getSelectedItem().equals("-"))){
            JOptionPane.showMessageDialog(null, "Cor invalida, selecione uma cor valida.");
        }else{
        String cor;
        cor = jComboBox_Cores.getSelectedItem().toString();
        jComboBox_Cor.addItem(cor);
        jComboBox_Cor.setSelectedIndex(0);
        jComboBox_Cores.setSelectedIndex(0);
        Integer qtd_cor = jComboBox_Cor.getItemCount()-1;//Diminuir 1 por causa do item 0 (TODOS)
        txt_qtd_cores.setText(qtd_cor.toString());
        }
    }//GEN-LAST:event_btn_adicionaActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        // TODO add your handling code here:
        
        remove_cor();
    }//GEN-LAST:event_btn_removeActionPerformed

    private void remove_cor(){
        if((jComboBox_Cor.getSelectedItem().equals("TODAS"))){
            
        }else{
        
        String cor;
        cor = jComboBox_Cor.getSelectedItem().toString();
        jComboBox_Cor.removeItem(cor);
        jComboBox_Cor.setSelectedIndex(0);
        Integer qtd_cor = jComboBox_Cor.getItemCount()-1;//Diminuir 1 por causa do item 0 (TODOS)
        txt_qtd_cores.setText(qtd_cor.toString());
        }
    }
    
    
    private void jRadioButton_todosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_todosActionPerformed
        // TODO add your handling code here:
        zerar_tabelas();
    }//GEN-LAST:event_jRadioButton_todosActionPerformed

    private void jRadioButton_divActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_divActionPerformed
        // TODO add your handling code here:
                     zerar_tabelas();
    }//GEN-LAST:event_jRadioButton_divActionPerformed

    private void jRadioButton_especialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_especialActionPerformed
        // TODO add your handling code here:
        zerar_tabelas();
    }//GEN-LAST:event_jRadioButton_especialActionPerformed

    private void jCheckBox_data_entregaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox_data_entregaStateChanged
        // TODO add your handling code here:
        if (jCheckBox_data_entrega.isSelected()){
            txt_data_entrega.setEnabled(true);
        }else{
            txt_data_entrega.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox_data_entregaStateChanged

    private void txt_total_itens_estoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_total_itens_estoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_total_itens_estoqueActionPerformed

    private void jTable_CortePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable_CortePropertyChange
        // TODO add your handling code here:
        CorteDTO cortes = new CorteDTO();
        if ("tableCellEditor".equals(evt.getPropertyName()))
		{
			if (jTable_Corte.isEditing()){
                        }	
                        else{
                            
                            Integer linhaSelecionada = -1;
                            linhaSelecionada = jTable_Corte.getSelectedRow();

                            if (linhaSelecionada >= 0) {
                                Integer id = (Integer) jTable_Corte.getValueAt(linhaSelecionada, 0);
                                Integer qtd = null, t1 = null, t2 = null, t3 = null, t4 = null;
                                
                                //VERIFICAR SE VALOR INFORMADO É VALIDO (QTD, T1, T2, T3, T4)
                                if (  !tdgCTR.isInt((String) jTable_Corte.getValueAt(linhaSelecionada, 4).toString()) || !tdgCTR.isInt((String) jTable_Corte.getValueAt(linhaSelecionada, 6).toString()) || !tdgCTR.isInt((String) jTable_Corte.getValueAt(linhaSelecionada, 7).toString()) || !tdgCTR.isInt((String) jTable_Corte.getValueAt(linhaSelecionada, 8).toString()) || !tdgCTR.isInt((String) jTable_Corte.getValueAt(linhaSelecionada, 9).toString())   ){
                                    System.err.println("Valor não é inteiro");
                                    JOptionPane.showMessageDialog(null, "Numero invalido\nNão atualizou");
                                    return;//STOP
                                }else{//se valor é Inteiro valido
                                    System.err.println("É inteiro");
                                    qtd = Integer.parseInt((String) jTable_Corte.getValueAt(linhaSelecionada, 4).toString());
                                    t1 = Integer.parseInt((String) jTable_Corte.getValueAt(linhaSelecionada, 6).toString());
                                    t2 = Integer.parseInt((String) jTable_Corte.getValueAt(linhaSelecionada, 7).toString());
                                    t3 = Integer.parseInt((String) jTable_Corte.getValueAt(linhaSelecionada, 8).toString());
                                    t4 = Integer.parseInt((String) jTable_Corte.getValueAt(linhaSelecionada, 9).toString());
                                    
                                }
                                
                                String data_corte = (String) jTable_Corte.getValueAt(linhaSelecionada, 1);
                                String corte = (String) jTable_Corte.getValueAt(linhaSelecionada, 5);
                                String tipo_pedido = (String) jTable_Corte.getValueAt(linhaSelecionada, 10);
                                
                                
                                
                                DefaultTableModel model =  (DefaultTableModel) jTable_Corte.getModel();
                                cortes.setId(id);//setar o id
                                cortes.setData_corte(data_corte);
                                cortes.setQtd(qtd);
                                cortes.setT1(t1);
                                cortes.setT2(t2);
                                cortes.setT3(t3);
                                cortes.setT4(t4);
                                cortes.setCorte(corte);
                                cortes.setTipo_pedido(tipo_pedido);
                                //cortes.setQtd_montado(qtd);
                                CorteDAO dao = new CorteDAO();
                                if (dao.atualizar(cortes)){
                                    //********ja atualiza os campos da tabela producao
                                    System.out.println("atualizado");
                                    //listar?
                                    
                                    
                                    
                                }
                                else {
                                    System.out.println("Não atualizou");
                                }
                                  
                                        
                                        
                            }else{
                                JOptionPane.showMessageDialog(null, "Selecione uma linha!");
                            }
                        }    
		}
    }//GEN-LAST:event_jTable_CortePropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new CorteCalcVIEW().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_Corte1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Corte1ActionPerformed
        // TODO add your handling code here:
        new CorteInfestoVIEW().setVisible(true);
    }//GEN-LAST:event_btn_Corte1ActionPerformed

    private void jRadioButton_GradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_GradeActionPerformed
        // TODO add your handling code here:
        //Selecionar a grade padrão de cada ref
        txt_qtd.setEnabled(true);
        String tipo = txt_tipo_tamanho.getText();
        switch (tipo) {
                case "ESPECIAL":
                {
                    //se for especial, desativar t4
                    jPanel_Grade_Especial.setVisible(true);
                    jPanel_Grade.setVisible(false);
                    //txt_t4.setText("0"); //nao tem manual.
                    jPanel_manual.setVisible(false);
                    
                    jRadioButton111.setSelected(true);
                    //selecionar grade 1 1 1
                     grade = "111";//seta grade para gravar, se mudar manual, a grade muda pelo action()
                    break;
                }
                case "JUVENIL":
                {
                    jPanel_Grade_Especial.setVisible(false);
                    jPanel_Grade.setVisible(true);
                    jPanel_manual.setVisible(false);
                    
                    jRadioButton1111.setSelected(true);
                    
                    //selecionar grade 1 1 1 1
                    grade = "1111";
                    break;
                }
                default:{//NORMAL (Adulto)
                    
                    jPanel_Grade_Especial.setVisible(false);
                    jPanel_Grade.setVisible(true);
                    jPanel_manual.setVisible(false);
                    
                    jRadioButton1221.setSelected(true);
                    
                    //selecionar grade 1 2 2 1
                    grade = "1221";
                }
        
        }
        
        
    }//GEN-LAST:event_jRadioButton_GradeActionPerformed

    private void jRadioButton_ManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_ManualActionPerformed
        // TODO add your handling code here:
        
        //Selecionar a grade padrão de cada ref
        
                    jPanel_Grade_Especial.setVisible(false);
                    jPanel_Grade.setVisible(false);
                    //txt_t4.setText("0"); //nao tem manual.
                    jPanel_manual.setVisible(true);
                    
                    txt_qtd.setEnabled(false);
                    txt_qtd.setText("0");
                    //selecionar grade 0000
                    grade = "0000";
                    
        
        
    }//GEN-LAST:event_jRadioButton_ManualActionPerformed

    private void txt_t1_manualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_t1_manualFocusLost
        // TODO add your handling code here:
        if (txt_t1_manual.getText().equals("")){
            txt_t1_manual.setText("0");
        }
        
    }//GEN-LAST:event_txt_t1_manualFocusLost

    private void txt_t2_manualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_t2_manualFocusLost
        // TODO add your handling code here:
        if (txt_t2_manual.getText().equals("")){
            txt_t2_manual.setText("0");
        }
    }//GEN-LAST:event_txt_t2_manualFocusLost

    private void txt_t3_manualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_t3_manualFocusLost
        // TODO add your handling code here:
        if (txt_t3_manual.getText().equals("")){
            txt_t3_manual.setText("0");
        }
    }//GEN-LAST:event_txt_t3_manualFocusLost

    private void txt_t4_manualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_t4_manualFocusLost
        // TODO add your handling code here:
        if (txt_t4_manual.getText().equals("")){
            txt_t4_manual.setText("0");
        }
    }//GEN-LAST:event_txt_t4_manualFocusLost

    private void btn_Ordem_CorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Ordem_CorteActionPerformed
        // TODO add your handling code here:
        new OrdemCorteVIEW().setVisible(true);
    }//GEN-LAST:event_btn_Ordem_CorteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new ProdutoFichaVIEW().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_refKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_refKeyTyped
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txt_refKeyTyped

    private void txt_refKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_refKeyReleased
        // TODO add your handling code here:
        txt_ref.setText(txt_ref.getText().toUpperCase());
    }//GEN-LAST:event_txt_refKeyReleased

    private void txt_refKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_refKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt_refKeyPressed
    public void zerar_tabelas(){
         DefaultTableModel modelVenda =  (DefaultTableModel) jTable_VENDA_CORTE.getModel();
                     modelVenda.setNumRows(0);
                     
                     DefaultTableModel modelEstoque =  (DefaultTableModel) jTable_VENDA.getModel();
                     modelEstoque.setNumRows(0);
                     
                     DefaultTableModel modelCorte =  (DefaultTableModel) jTable_Corte.getModel();
                     modelCorte.setNumRows(0);
                     
                     txt_ref.setText("");
                     txt_ref.requestFocus();
    }
    //trazer estoque da ref
    public void listar_estoque_por_ref(String ref){
        if ( (ref.equals("")) || (ref==null) ){
            
            //JOptionPane.showMessageDialog(null, "Insira uma ref!");
            //txt_ref.requestFocus();
        }else{
        
            EstoqueDAO dao = new EstoqueDAO();
            DefaultTableModel model =  (DefaultTableModel) jTable_ESTOQUE.getModel(); 
            
       model.setNumRows(0);
       
        for (EstoqueDTO e : dao.getEstoqueEntradaRef(ref)) {
           
            model.addRow(new Object[]{e.getCodigo(), e.getCor(), e.getT1(), e.getT2(), e.getT3(), e.getT4(), e.getTotal()});
        }
        
        }//fim else 
    }//fim listar
   
    public void listar_saldo_vendas_menos_estoque(String ref, String tipo_pedido){
        if ( (ref.equals("")) || (ref==null) ){
            
            //JOptionPane.showMessageDialog(null, "Insira uma ref!");
            //txt_ref.requestFocus();
        }else{
        
            EstoqueDAO dao = new EstoqueDAO();
            DefaultTableModel model =  (DefaultTableModel) jTable_ESTOQUE.getModel(); 
            
       model.setNumRows(0);
        int total;
        for (EstoqueDTO e : dao.getSaldoVendaEstoqueRef(ref, tipo_pedido)) {
            total = e.getT1()+e.getT2()+e.getT3()+e.getT4();
            model.addRow(new Object[]{e.getCodigo(), e.getCor(), e.getT1(), e.getT2(), e.getT3(), e.getT4(), total});
        }
        
        }//fim else 
    }//fim listar
    
    
    
    public void listar_venda_por_ref(String ref, String tipo_pedido){
        if ( (ref.equals("")) || (ref==null) ){
            
            //JOptionPane.showMessageDialog(null, "Insira uma ref!");
            //txt_ref.requestFocus();
        }else{
        
            EstoqueDAO dao = new EstoqueDAO();
            DefaultTableModel model =  (DefaultTableModel) jTable_VENDA.getModel(); 
            
       model.setNumRows(0);
       
        for (EstoqueDTO e : dao.getVendaRef(ref, tipo_pedido)) {
           
            model.addRow(new Object[]{e.getCodigo(), e.getCor(), e.getT1(), e.getT2(), e.getT3(), e.getT4(), e.getTotal()});
        }
        
        }//fim else 
    }//fim listar
    
    public void listar_venda_por_refData(String ref, String tipo_pedido, String data_entrega){
        if ( (ref.equals("")) || (ref==null) ){
            
            //JOptionPane.showMessageDialog(null, "Insira uma ref!");
            //txt_ref.requestFocus();
        }else{
        
            CorteDAO dao = new CorteDAO();
            DefaultTableModel model =  (DefaultTableModel) jTable_VENDA.getModel(); 
            
       model.setNumRows(0);
       
        for (CorteDTO e : dao.getVendaRef(ref, tipo_pedido, data_entrega)) {
           
            model.addRow(new Object[]{e.getCodigo(), e.getCor(), e.getT1(), e.getT2(), e.getT3(), e.getT4(), e.getTotal()});
        }
        
        }//fim else 
    }//fim listar
    
    public void listar_saldo_vendas_menos_corte(String ref, String tipo_pedido){
        if ( (ref.equals("")) || (ref==null) ){
            
            //JOptionPane.showMessageDialog(null, "Insira uma ref!");
            //txt_ref.requestFocus();
        }else{
        
            EstoqueDAO dao = new EstoqueDAO();
            DefaultTableModel model =  (DefaultTableModel) jTable_VENDA_CORTE.getModel(); 
            
       model.setNumRows(0);
        int total;
        for (EstoqueDTO e : dao.getSaldoVendaCorteRef(ref, tipo_pedido)) {
            total = e.getT1()+e.getT2()+e.getT3()+e.getT4();
            model.addRow(new Object[]{e.getCodigo(), e.getCor(), e.getT1(), e.getT2(), e.getT3(), e.getT4(), total});
        }
        
        }//fim else 
    }//fim listar
    
    
    public void listar_saldo_vendas_menos_corteData(String ref, String tipo_pedido, String data_entrega){
        if ( (ref.equals("")) || (ref==null) ){
            
            //JOptionPane.showMessageDialog(null, "Insira uma ref!");
            //txt_ref.requestFocus();
        }else{
        
            CorteDAO dao = new CorteDAO();
            DefaultTableModel model =  (DefaultTableModel) jTable_VENDA_CORTE.getModel(); 
            
       model.setNumRows(0);
        int total;
        for (CorteDTO e : dao.getSaldoVendaCorteRef(ref, tipo_pedido, data_entrega)) {
            total = e.getT1()+e.getT2()+e.getT3()+e.getT4();
            model.addRow(new Object[]{e.getCodigo(), e.getCor(), e.getT1(), e.getT2(), e.getT3(), e.getT4(), total});
        }
        
        }//fim else 
    }//fim listar
    
    
    public void total_itens(){
        //total itens
        tdgCTR geral = new tdgCTR();
        txt_total_itens.setText(geral.calc_Total_Itens(jTable_Corte, 4)); 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CorteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CorteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CorteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CorteVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CorteVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cadastrar_Corte;
    private javax.swing.JButton btn_Corte1;
    private javax.swing.JButton btn_Excluir;
    private javax.swing.JButton btn_Limpar_Lista;
    private javax.swing.JButton btn_Listar;
    private javax.swing.JButton btn_Ordem_Corte;
    private javax.swing.JButton btn_Pesquisar;
    private javax.swing.JButton btn_adiciona;
    private javax.swing.JButton btn_remove;
    private javax.swing.ButtonGroup buttonGroup_Grade;
    private javax.swing.ButtonGroup buttonGroup_Grade_Especial;
    private javax.swing.ButtonGroup buttonGroup_tipo_corte;
    private javax.swing.ButtonGroup buttonGroup_tipo_grade;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox_data_entrega;
    private javax.swing.JComboBox jComboBox_Cor;
    private javax.swing.JComboBox jComboBox_Cores;
    private javax.swing.JComboBox jComboBox_Corte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel_Grade;
    private javax.swing.JPanel jPanel_Grade_Especial;
    private javax.swing.JPanel jPanel_manual;
    private javax.swing.JRadioButton jRadioButton111;
    private javax.swing.JRadioButton jRadioButton1111;
    private javax.swing.JRadioButton jRadioButton112;
    private javax.swing.JRadioButton jRadioButton1122;
    private javax.swing.JRadioButton jRadioButton121;
    private javax.swing.JRadioButton jRadioButton122;
    private javax.swing.JRadioButton jRadioButton1221;
    private javax.swing.JRadioButton jRadioButton211;
    private javax.swing.JRadioButton jRadioButton2112;
    private javax.swing.JRadioButton jRadioButton221;
    private javax.swing.JRadioButton jRadioButton2211;
    private javax.swing.JRadioButton jRadioButton_Grade;
    private javax.swing.JRadioButton jRadioButton_Manual;
    private javax.swing.JRadioButton jRadioButton_div;
    private javax.swing.JRadioButton jRadioButton_especial;
    private javax.swing.JRadioButton jRadioButton_todos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable_Corte;
    private javax.swing.JTable jTable_ESTOQUE;
    private javax.swing.JTable jTable_VENDA;
    private javax.swing.JTable jTable_VENDA_CORTE;
    private javax.swing.JTextField txt_costas;
    private javax.swing.JFormattedTextField txt_data;
    private javax.swing.JFormattedTextField txt_data_entrega;
    private javax.swing.JTextField txt_manga;
    private javax.swing.JTextField txt_qtd;
    private javax.swing.JTextField txt_qtd_cores;
    private javax.swing.JTextField txt_qtd_tamanho;
    private javax.swing.JTextField txt_ref;
    private javax.swing.JTextField txt_ref_pesquisar;
    private javax.swing.JTextField txt_t1;
    private javax.swing.JTextField txt_t1_manual;
    private javax.swing.JTextField txt_t2;
    private javax.swing.JTextField txt_t2_manual;
    private javax.swing.JTextField txt_t3;
    private javax.swing.JTextField txt_t3_manual;
    private javax.swing.JTextField txt_t4;
    private javax.swing.JTextField txt_t4_manual;
    private javax.swing.JTextField txt_tipo_tamanho;
    private javax.swing.JTextField txt_total_itens;
    private javax.swing.JTextField txt_total_itens_estoque;
    private javax.swing.JTextField txt_total_itens_saldo;
    private javax.swing.JTextField txt_total_itens_venda;
    // End of variables declaration//GEN-END:variables
}
