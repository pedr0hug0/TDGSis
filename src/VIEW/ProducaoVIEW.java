/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

//law

import CTR.tdgCTR;
import DTO.ProducaoDTO;
import dao.ProducaoDAO;
import java.awt.Color;
import java.awt.Component;
import static javafx.scene.paint.Color.color;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author PeDr0_HuG0
 */
public class ProducaoVIEW extends javax.swing.JFrame {

    /**
     * Creates new form ProducaoVIEW
     */
    public ProducaoVIEW() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        setDefaultCloseOperation(ProdutoVIEW.HIDE_ON_CLOSE);
        txt_ref_pesquisar.requestFocus();
        
        listar_perdas(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_costura_normal = new javax.swing.JButton();
        btn_costura_externa = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btn_Listar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_Processo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txt_ref_pesquisar = new javax.swing.JTextField();
        btn_Pesquisar = new javax.swing.JButton();
        jRadioButton_div = new javax.swing.JRadioButton();
        jRadioButton_especial = new javax.swing.JRadioButton();
        jRadioButton_todos = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jComboBox_perdeu = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_total_perda = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_ref_perda = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_perda = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        btn_Ignorar = new javax.swing.JButton();
        jToggleButton_Selecionar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Processos Produção");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("PROCESSOS ATIVOS"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CORTE", "REF", "COR", "FRENTE", "COSTAS", "MANGA", "ALTERADO", "DATA_INICIO", "QTD", "STATUS", "QTD_MONTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        //ordenando cliacando nas tabelas
        jTable1.setAutoCreateRowSorter(true);

        //
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        //COMBOBOX STATUS
        TableColumn statusCol = jTable1.getColumnModel().getColumn(10);

        JComboBox comboBox_Status = new JComboBox();

        comboBox_Status.addItem("ATIVO");
        comboBox_Status.addItem("MONTADO");
        statusCol.setCellEditor(new DefaultCellEditor(comboBox_Status));
        //FIM COMBOBOX STATUS

        //COMBOBOX FRENTE
        TableColumn frenteCol = jTable1.getColumnModel().getColumn(4);

        JComboBox comboBox_frente = new JComboBox();

        comboBox_frente.addItem("CORTE");
        comboBox_frente.addItem("SILK");
        comboBox_frente.addItem("BORDADO");
        comboBox_frente.addItem("PREPARACAO");
        comboBox_frente.addItem("MONTAGEM");
        comboBox_frente.addItem("COSTURA");
        comboBox_frente.addItem("COST. EXTERNA");
        frenteCol.setCellEditor(new DefaultCellEditor(comboBox_frente));
        //FIM COMBOBOX FRENTE

        //COMBOBOX COSTAS
        TableColumn costasCol = jTable1.getColumnModel().getColumn(5);

        JComboBox comboBox_costas = new JComboBox();

        comboBox_costas.addItem("");
        comboBox_costas.addItem("CORTE");
        comboBox_costas.addItem("SILK");
        comboBox_costas.addItem("MONTAGEM");
        comboBox_costas.addItem("COSTURA");
        comboBox_costas.addItem("COST. EXTERNA");

        costasCol.setCellEditor(new DefaultCellEditor(comboBox_costas));
        //FIM COMBOBOX costas

        //COMBOBOX MANGA
        TableColumn mangaCol = jTable1.getColumnModel().getColumn(6);

        JComboBox comboBox_manga = new JComboBox();

        comboBox_manga.addItem("");
        comboBox_manga.addItem("CORTE");
        comboBox_manga.addItem("SILK");
        comboBox_manga.addItem("BORDADO");
        comboBox_manga.addItem("MONTAGEM");
        comboBox_manga.addItem("COSTURA");
        comboBox_manga.addItem("COST. EXTERNA");

        mangaCol.setCellEditor(new DefaultCellEditor(comboBox_manga));
        //FIM COMBOBOX MANGA
        //ocultar coluna ID da tabela
        jTable1.getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable1.getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        //fim ocultar

        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                Object montado = table.getValueAt(row, 11); // coluna montado
                if (!montado.equals(0) && column == 11){
                    setBackground(Color.RED);
                    setForeground(Color.white);
                    return this;
                }

                //A coluna do status é 3
                Object frente = table.getValueAt(row, 4);//Coluna frente
                Object costas = table.getValueAt(row, 5);//Coluna costas
                Object manga = table.getValueAt(row, 6);//Coluna manga
                //Coloca cor na COLUNA(4)(frente) que tem o valor "COSTURA"

                String frente2 = (String) frente;
                String costas2 = (String) costas;
                String manga2 = (String) manga;

                boolean sel = isSelected;
                //frente
                if (frente != null && column == 4) {
                    switch (frente2) {
                        case "CORTE":
                        setBackground(Color.BLUE);
                        setForeground(Color.white);
                        return this;
                        case "SILK":
                        setBackground(Color.GREEN);
                        setForeground(Color.white);
                        return this;
                        case "BORDADO":
                        setBackground(Color.orange);
                        setForeground(Color.white);
                        return this;
                        case "PREPARACAO":
                        setBackground(Color.YELLOW);
                        setForeground(Color.BLACK);
                        return this;
                        case "MONTAGEM":
                        setBackground(Color.PINK);
                        setForeground(Color.white);
                        return this;
                        case "COSTURA":
                        setBackground(Color.RED);
                        setForeground(Color.white);
                        return this;
                        case "COST. EXTERNA":
                        setBackground(Color.gray);
                        setForeground(Color.white);
                        return this;
                        default:
                        if (sel == true) {
                            setBackground(getBackground());
                            setForeground(getForeground());
                        } else {
                            setBackground(Color.WHITE);//Preenche a linha de branco
                            setForeground(new Color(51, 51, 51));//E a fonte de preto
                        }
                    }

                }//COSTAS
                else if (costas2 != null && column == 5) {
                    switch (costas2) {
                        case "CORTE":
                        setBackground(Color.BLUE);
                        setForeground(Color.white);
                        return this;
                        case "SILK":
                        setBackground(Color.GREEN);
                        setForeground(Color.white);
                        return this;
                        case "BORDADO":
                        setBackground(Color.orange);
                        setForeground(Color.white);
                        return this;
                        case "COSTURA":
                        setBackground(Color.RED);
                        setForeground(Color.white);
                        return this;
                        case "MONTAGEM":
                        setBackground(Color.PINK);
                        setForeground(Color.white);
                        return this;
                        case "COST. EXTERNA":
                        setBackground(Color.gray);
                        setForeground(Color.white);
                        return this;
                        default:
                        if (sel == true) {
                            setBackground(getBackground());
                            //setForeground(getForeground());
                            setForeground(Color.PINK);

                        } else {
                            setBackground(Color.WHITE);//Preenche a linha de branco
                            setForeground(new Color(51, 51, 51));//E a fonte de preto
                        }
                    }

                }else//manga
                if (manga2 != null && column == 6) {
                    switch (manga2) {
                        case "CORTE":
                        setBackground(Color.BLUE);
                        setForeground(Color.white);
                        return this;
                        case "SILK":
                        setBackground(Color.GREEN);
                        setForeground(Color.white);
                        return this;
                        case "BORDADO":
                        setBackground(Color.orange);
                        setForeground(Color.white);
                        return this;
                        case "COSTURA":
                        setBackground(Color.RED);
                        setForeground(Color.white);
                        return this;
                        case "MONTAGEM":
                        setBackground(Color.PINK);
                        setForeground(Color.white);
                        return this;
                        case "COST. EXTERNA":
                        setBackground(Color.gray);
                        setForeground(Color.white);
                        return this;
                        default:
                        if (sel == true) {
                            setBackground(getBackground());
                            setForeground(getForeground());
                        } else {
                            setBackground(Color.WHITE);//Preenche a linha de branco
                            setForeground(new Color(51, 51, 51));//E a fonte de preto
                        }
                    }

                }
                //se selecionada
                else{
                    //boolean sel = isSelected;
                    if (sel == true) {
                        setBackground(getBackground());
                        setForeground(getForeground());

                    } else {//Se Status não for "Aberto"
                        setBackground(Color.WHITE);//Preenche a linha de branco
                        setForeground(new Color(51, 51, 51));//E a fonte de preto
                    }
                }
                return this;

            }//fim component

        });

        btn_costura_normal.setText("COSTURA INTERNA");
        btn_costura_normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_costura_normalActionPerformed(evt);
            }
        });

        btn_costura_externa.setText("COSTURA EXTERNA");
        btn_costura_externa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_costura_externaActionPerformed(evt);
            }
        });

        jButton2.setText("MONTAR PARCIAL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_costura_normal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_costura_externa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_costura_normal)
                    .addComponent(btn_costura_externa)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Funções"));

        btn_Listar.setText("LISTAR PROCESSOS");
        btn_Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListarActionPerformed(evt);
            }
        });

        jLabel6.setText("FILTRAR POR STATUS:");

        jComboBox_Processo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ATIVO", "MONTADO", "TODOS" }));

        jLabel4.setText("Ref:");

        txt_ref_pesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ref_pesquisarKeyPressed(evt);
            }
        });

        btn_Pesquisar.setText("Pesquisar");
        btn_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PesquisarActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton_div);
        jRadioButton_div.setText("DIV");

        buttonGroup1.add(jRadioButton_especial);
        jRadioButton_especial.setText("ESPECIAL");

        buttonGroup1.add(jRadioButton_todos);
        jRadioButton_todos.setSelected(true);
        jRadioButton_todos.setText("TODOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Processo, 0, 1, Short.MAX_VALUE))
            .addComponent(btn_Listar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_ref_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Pesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jRadioButton_div)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_especial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_todos)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox_Processo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_div)
                    .addComponent(jRadioButton_todos)
                    .addComponent(jRadioButton_especial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Listar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_ref_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Pesquisar))
                .addContainerGap(198, Short.MAX_VALUE))
        );

        //self select
        txt_ref_pesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_ref_pesquisar.selectAll();
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Controle Perda"));

        jButton1.setText("Listar Perdas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox_perdeu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SIM", "NAO", "REPOS", "IGNORADO", "%" }));

        jLabel1.setText("Perdeu:");

        jLabel2.setText("TOTAL PERDA:");

        jLabel3.setText("REF:");

        txt_ref_perda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ref_perdaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_total_perda))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_perdeu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_ref_perda)))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_perdeu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(2, 2, 2)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_ref_perda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_total_perda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Processos Perdas"));

        jTable_perda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "✓", "CORTE", "REF", "COR", "QTD_CORTE", "QTD_MONTADO", "PERDA", "PERDA > 6%", "ULTIMA ALTERACAO", "DATA INICIO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable_perda);
        //ocultar coluna ID da tabela
        jTable_perda.getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable_perda.getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        jTable_perda.getTableHeader().getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable_perda.getTableHeader().getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        //fim ocultar

        jButton3.setText("Repor");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btn_Ignorar.setText("Ignorar Marcados");
        btn_Ignorar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_IgnorarActionPerformed(evt);
            }
        });

        jToggleButton_Selecionar.setText("Marcar Todos");
        jToggleButton_Selecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_SelecionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Ignorar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton_Selecionar)
                .addContainerGap(154, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(btn_Ignorar)
                    .addComponent(jToggleButton_Selecionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jToggleButton_Selecionar.setSelected(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListarActionPerformed
        // TODO add your handling code here:
        //jTable1.setRowSorter(null);
        String tipo_pedido;
        if (jRadioButton_div.isSelected()){
                tipo_pedido = "DIVERSOS";
            }else if (jRadioButton_especial.isSelected()){
                tipo_pedido = "ESPECIAL";
            }else{//todos
                tipo_pedido = "%";
        }    
        
        
        listar_producao(tipo_pedido);
        
        //jTable1.setAutoCreateRowSorter(true);
    }//GEN-LAST:event_btn_ListarActionPerformed

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
        ProducaoDTO producoes = new ProducaoDTO();
        if ("tableCellEditor".equals(evt.getPropertyName()))
		{
			if (jTable1.isEditing()){
                        }	
                        else{
                            
                            Integer linhaSelecionada = -1;
                            linhaSelecionada = jTable1.getSelectedRow();

                            if (linhaSelecionada >= 0) {
                                Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                                String frente = (String) jTable1.getValueAt(linhaSelecionada, 4);
                                String costas = (String) jTable1.getValueAt(linhaSelecionada, 5);
                                String manga = (String) jTable1.getValueAt(linhaSelecionada, 6);
                                Integer qtd_montado = (Integer) jTable1.getValueAt(linhaSelecionada, 11);
                                String status = (String) jTable1.getValueAt(linhaSelecionada, 10);
                                
                                
                                
                                DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                producoes.setId(id);//setar o id pra excluir
                                producoes.setFrente(frente);
                                producoes.setCostas(costas);
                                producoes.setManga(manga);
                                producoes.setStatus(status);
                                producoes.setQtd_montado(qtd_montado);
                                ProducaoDAO dao = new ProducaoDAO();
                                if (dao.atualizar(producoes)){
                                    System.out.println("atualizado");
                                    //listar?
                                }
                                else {
                                    System.out.println("Não atualizou");
                                }
                                  
                                        
                                        
                            }else{
                                JOptionPane.showMessageDialog(null, "Selecione uma linha!");
                            }
                        }    
		}
        
    }//GEN-LAST:event_jTable1PropertyChange

    private void btn_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PesquisarActionPerformed
        // TODO add your handling code here:
        
        listar_por_ref();
        listar_perdas(txt_ref_pesquisar.getText());
    }//GEN-LAST:event_btn_PesquisarActionPerformed

     public void listar_por_ref(){
         //zerar row sorter
         jTable1.setRowSorter(null);
        
         String tipo_pedido;
        if (jRadioButton_div.isSelected()){
                tipo_pedido = "DIVERSOS";
            }else if (jRadioButton_especial.isSelected()){
                tipo_pedido = "ESPECIAL";
            }else{//todos
                tipo_pedido = "%";
        }  
         
         
         
        //listar_producao(tipo_pedido);
        
        
         
        String status = jComboBox_Processo.getSelectedItem().toString();
        String codigo = txt_ref_pesquisar.getText();
        
        ProducaoDAO dao = new ProducaoDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
        
        model.setNumRows(0);

        for (ProducaoDTO p : dao.getProducaoRef(status, codigo, tipo_pedido)) {
                                     //"ID", "CORTE", "REF", "COR", "FRENTE", "COSTAS", "MANGA", "ALTERADO", "DATA_INICIO", "QTD", "STATUS"
            model.addRow(new Object[]{p.getId(), p.getCorte(), p.getCodigo(), p.getCor(), p.getFrente(), p.getCostas(), p.getManga(), p.getData_alteracao_str(), p.getData_inicio(), p.getQtd(), p.getStatus(), p.getQtd_montado()});
        }
        jTable1.setAutoCreateRowSorter(true);
     }
    private void btn_costura_normalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_costura_normalActionPerformed
        // TODO add your handling code here:
        //finalizar processo, mandar para costura, colocar todos em costura e mudar o estado para finalizado
        montar("COSTURA");
    }//GEN-LAST:event_btn_costura_normalActionPerformed

    
    public void montar(String costura){
        ProducaoDTO producoes = new ProducaoDTO();
                            Integer linhaSelecionada = -1;
                            linhaSelecionada = jTable1.getSelectedRow();
                            
                            String frente, costas, manga;
                            
                            
                            if (linhaSelecionada >= 0) {
                                
                                Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                                String ref = (String) jTable1.getValueAt(linhaSelecionada, 2);
                                String cor = (String) jTable1.getValueAt(linhaSelecionada, 3);
                                String corte = (String) jTable1.getValueAt(linhaSelecionada, 1);
                                Integer qtd = (Integer) jTable1.getValueAt(linhaSelecionada, 9);

                                //Confirmação
                                String message = "Mudar processo para "+costura+" ? \nREF: "+ref+" - "+cor+" - "+corte+" - "+qtd+"\nQtd Montada:";
                                String title = "Montagem "+costura+"";
                                String resposta = JOptionPane.showInputDialog(null, message, title, JOptionPane.PLAIN_MESSAGE);
                                tdgCTR geral = new tdgCTR();
                                if (resposta == null || resposta.equals("") || ((geral.isInt(resposta)) == false)) 
                                {
                                    JOptionPane.showMessageDialog(null, "REF não foi montada.");
                                }else{//sim(Informou qtd valida)
                                            //Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                                            //String frente = (String) jTable1.getValueAt(linhaSelecionada, 4);
                                            
                                    
                                            frente = costura;
                                            //saber se tem costas/ manga
                                            if (jTable1.getValueAt(linhaSelecionada, 5).equals("")){
                                                costas = (String) jTable1.getValueAt(linhaSelecionada, 5);
                                            }else{
                                                costas = costura;
                                            }
                                            //String costas = (String) jTable1.getValueAt(linhaSelecionada, 5);
                                            if (jTable1.getValueAt(linhaSelecionada, 6).equals("")){
                                                manga = (String) jTable1.getValueAt(linhaSelecionada, 6);
                                            }else{
                                                manga = costura;
                                            }
                                            //String manga = (String) jTable1.getValueAt(linhaSelecionada, 6);

                                            //Qtd montada = qtd informada no JDialog
                                            Integer qtd_montada = Integer.parseInt(resposta);
                                            Integer perda;
                                            
                                            //se montou mais do que cortou, setar como perda 0
                                            if (qtd_montada>=qtd){
                                                perda = 0;
                                            }else{
                                            //seta a qtd perdida
                                            perda = (qtd-qtd_montada);
                                            }
                                            
                                            //Confirmação
                                           
                                            int reply = 0;//JA VEM COM A OPCAO DE SIM
                                            String perdeu = "NAO"; //VEM SETADO COMO NÃO PERDEU MAIS QUE 6%
                                            //SE PERCA > 6%, MOSTRAR ALERTA DE CONFIRMAÇÃO
                                            
                                            if (((qtd*0.06)<perda) && (perda>=0)){
                                                System.out.println("Perdeu mais que 6%");
                                                reply = JOptionPane.showConfirmDialog(null, "Perdeu mais do que 6%!\nPerdeu: "+perda+" de "+qtd+"\nREF: "+ref+" - "+cor+" - "+corte+"\nDeseja continuar?", "ATENCAO", JOptionPane.YES_NO_OPTION);
                                                System.err.println("Reply = "+reply+"");
                                                perdeu = "SIM";
                                                
                                            }
                                            
                                            if (reply == 1){//SE ESCOLHER NAO = 1
                                                //NAO COMPLETA(CANCELA
                                                System.out.println("Cancelou");
                                            }else{//SE ESCOLHER EM CONTINUAR (SIM)
                                                    String status = "MONTADO";

                                                    DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                                    producoes.setId(id);
                                                    producoes.setFrente(frente);

                                                    //***************************
                                                    
                                                    producoes.setCostas(costas);
                                                    producoes.setManga(manga);
                                                    producoes.setStatus(status);
                                                    producoes.setQtd_montado(qtd_montada);
                                                    producoes.setPerda(perda);
                                                    producoes.setPerdeu(perdeu);
                                                    ProducaoDAO dao = new ProducaoDAO();
                                                    if (dao.atualizar(producoes)){
                                                        System.out.println("atualizado");
                                                        //listar?
                                                        model.removeRow(linhaSelecionada);
                                                    }
                                                    else {
                                                        System.out.println("Não atualizou");
                                                    }
                                                    
                                            }//FIM SE SIM
                                }          
                                        
                            }else{
                                JOptionPane.showMessageDialog(null, "Selecione uma linha!");
                            }
        txt_ref_pesquisar.requestFocus();
    }
    
    
    private void txt_ref_pesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ref_pesquisarKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode() == evt.VK_ENTER){
            
                listar_por_ref();
                listar_perdas(txt_ref_pesquisar.getText());
            
        }
    }//GEN-LAST:event_txt_ref_pesquisarKeyPressed

    private void btn_costura_externaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_costura_externaActionPerformed
        // TODO add your handling code here:
        //finalizar processo, mandar para costura, colocar todos em costura e mudar o estado para finalizado
                            
        montar("COST. EXTERNA");
        
    }//GEN-LAST:event_btn_costura_externaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        listar_perdas(txt_ref_perda.getText());
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ProducaoDTO producoes = new ProducaoDTO();
        Integer linhaSelecionada = -1;
        linhaSelecionada = jTable_perda.getSelectedRow();
        if (linhaSelecionada >= 0) {
            Integer id = (Integer) jTable_perda.getValueAt(linhaSelecionada, 0);
            String ref = (String) jTable_perda.getValueAt(linhaSelecionada, 3);
            String cor = (String) jTable_perda.getValueAt(linhaSelecionada, 4);
            String corte = (String) jTable_perda.getValueAt(linhaSelecionada, 2);
            Integer qtd = (Integer) jTable_perda.getValueAt(linhaSelecionada, 5);

            //Confirmação
            String message = "Repor qtd montada?\nREF: "+ref+" - "+cor+" - "+corte+" - "+qtd+"\nQtd Montada:";
            String title = "Repor ref";
            String resposta = JOptionPane.showInputDialog(null, message, title, JOptionPane.PLAIN_MESSAGE);
            tdgCTR geral = new tdgCTR();
            if (resposta == null || resposta.equals("") || ((geral.isInt(resposta)) == false))
            {
                JOptionPane.showMessageDialog(null, "REF não foi repositada.");
            }else{//SE CONFIRMOU E VALOR VALIDO
                Integer qtd_montada = Integer.parseInt(resposta);
                Integer perda = (qtd-qtd_montada);
                String perdeu = "REPOS";

                DefaultTableModel model =  (DefaultTableModel) jTable_perda.getModel();
                producoes.setId(id);
                producoes.setQtd_montado(qtd_montada);
                producoes.setPerda(perda);
                producoes.setPerdeu(perdeu);
                ProducaoDAO dao = new ProducaoDAO();
                if (dao.repor(producoes)){
                    System.out.println("atualizado");
                    //listar?
                    model.removeRow(linhaSelecionada);
                }
                else {
                    System.out.println("Não atualizou");
                    JOptionPane.showMessageDialog(null, "REF não foi repositada.");
                }

            }

        }else{
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void btn_IgnorarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_IgnorarActionPerformed
        // TODO add your handling code here:
        setar_ignorado();
        listar_perdas(txt_ref_perda.getText());
        txt_total_perda.setText(tdgCTR.calc_Total_Itens(jTable_perda, 7));
    }//GEN-LAST:event_btn_IgnorarActionPerformed

    private void jToggleButton_SelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_SelecionarActionPerformed
        // TODO add your handling code here:
        if (jToggleButton_Selecionar.isSelected()){
            //Selecionar
            for(int i=0;i<jTable_perda.getRowCount();i++){
                jTable_perda.setValueAt(true, i, 1);
            }
        }else{//Deselecionar
            for(int i=0;i<jTable_perda.getRowCount();i++){
                jTable_perda.setValueAt(false, i, 1);

            }
        }
    }//GEN-LAST:event_jToggleButton_SelecionarActionPerformed

    private void txt_ref_perdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ref_perdaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ref_perdaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ProducaoDTO producoes = new ProducaoDTO();
        Integer linhaSelecionada = -1;
        linhaSelecionada = jTable1.getSelectedRow();

        


        if (linhaSelecionada >= 0) {
            Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
            String ref = (String) jTable1.getValueAt(linhaSelecionada, 2);
            String cor = (String) jTable1.getValueAt(linhaSelecionada, 3);
            String corte = (String) jTable1.getValueAt(linhaSelecionada, 1);
            Integer qtd = (Integer) jTable1.getValueAt(linhaSelecionada, 9);
            //Confirmação
                                String message = "Montar Parcial? \nREF: "+ref+" - "+cor+" - "+corte+" - "+qtd+"\nQtd Montada:";
                                String title = "Montagem Parcial";
                                String resposta = JOptionPane.showInputDialog(null, message, title, JOptionPane.PLAIN_MESSAGE);
                                tdgCTR geral = new tdgCTR();
                                if (resposta == null || resposta.equals("") || ((geral.isInt(resposta)) == false)) 
                                {
                                    JOptionPane.showMessageDialog(null, "REF não foi montada.");
                                }else{//sim(Informou qtd valida)
                                    //Qtd montada = qtd informada no JDialog
                                    Integer qtd_montada = Integer.parseInt(resposta);
                                    
                                    
                                    DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                    producoes.setId(id);
                                    
                                    producoes.setQtd_montado(qtd_montada);
                                    
                                    ProducaoDAO dao = new ProducaoDAO();
                                    if (dao.montar_parcial(producoes)){
                                        System.out.println("atualizado montado");
                                        //listar?
                                        listar_por_ref();
                                        listar_perdas(txt_ref_pesquisar.getText());
                                        
                                    }
                                    else {
                                        System.out.println("Não atualizou");
                                    }
                                }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    /* 
    public class TableCellRenderer extends DefaultTableCellRenderer {  
    
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        Color c = Color.WHITE;
        Object text = table.getValueAt(row, 1);
        if (text != null && "DIV 1".equals(text.toString())){
            c = Color.RED;
        label.setBackground(c);
            setBackground(Color.RED);//Preenche a linha de vermelho  
            setForeground(Color.WHITE);//E a fonte de branco  
        }else{
            setBackground(Color.GREEN);
        }
        return label;
        }
    }
   */
    
    //listar producao
     public void listar_producao(String tipo_pedido){
         //ZERAR ROW sorter
         jTable1.setRowSorter(null);
        


        //deseleciona a linha
         //jTable1.getSelectionModel().clearSelection();
        //perde o foco de onde está editando (necessario para atualizar o campo)
         jTable1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE); 
        
        String status = jComboBox_Processo.getSelectedItem().toString();
         
         ProducaoDAO dao = new ProducaoDAO();
         DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
            
       model.setNumRows(0);
       //SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");
        for (ProducaoDTO c : dao.getProducao(status, tipo_pedido)) {
           
                                                //corte, codigo, cor, frente, costas, manga, status, data_alteracao, data_inicio, qtd 
            model.addRow(new Object[]{c.getId(), c.getCorte(), c.getCodigo(), c.getCor(), c.getFrente(), c.getCostas(), c.getManga(), c.getData_alteracao_str(),  c.getData_inicio(),  c.getQtd(), c.getStatus(), c.getQtd_montado()});
        }
       //adicionar rowsorter 
       jTable1.setAutoCreateRowSorter(true);
    }//fim listar producao
    
     
     // ************* PERDA *************
     //listar producao
     public void listar_perdas(String codigo){
        jTable_perda.setRowSorter(null);
        String tipo_perdeu = jComboBox_perdeu.getSelectedItem().toString();
        
        
         ProducaoDAO dao = new ProducaoDAO();
         DefaultTableModel model =  (DefaultTableModel) jTable_perda.getModel(); 
         model.setNumRows(0);
         
       
        for (ProducaoDTO p : dao.getPerdas(tipo_perdeu, codigo)) {

            model.addRow(new Object[]{p.getId(), new Boolean(true), p.getCorte(), p.getCodigo(), p.getCor(), p.getQtd(), p.getQtd_montado(), p.getPerda(), p.getPerdeu(), p.getData_alteracao_str(), p.getData_inicio()});
        }
       //adicionar rowsorter 
       jTable_perda.setAutoCreateRowSorter(true);
       txt_total_perda.setText(tdgCTR.calc_Total_Itens(jTable_perda, 7));
    }//fim listar perdas
    
     //setar Ignorado
     public void setar_ignorado(){
        ProducaoDTO producoes = new ProducaoDTO();
        //Confirmação
                                String message = "Deseja ignorar todas ref selelcionadas?";
                                String title = "Ignorar perdas";
                                int resposta = JOptionPane.showConfirmDialog(null, message);
                                System.err.println("Respota:"+resposta);
                                if ((resposta == 1) || (resposta == 2)) 
                                {
                                    JOptionPane.showMessageDialog(null, "REF´s não foi ignorada.");
                                }else{//sim(
                                           
                                    Boolean calcular; 
                                    Integer id;
                                    String perdeu;
                                    
                                    for(int i=0;i<jTable_perda.getRowCount();i++){ 
                                        calcular = (Boolean) jTable_perda.getValueAt(i, 1);
                                        
                                        //SE ESTIVER SELECIONADO
                                        if (calcular == true){
                                            //ref = (String) jTable1.getValueAt(i,2);
                                            id = (Integer) jTable_perda.getValueAt(i, 0);
                                            //programado = (String) jTable1.getValueAt(i, 7);
                                            perdeu = "IGNORADO";
                                            
                                            DefaultTableModel model =  (DefaultTableModel) jTable_perda.getModel();
                                            producoes.setId(id);
                                            producoes.setPerdeu(perdeu);

                                            
                                            ProducaoDAO dao = new ProducaoDAO();
                                            if (dao.atualizarPerdeu(producoes)){
                                                System.out.println("atualizado");
                                            }
                                            else {
                                                System.out.println("Não atualizou");
                                            }
                                
                                        }//fim selecionado
        
                                    }//fim row count
                                    
                                    
                                }//fim confirmar Programacao
    }//fim metodo
    

  

     
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProducaoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProducaoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProducaoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProducaoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProducaoVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Ignorar;
    private javax.swing.JButton btn_Listar;
    private javax.swing.JButton btn_Pesquisar;
    private javax.swing.JButton btn_costura_externa;
    private javax.swing.JButton btn_costura_normal;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox_Processo;
    private javax.swing.JComboBox jComboBox_perdeu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton_div;
    private javax.swing.JRadioButton jRadioButton_especial;
    private javax.swing.JRadioButton jRadioButton_todos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable_perda;
    private javax.swing.JToggleButton jToggleButton_Selecionar;
    private javax.swing.JTextField txt_ref_perda;
    private javax.swing.JTextField txt_ref_pesquisar;
    private javax.swing.JTextField txt_total_perda;
    // End of variables declaration//GEN-END:variables
}
