/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import DTO.ColecaoDTO;
import dao.ColecaoDAO;
import java.awt.Cursor;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PeDr0_HuG0
 */
public class ColecaoVIEW extends javax.swing.JFrame {

    /**
     * Creates new form ColecaoVIEW
     */
    public ColecaoVIEW() {
        initComponents();
        setLocationRelativeTo( null );
        listar_colecao();
        //txt_caminho.setText("\\\\"+TDG_SIS_VIEW.ip_servidor);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_colecao = new javax.swing.JTextField();
        btn_criar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_caminho = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_Listar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        fileChooser.setDialogTitle("Selecione um arquivo na basta bin");
        fileChooser.setFileFilter(new FileNameExtensionFilter("post.exe", "exe"));

        File diretorio = new File("C:\\Program Files\\PostgreSQL\\9.3\\bin");
        fileChooser.setCurrentDirectory(diretorio);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciar Coleções");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Criar Coleção"));

        jLabel1.setText("Nome:");

        btn_criar.setText("CRIAR");
        btn_criar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_criarActionPerformed(evt);
            }
        });

        jLabel2.setText("caminho PostgreSQL:");

        txt_caminho.setText("D:\\PostgreSQL\\9.3\\bin");
        txt_caminho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_caminhoActionPerformed(evt);
            }
        });

        jButton1.setText("Localizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Schema em: \\\\\\\\TDG_sis_prod\\\\backup_estrutura.sql");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_colecao, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_criar)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_caminho, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_caminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_colecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_criar)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Coleções Existentes"));

        btn_Listar.setText("Listar Coleções");
        btn_Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListarActionPerformed(evt);
            }
        });

        jButton3.setText("Excluir Coleção");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NOME", "DATA", "PADRAO"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Definir Padrão");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_Listar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Listar)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_criarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_criarActionPerformed
        // TODO add your handling code here:
        //criar sql = create database = txt_colecao.getText();
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        
        
        String nome_banco = txt_colecao.getText();
       
        if (cria_banco(nome_banco)){
            RestauraEstrutura(nome_banco);
            //adicionar nome_banco no banco tdg_sis
            adiciona_banco();
            
        }else{
            JOptionPane.showMessageDialog(null, "Erro ao criar o banco");
        }
        
        
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btn_criarActionPerformed
    
    public boolean cria_banco(String nome_banco){
        
        String caminho = txt_caminho.getText();
        String comando = "\""+caminho+"\\createdb.exe\"  -h "+TDG_SIS_VIEW.ip_servidor+" -U postgres "+nome_banco+"";
        
        try {
         Process exec = Runtime.getRuntime().exec("cmd /c "+comando);
         if(exec.waitFor() == 0) {            
            System.out.println("Banco criado: OK");
             System.out.println(comando);
             return true;
         }       
        else {            
           System.out.println("ERRO ao criar banco: " + exec.exitValue());
           System.err.println(comando);
           return false;
           
        }
        } catch (Exception e) { e.printStackTrace(); }
        return false;
    }
    
    
    public void RestauraEstrutura(String nome_banco) { 
        //ADICIONAR SQL_ESTRUTURA.SQL EM UM PACKT, E USAR STREAMIO(IGUAL RELATORIO IREPORT)
        String caminho = txt_caminho.getText();
        //String comando = "\""+caminho+"\\psql.exe\" -h "+TDG_SIS_VIEW.ip_servidor+" -U postgres "+nome_banco+" < D:/backup_estrutura.sql";
        String comando = "\""+caminho+"\\psql.exe\" -h "+TDG_SIS_VIEW.ip_servidor+" -U postgres "+nome_banco+" < \\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\backup_estrutura.sql";
        
        try {
         Process exec = Runtime.getRuntime().exec("cmd /c "+comando);
         if(exec.waitFor() == 0) {            
            System.out.println("OK");
             System.out.println(comando);
         }       
        else {            
           System.out.println("ERRO: " + exec.exitValue());
           System.err.println(comando);
           JOptionPane.showMessageDialog(null, "Erro ao restaurar Estrutura ");
        }
        } catch (Exception e) { e.printStackTrace(); }

    }
    
    public void adiciona_banco(){
        ColecaoDTO colecoes = new ColecaoDTO();
        colecoes.setColecao(txt_colecao.getText());
        
            ColecaoDAO dao = new ColecaoDAO();
            if (dao.adiciona_banco(colecoes)){
                DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
                model.setNumRows(0);
               
                model.addRow(new Object[]{colecoes.getId(), colecoes.getColecao(), colecoes.getData()});
                
                // apaga os dados preenchidos nos campos de texto
                txt_colecao.setText("");
                
                JOptionPane.showMessageDialog(null, "Banco criado com sucesso.");

            }
            else {
                JOptionPane.showMessageDialog(null, "Erro ao adicionar Coleção no banco");
            }
        
    }
   
    public boolean exclui_banco(String nome_banco){
        
        String caminho = txt_caminho.getText();
       
        String comando = "\""+caminho+"\\dropdb.exe\"  -h "+TDG_SIS_VIEW.ip_servidor+" -U postgres "+nome_banco+"";
        
        try {
         Process exec = Runtime.getRuntime().exec("cmd /c "+comando);
         if(exec.waitFor() == 0) {            
            System.out.println("Banco excluido: OK");
             System.out.println(comando);
             return true;
         }       
        else {            
           System.out.println("ERRO ao excluir banco: " + exec.exitValue());
           JOptionPane.showMessageDialog(null,"ERRO ao excluir banco fisico: " + exec.exitValue());
           System.err.println(comando);
           return false;
           
        }
        } catch (Exception e) { e.printStackTrace(); }
        return false;
    }
    
    private void btn_ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListarActionPerformed
        // TODO add your handling code here:
        ColecaoDAO dao = new ColecaoDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
        model.setNumRows(0);
        for (ColecaoDTO c : dao.getColecao()) {
            model.addRow(new Object[]{c.getId(), c.getColecao(), c.getData(), c.getPadrao()});
        }
    }//GEN-LAST:event_btn_ListarActionPerformed

    public void listar_colecao(){
        ColecaoDAO dao = new ColecaoDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
        model.setNumRows(0);
        for (ColecaoDTO c : dao.getColecao()) {
            model.addRow(new Object[]{c.getId(), c.getColecao(), c.getData(), c.getPadrao()});
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);
        //caminho incial está definido no personalizar codigo do fileChooser
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getCurrentDirectory();
            String caminho = file.getAbsolutePath(); 
            txt_caminho.setText(caminho);
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        ColecaoDTO colecao = new ColecaoDTO();
                
                Integer linhaSelecionada = -1;
		linhaSelecionada = jTable1.getSelectedRow();
                
            if (linhaSelecionada >= 0) {//se linha selecionada
                
                    Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                    String nome = (String) jTable1.getValueAt(linhaSelecionada, 1);
                    
                    //Confirmação
                    String message = "Deseja realmente excluir a Colecao: "+nome+" ?";
                    String title = "Confirmação";
                    int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                    if (reply == JOptionPane.YES_OPTION)
                    {//sim
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                            //se confirmou
                            DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                            colecao.setId(id);//setar o id pra excluir
                            colecao.setColecao(nome);
                            ColecaoDAO dao = new ColecaoDAO();
                            if (dao.excluir(colecao)){
                                //excluiu da lista colecoes
                                int confirma_banco = JOptionPane.showConfirmDialog(null, "Deseja excluir do DB?", title, JOptionPane.YES_NO_OPTION);
                                if (confirma_banco == JOptionPane.YES_OPTION)
                                {//sim
                                    if (exclui_banco(nome)){
                                        JOptionPane.showMessageDialog(null, "Banco "+nome+" excluido com sucesso.");
                                    }
                                    }else{
                                        
                                    }
                            }
                            else {
                                JOptionPane.showMessageDialog(null, "Erro ao excluir colecao: "+nome+" \nErro remover colecao do TDG_SIS");
                            }
                            model.removeRow(linhaSelecionada);
                    }else{
                        //não confirmou
                    }
                 
            }
            else{ //se linha não estiver selecionada
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
            }   // fim linha selecionada
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ColecaoDTO colecao = new ColecaoDTO();
                
                Integer linhaSelecionada = -1;
		linhaSelecionada = jTable1.getSelectedRow();
                
            if (linhaSelecionada >= 0) {//se linha selecionada
                
                    Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                    String nome = (String) jTable1.getValueAt(linhaSelecionada, 1);
                    
                    //Confirmação
                    String message = "Deseja definir como padrao a Colecao: "+nome+" ?";
                    String title = "Confirmação";
                    int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                    if (reply == JOptionPane.YES_OPTION)
                    {//sim
                        
                            //se confirmou
                            DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                            colecao.setId(id);
                            colecao.setColecao(nome);
                            colecao.setPadrao("SIM");
                            ColecaoDAO dao = new ColecaoDAO();
                            if (dao.setarPadrao(colecao)){
                                //setou padrao
                                
                            }
                            else {
                                JOptionPane.showMessageDialog(null, "Erro ao setar padrao.");
                            }
                            listar_colecao();
                    }else{
                        //não confirmou
                    }
                 
            }
            else{ //se linha não estiver selecionada
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
            }   // fim linha selecionada
            
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_caminhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_caminhoActionPerformed
        // TODO add your handling code here:
        //CAMINHO PADRÂO:
        //C:\Program Files\PostgreSQL\9.3\bin
        
    }//GEN-LAST:event_txt_caminhoActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ColecaoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ColecaoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ColecaoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ColecaoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ColecaoVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Listar;
    private javax.swing.JButton btn_criar;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_caminho;
    private javax.swing.JTextField txt_colecao;
    // End of variables declaration//GEN-END:variables
}
