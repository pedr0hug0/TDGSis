/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CTR.tdgCTR;
import DTO.CoresDTO;
import DTO.EtiquetaDTO;
import DTO.MalhaDTO;
import dao.CoresDAO;
import dao.EtiquetaDAO;
import dao.MalhaDAO;
import java.awt.Cursor;
import java.awt.Dialog;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JRViewer;

/**
 *
 * @author PeDr0_HuG0
 */
public class MalhaPedidosVIEW extends javax.swing.JFrame {

    /**
     * Creates new form ProducaoVIEW
     */
    public MalhaPedidosVIEW() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        setDefaultCloseOperation(ProdutoVIEW.HIDE_ON_CLOSE);
        
        
         //pegando data atual 
       Date data = new Date(System.currentTimeMillis());    
       SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
       txt_data.setText(formatarDate.format(data));
       
        
       listar_tudo();
       
       txt_data.requestFocus();
       
        tdgCTR.considerarEnterComoTab(txt_data);
        
        //tdgCTR.considerarEnterComoTab(jComboBox_Processo);
        //tdgCTR.considerarEnterComoTab(jComboBox_Tecido);
        //tdgCTR.considerarEnterComoTab(jComboBox_Cor);
        
        tdgCTR.considerarEnterComoTab(txt_qtd_malha);
        tdgCTR.considerarEnterComoTab(txt_qtd_punho);
        tdgCTR.considerarEnterComoTab(txt_qtd_gola);
        tdgCTR.considerarEnterComoTab(txt_qtd_gola_juvenil);
       
        tdgCTR.reagirEnter(btn_adicionar);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_entregar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btn_Listar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_Processo_filtro = new javax.swing.JComboBox();
        lbl_status = new javax.swing.JLabel();
        jComboBox_status_filtro = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox_Processo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txt_data = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBox_Tecido = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        txt_qtd_malha = new javax.swing.JTextField();
        lbl_cor = new javax.swing.JLabel();
        jComboBox_Cor = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt_qtd_punho = new javax.swing.JTextField();
        txt_qtd_gola = new javax.swing.JTextField();
        btn_adicionar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txt_qtd_gola_juvenil = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Malha - Pedidos");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("PROCESSOS MALHA"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DATA", "PROCESSO", "TIPO TECIDO", "COR", "MALHA", "PUNHO", "GOLA", "GOLA JUV", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        //ordenando cliacando nas tabelas
        jTable1.setAutoCreateRowSorter(true);

        //
        jTable1.setFocusable(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        /*COMBOBOX STATUS
        TableColumn statusCol = jTable1.getColumnModel().getColumn(10);

        JComboBox comboBox_Status = new JComboBox();

        comboBox_Status.addItem("SIM");
        comboBox_Status.addItem("NAO");
        statusCol.setCellEditor(new DefaultCellEditor(comboBox_Status));
        //FIM COMBOBOX STATUS
        */
        /*ocultar coluna ID da tabela
        jTable1.getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable1.getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        //fim ocultar

        */
        /*colorir
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                //A coluna do status é 3
                Object qtd = table.getValueAt(row, 8);//Coluna frente
                Object qtd_montado = table.getValueAt(row, 9);//Coluna costas

                //Coloca cor na COLUNA(4)(frente) que tem o valor "COSTURA"

                Integer iqtd = (Integer) qtd;
                Integer iqtd_montado = (Integer) qtd_montado;

                boolean sel = isSelected;
                //frente
                if (qtd_montado != null && column == 9 && (iqtd_montado>iqtd)  ) {

                    //setBackground(Color.YELLOW);
                    setForeground(Color.RED);
                    return this;
                }
                else if (qtd_montado != null && column == 8 && (iqtd_montado>iqtd)  ) {
                    setForeground(Color.BLUE);
                    return this;
                }
                else{
                    //boolean sel = isSelected;
                    if (sel == true) {
                        setBackground(getBackground());
                        setForeground(getForeground());

                    } else {//Se Status não for "Aberto"
                        setBackground(Color.WHITE);//Preenche a linha de branco
                        setForeground(new Color(51, 51, 51));//E a fonte de preto
                    }
                }
                return this;

            }//fim component
        });
        */

        btn_entregar.setText("FINALIZAR PEDIDO (ENTREGA)");
        btn_entregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_entregarActionPerformed(evt);
            }
        });

        jButton2.setText("EXCLUIR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("IMPRIMIR RELATORIO");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_entregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_entregar)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Funções"));

        btn_Listar.setText("LISTAR PROCESSOS");
        btn_Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListarActionPerformed(evt);
            }
        });

        jLabel6.setText("FILTRAR PROCESSOS:");

        jComboBox_Processo_filtro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PEDIDO/ENTREGA", "PEDIDO", "ENTREGA", "MALHA CRU", " " }));
        jComboBox_Processo_filtro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_Processo_filtroItemStateChanged(evt);
            }
        });

        lbl_status.setText("STATUS:");

        jComboBox_status_filtro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PENDENTE", "ENTREGUE", "PARCIAL", "TODOS" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_Listar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbl_status, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox_Processo_filtro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox_status_filtro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox_Processo_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_status_filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_status))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Listar)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("ITENS RECEBIDOS PARCIAIS (FALTOU)"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DATA", "PROCESSO", "TIPO TECIDO", "COR", "MALHA", "PUNHO", "GOLA", "GOLA JUV", "ALERTA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setFocusable(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable2PropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("EXCLUIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("REMOVER ALERTA");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("PROCESSO:");

        jComboBox_Processo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PEDIDO", "MALHA CRU" }));
        jComboBox_Processo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ProcessoItemStateChanged(evt);
            }
        });
        jComboBox_Processo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_ProcessoKeyPressed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Data:");

        try {
            txt_data.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("TIPO TECIDO:");

        jComboBox_Tecido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MEIA MALHA", "PIQUET", "MESCLA" }));
        jComboBox_Tecido.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_TecidoItemStateChanged(evt);
            }
        });
        jComboBox_Tecido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_TecidoKeyPressed(evt);
            }
        });

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("QTD MALHA:");

        txt_qtd_malha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_qtd_malhaFocusLost(evt);
            }
        });

        lbl_cor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_cor.setText("COR:");

        jComboBox_Cor.setMaximumRowCount(20);
        jComboBox_Cor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_CorKeyPressed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("QTD PUNHO:");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("QTD GOLA:");

        txt_qtd_punho.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_qtd_punhoFocusLost(evt);
            }
        });

        txt_qtd_gola.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_qtd_golaFocusLost(evt);
            }
        });

        btn_adicionar.setText("ADICIONAR");
        btn_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adicionarActionPerformed(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("GOLA JUVENIL:");

        txt_qtd_gola_juvenil.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_qtd_gola_juvenilFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_adicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_cor)))
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_qtd_malha)
                            .addComponent(txt_qtd_punho)
                            .addComponent(txt_qtd_gola)
                            .addComponent(txt_qtd_gola_juvenil)
                            .addComponent(jComboBox_Cor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox_Tecido, 0, 206, Short.MAX_VALUE)
                            .addComponent(jComboBox_Processo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_data))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox_Processo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox_Tecido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_cor)
                    .addComponent(jComboBox_Cor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txt_qtd_malha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txt_qtd_punho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txt_qtd_gola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_qtd_gola_juvenil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_adicionar)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        //tdgCTR.malhaCores(jComboBox_Cor);

        CoresDAO dao = new CoresDAO();

        for (CoresDTO cores : dao.ListarCoresCategoria("MEIA MALHA")) {
            jComboBox_Cor.addItem(cores.getCor());
        }

        jTabbedPane1.addTab("Adicionar Processo Malha", jPanel3);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("MALHA CRU TINTURARIA"));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIPO TECIDO", "MALHA", "PUNHO", "GOLA", "GOLA JUV"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setFocusable(false);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jTable3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable3PropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListarActionPerformed
        // TODO add your handling code here:
        listar_tudo();
    }//GEN-LAST:event_btn_ListarActionPerformed

    private void listar_tudo(){
        // TODO add your handling code here:
        String processo = jComboBox_Processo_filtro.getSelectedItem().toString();
        String status = jComboBox_status_filtro.getSelectedItem().toString();
        if (status.equals("TODOS")){
            status = "%";
        }
        //PEDIDO OU PEDIDO/ENTREGA OU ENTREGA
        if (processo.equals("PEDIDO") || processo.equals("PEDIDO/ENTREGA") || processo.equals("ENTREGA")){
            listar_malha_pedidos(processo, status);
        }
        
        //MALHA CRU
        if ( processo.equals("MALHA CRU") ){
            listar_malha_cru();
        }
        
        
        listar_SALDO_malha_cru();
        listar_itens_parciais("SIM");
    }
    
    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
        
        
       
        EtiquetaDTO etiquetas = new EtiquetaDTO();
        if ("tableCellEditor".equals(evt.getPropertyName()))
		{
			if (jTable1.isEditing()){
                        }	
                        else{
                            
                            Integer linhaSelecionada = -1;
                            linhaSelecionada = jTable1.getSelectedRow();

                            if (linhaSelecionada >= 0) {
                                Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                                
                                String etiqueta = (String) jTable1.getValueAt(linhaSelecionada, 10);
                                
                                
                                
                                DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                etiquetas.setId(id);//setar o id pra excluir
                                etiquetas.setEtiqueta(etiqueta);
                                
                                EtiquetaDAO dao = new EtiquetaDAO();
                                if (dao.atualizar(etiquetas)){
                                    System.out.println("atualizado");
                                    //listar?
                                }
                                else {
                                    System.out.println("Não atualizou");
                                }
                                  
                                        
                                        
                            }else{
                                JOptionPane.showMessageDialog(null, "Selecione uma linha!");
                            }
                        }    
		}
        
        
    }//GEN-LAST:event_jTable1PropertyChange

     
    private void btn_entregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_entregarActionPerformed
        // TODO add your handling code here:
        Integer linhaSelecionada = -1;
        linhaSelecionada = jTable1.getSelectedRow();
        if (linhaSelecionada >= 0) {
            String processo = (String) jTable1.getValueAt(linhaSelecionada, 2);
            if (processo.equals("PEDIDO")){
                entregar();
            }else{
                JOptionPane.showMessageDialog(null, "Processo não é um pedido.");
                
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
        }
        
        listar_SALDO_malha_cru();
                     
    }//GEN-LAST:event_btn_entregarActionPerformed

    public void entregar(){
        MalhaDTO malhas = new MalhaDTO();
        
        Integer linhaSelecionada = -1;
        linhaSelecionada = jTable1.getSelectedRow();
                            
                
                            if (linhaSelecionada >= 0) {
                                
                                Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                                //String data = (String) jTable1.getValueAt(linhaSelecionada, 1);
                                String tipo_tecido = (String) jTable1.getValueAt(linhaSelecionada, 3);
                                String cor = (String) jTable1.getValueAt(linhaSelecionada, 4);
                                Integer qtd_malha = (Integer) jTable1.getValueAt(linhaSelecionada, 5);
                                Integer qtd_punho = (Integer) jTable1.getValueAt(linhaSelecionada, 6);
                                Integer qtd_gola = (Integer) jTable1.getValueAt(linhaSelecionada, 7);
                                Integer qtd_gola_juv = (Integer) jTable1.getValueAt(linhaSelecionada, 8);
                                String status = (String) jTable1.getValueAt(linhaSelecionada, 9);

                                //Confirmação
                                String message = "INF. PEDIDO:\n"+id+" - "+tipo_tecido+" - "+cor+"\nMALHA: "+qtd_malha+" - PUNHO: "+qtd_punho+" - GOLA: "+qtd_gola+" - GOLA JUV: "+qtd_gola_juv+" \n";
                                String resposta;
                                
                                Integer entrega_malha, entrega_punho, entrega_gola, entrega_gola_juv;
                                
                                //ENTREGA_MALHA
                                resposta = JOptionPane.showInputDialog(jTable1,message+"\nQTD ENTREGUE\nMALHA:",qtd_malha);
                                if (resposta!=null){
                                    entrega_malha = Integer.parseInt(resposta);
                                    resposta = null;
                                }else{
                                    return;
                                }
                                //ENTREGA_PUNHO
                                resposta = JOptionPane.showInputDialog(jTable1,message+"\nQTD ENTREGUE\nPUNHO:",qtd_punho);
                                if (resposta!=null){
                                    entrega_punho = Integer.parseInt(resposta);
                                    resposta = null;
                                }else{
                                    return;
                                }
                                
                                //ENTREGA_GOLA
                                resposta = JOptionPane.showInputDialog(jTable1,message+"\nQTD ENTREGUE\nGOLA:",qtd_gola);
                                if (resposta!=null){
                                    entrega_gola = Integer.parseInt(resposta);
                                    resposta = null;
                                }else{
                                    return;
                                }
                                
                                //ENTREGA_GOLA_JUV
                                resposta = JOptionPane.showInputDialog(jTable1,message+"\nQTD ENTREGUE\nGOLA JUV:",qtd_gola_juv);
                                if (resposta!=null){
                                    entrega_gola_juv = Integer.parseInt(resposta);
                                    resposta = null;
                                }else{
                                    return;
                                }
                                
                                //SE PEDIDO != ENTRADA (QTDS)
                                
                                if ( (qtd_malha==entrega_malha && qtd_punho==entrega_punho && qtd_gola==entrega_gola && qtd_gola_juv==entrega_gola_juv) ){
                                    //insert MALHA ENTREGUE
                                    //e update status pedido para ENTREGUE
                                    String data = txt_data.getText();
                                    String processo = "ENTREGA";
                                    status = "ENTREGUE";
                                    
                                    adiciona_entrega(id, data, processo, tipo_tecido, cor, entrega_malha, entrega_punho, entrega_gola, entrega_gola_juv, status);
                                        
                                        
                                
                                }else{ //SE HOUVE DIFERENÇA NOS VALORES    
                                    JOptionPane.showMessageDialog(null, "ENTREGA PARCIAL!");
                                    String data = txt_data.getText();
                                    String processo = "ENTREGA";
                                    status = "PARCIAL";
                                    
                                    //ADICIONAR ENTREGA E ATUALIZAR STATUS PEDIDO PARA PARCIAL
                                    adiciona_entrega(id, data, processo, tipo_tecido, cor, entrega_malha, entrega_punho, entrega_gola, entrega_gola_juv, status);
                                    
                                    //inserir em MALHA_ITENS_PARCIAIS
                                    Integer saldo_malha = qtd_malha-entrega_malha;
                                    Integer saldo_punho = qtd_punho-entrega_punho;
                                    Integer saldo_gola = qtd_gola-entrega_gola;
                                    Integer saldo_gola_juv = qtd_gola_juv-entrega_gola_juv;
                                    String alerta = "SIM";
                                    processo = "ITENS PARCIAIS";
                                    adiciona_itens_parciais(id, data, processo, tipo_tecido, cor, saldo_malha, saldo_punho, saldo_gola, saldo_gola_juv, alerta);
                                    
                                }//FIM ADICIONA ITENS PARCIAIS
                                
                              
                            }else{
                                JOptionPane.showMessageDialog(null, "Selecione uma linha!");
                            }
        
        listar_tudo();
    }
    
    private void adiciona_entrega(Integer id, String data, String processo, String tipo_tecido, String cor, Integer entrega_malha, Integer entrega_punho, Integer entrega_gola, Integer entrega_gola_juv, String status){
        
               MalhaDTO malha = new MalhaDTO();
                                        
                                        malha.setId(id);//id da malha pedido
                                        malha.setData(data);
                                        malha.setPROCESSO(processo);
                                        malha.setTIPO_TECIDO(tipo_tecido);
                                        malha.setCOR(cor);
                                        //valores da entrega
                                        malha.setQTD_MALHA(entrega_malha);
                                        malha.setQTD_PUNHO(entrega_punho);
                                        malha.setQTD_GOLA(entrega_gola);
                                        malha.setQTD_GOLA_JUV(entrega_gola_juv);
                                        malha.setSTATUS(status);


                                        MalhaDAO dao = new MalhaDAO();
                                        if (dao.adicionaMalhaEntrega(malha)){
                                            DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                            model.addRow(new Object[]{malha.getId(),malha.getData(), malha.getPROCESSO(), malha.getTIPO_TECIDO(), malha.getCOR(), malha.getQTD_MALHA(), malha.getQTD_PUNHO(), malha.getQTD_GOLA(), malha.getQTD_GOLA_JUV(), malha.getSTATUS()});
                                            
                                            
                                        }else{
                                            JOptionPane.showMessageDialog(null, "ERRO AO ADICIONAR ENTREGA");
                                        }
        
    }
    
    private void adiciona_itens_parciais(Integer id, String data, String processo, String tipo_tecido, String cor, Integer saldo_malha, Integer saldo_punho, Integer saldo_gola, Integer saldo_gola_juv, String alerta){
                
        
        MalhaDTO malha = new MalhaDTO();
                malha.setId(id);//id da malha pedido
                malha.setData(data);
                malha.setPROCESSO(processo);
                malha.setTIPO_TECIDO(tipo_tecido);
                malha.setCOR(cor);
                
                malha.setQTD_MALHA(saldo_malha);
                malha.setQTD_PUNHO(saldo_punho);
                malha.setQTD_GOLA(saldo_gola);
                malha.setQTD_GOLA_JUV(saldo_gola_juv);
                malha.setALERTA(alerta);


                MalhaDAO dao = new MalhaDAO();
                if (dao.adicionaMalhaItensParciais(malha)){
                    DefaultTableModel model =  (DefaultTableModel) jTable2.getModel();
                    model.addRow(new Object[]{malha.getId(),malha.getData(), malha.getPROCESSO(), malha.getTIPO_TECIDO(), malha.getCOR(), malha.getQTD_MALHA(), malha.getQTD_PUNHO(), malha.getQTD_GOLA(), malha.getQTD_GOLA_JUV(), malha.getALERTA()});

                }else{
                    JOptionPane.showMessageDialog(null, "ERRO AO ADICIONAR ITENS PARCIAIS");
                }
    }
    
    private void jTable2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2PropertyChange

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        excluir(jTable1);
        listar_tudo();
        
    }//GEN-LAST:event_jButton2ActionPerformed
    private void excluir(JTable tabela){
        MalhaDTO malhas = new MalhaDTO();

        Integer linhaSelecionada = -1;
        linhaSelecionada = tabela.getSelectedRow();

        if (linhaSelecionada >= 0) {//se linha selecionada

            Integer id = (Integer) tabela.getValueAt(linhaSelecionada, 0);
            String processo = (String) tabela.getValueAt(linhaSelecionada, 2);
            String cor = (String) tabela.getValueAt(linhaSelecionada, 4);
            
            //Confirmação
            String message = "Deseja realmente excluir a(o) "+processo+":\nID: "+id+" cor: "+cor+" ?";
            String title = "Confirmação";
            int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION)
            {//sim
                //se confirmou
                DefaultTableModel model =  (DefaultTableModel) tabela.getModel();
                malhas.setId(id);//setar o id pra excluir
                
                switch(processo){
                    case "PEDIDO":
                        malhas.setPROCESSO("malha_pedido");
                        break;
                    case "ENTREGA":
                        malhas.setPROCESSO("malha_entrega");
                        break;
                    case "MALHA CRU":
                        malhas.setPROCESSO("malha_cru");
                        break;
                    case "ITENS PARCIAIS":
                        malhas.setPROCESSO("MALHA_ITENS_PARCIAIS");
                        break;    
                }
                
                
                MalhaDAO dao = new MalhaDAO();
                if (dao.excluir(malhas)){
                    JOptionPane.showMessageDialog(null, "Processo: "+processo+" excluido com sucesso!");
                    model.removeRow(linhaSelecionada);
                }
                else {
                    JOptionPane.showMessageDialog(null, "Erro, não foi excluido!");
                }
                
            }else{
                //não confirmou
            }

        }
        else{ //se linha não estiver selecionada
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
        }   // fim linha selecionada
    }
    private void jTable3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable3PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3PropertyChange

    private void btn_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adicionarActionPerformed
        // TODO add your handling code here:

        if (jComboBox_Processo.getSelectedItem().equals("PEDIDO")){
            //VERIFICA SE CAMPOS USADOS ESTAO COMPLETOS
            if (jComboBox_Cor.getSelectedItem().equals("") || txt_qtd_gola.getText().equals("") || txt_qtd_gola_juvenil.getText().equals("") || txt_qtd_malha.getText().equals("") || txt_qtd_punho.getText().equals("")){
                JOptionPane.showMessageDialog(null, "COMPLETE TODOS OS CAMPOS");
            }else{//campos completos
                adicionar_pedido();
                listar_SALDO_malha_cru();
            }

        }else if (jComboBox_Processo.getSelectedItem().equals("MALHA CRU")){

            if (txt_qtd_gola.getText().equals("") || txt_qtd_gola_juvenil.getText().equals("") || txt_qtd_malha.getText().equals("") || txt_qtd_punho.getText().equals("")){
                JOptionPane.showMessageDialog(null, "COMPLETE TODOS OS CAMPOS");
            }else{//campos completo
                adicionar_malha_cru();
                listar_SALDO_malha_cru();
            }

        }else{
            //adicionar_entrega();
        }
        jComboBox_Processo.requestFocus();
    }//GEN-LAST:event_btn_adicionarActionPerformed

    private void jComboBox_ProcessoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ProcessoItemStateChanged
        // TODO add your handling code here:
        if (jComboBox_Processo.getSelectedItem().equals("PEDIDO")){
            jComboBox_Cor.setVisible(true);
            lbl_cor.setVisible(true);
        }else{
            jComboBox_Cor.setVisible(false);
            lbl_cor.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox_ProcessoItemStateChanged

    private void jComboBox_Processo_filtroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_Processo_filtroItemStateChanged
        // TODO add your handling code here:
        String processo = jComboBox_Processo_filtro.getSelectedItem().toString();
        if (processo.equals("PEDIDO") || processo.equals("PEDIDO/ENTREGA") || processo.equals("ENTREGA")){
            lbl_status.setVisible(true);
            jComboBox_status_filtro.setVisible(true);
        }else{
            lbl_status.setVisible(false);
            jComboBox_status_filtro.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox_Processo_filtroItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        excluir(jTable2);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox_TecidoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_TecidoItemStateChanged
        // TODO add your handling code here:
        CoresDAO dao = new CoresDAO();
        if (jComboBox_Tecido.getSelectedItem().equals("MEIA MALHA")){
            jComboBox_Cor.removeAllItems();
            
        
            for (CoresDTO cores : dao.ListarCoresCategoria("MEIA MALHA")) {
                jComboBox_Cor.addItem(cores.getCor());
            }
            
            
        }else if (jComboBox_Tecido.getSelectedItem().equals("PIQUET")){
            jComboBox_Cor.removeAllItems();
            for (CoresDTO cores : dao.ListarCoresCategoria("PIQUET")) {
                jComboBox_Cor.addItem(cores.getCor());
            }
        }else{
            jComboBox_Cor.removeAllItems();
            for (CoresDTO cores : dao.ListarCoresCategoria("MESCLA")) {
                jComboBox_Cor.addItem(cores.getCor());
            }
        }
    }//GEN-LAST:event_jComboBox_TecidoItemStateChanged

    private void txt_qtd_malhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_qtd_malhaFocusLost
        // TODO add your handling code here:
        if (txt_qtd_malha.getText().equals("")){
            txt_qtd_malha.setText("0");
        }
    }//GEN-LAST:event_txt_qtd_malhaFocusLost

    private void txt_qtd_punhoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_qtd_punhoFocusLost
        // TODO add your handling code here:
        if (txt_qtd_punho.getText().equals("")){
            txt_qtd_punho.setText("0");
        }
    }//GEN-LAST:event_txt_qtd_punhoFocusLost

    private void txt_qtd_golaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_qtd_golaFocusLost
        // TODO add your handling code here:
        if (txt_qtd_gola.getText().equals("")){
            txt_qtd_gola.setText("0");
        }
    }//GEN-LAST:event_txt_qtd_golaFocusLost

    private void txt_qtd_gola_juvenilFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_qtd_gola_juvenilFocusLost
        // TODO add your handling code here:
        if (txt_qtd_gola_juvenil.getText().equals("")){
            txt_qtd_gola_juvenil.setText("0");
        }
    }//GEN-LAST:event_txt_qtd_gola_juvenilFocusLost

    private void jComboBox_ProcessoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_ProcessoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            jComboBox_Tecido.requestFocus();
        } 
    }//GEN-LAST:event_jComboBox_ProcessoKeyPressed

    private void jComboBox_TecidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_TecidoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            if (jComboBox_Cor.isVisible()){
                jComboBox_Cor.requestFocus();
            }else{
                txt_qtd_malha.requestFocus();
            }
            
        } 
    }//GEN-LAST:event_jComboBox_TecidoKeyPressed

    private void jComboBox_CorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_CorKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            txt_qtd_malha.requestFocus();
        } 
    }//GEN-LAST:event_jComboBox_CorKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        MalhaDTO malhas = new MalhaDTO();
        
        Integer linhaSelecionada = -1;
        linhaSelecionada = jTable2.getSelectedRow();
        if (linhaSelecionada >= 0) {
            Integer id = (Integer) jTable2.getValueAt(linhaSelecionada, 0);
            
            String alerta = "NAO";
            DefaultTableModel model =  (DefaultTableModel) jTable2.getModel();
            malhas.setId(id);//setar o id pra excluir
            malhas.setALERTA(alerta);


            MalhaDAO dao = new MalhaDAO();
            if (dao.atualizarAlerta(malhas)){
                System.out.println("atualizado");
                listar_itens_parciais("SIM");

            }
            else {
                System.out.println("Não atualizou");
            }
     
        }else{
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
        }
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            imprimir();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } catch (JRException ex) {
            Logger.getLogger(MalhaPedidosVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    //passando valores para  um relatorio ireport sem conexao no banco e pegando valores da jtable
    //metodo chamado em um jbutton
        public void imprimir() throws JRException{
                String arquivo = "relatorios_ireport/malha_pedidos.jasper"; //arquivo de relatorio
                java.io.InputStream file = getClass().getClassLoader().getResourceAsStream(arquivo); //carrego o arquivo
                
                //RowSorter sorter = jTable1.getRowSorter();
                //sorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.ASCENDING)));
                
                JRTableModelDataSource tabela = new JRTableModelDataSource(jTable1.getModel()); //aqui eu crio um datasource usando a propria jtable
                
                Map parametros = new HashMap(); //parametros sao as colunas da jtable ("fields" com o nome de COLUMN_0, COLUMN_1 )
                String titulo = null;
                String status = null;
                titulo = (String) jComboBox_Processo_filtro.getSelectedItem();
                
                status = (String) jComboBox_status_filtro.getSelectedItem();
                
                parametros.put("titulo", titulo+" - "+status);
                JasperPrint printer = JasperFillManager.fillReport(file, parametros, tabela); //aqui eu passo a jtable(tabela) para o relatorio
                JRViewer view = new JRViewer(printer); //preview
                JDialog dialog = new JDialog(); //jdialog que contem o preview
                dialog.getContentPane().add(view); //adiciono o preview
                dialog.setSize(900,600);
                dialog.setLocationRelativeTo(this);
                dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
                dialog.setModal(true);
                dialog.setVisible(true);
                 /*
                Agora é só ir até o model do relatório no meu caso é "EmitirComanda.jrxml"
                e criar os "fields" com o nome de COLUMN_0, COLUMN_1 etc..etc..
                Cada field ira receber os dados da jtable recebida conforme sua coluna. 
                No modelo EmitirComanda.jrxml va ate suas propriedades e mude a opcao:
                "When No Data" para "No Data Section", 
                isso dira para seu .jrxml q ele naum ira receber uma conexao SQL....
                depois desses passos, basta compilar o relatorio e a aplicacao e rodar 
                para ver a magia acontecer.
                */
        }//fim imprimir
    
    
    
    private void adicionar_pedido(){
        MalhaDTO malha = new MalhaDTO();
        
        String data = txt_data.getText();
        String processo = jComboBox_Processo.getSelectedItem().toString();
        String tipo_tecido = jComboBox_Tecido.getSelectedItem().toString();
        String cor = jComboBox_Cor.getSelectedItem().toString();
        
        int qtd_malha = Integer.parseInt(txt_qtd_malha.getText());
        int qtd_punho = Integer.parseInt(txt_qtd_punho.getText());
        int qtd_gola = Integer.parseInt(txt_qtd_gola.getText());
        int qtd_gola_juv = Integer.parseInt(txt_qtd_gola_juvenil.getText());
        
        String status = "PENDENTE";
        
        malha.setData(data);
        malha.setPROCESSO(processo);
        malha.setTIPO_TECIDO(tipo_tecido);
        malha.setCOR(cor);
        malha.setQTD_MALHA(qtd_malha);
        malha.setQTD_PUNHO(qtd_punho);
        malha.setQTD_GOLA(qtd_gola);
        malha.setQTD_GOLA_JUV(qtd_gola_juv);
        malha.setSTATUS(status);
        
        
        MalhaDAO dao = new MalhaDAO();
        if (dao.adicionaMalhaPedido(malha)){
            DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
            model.addRow(new Object[]{malha.getId(),malha.getData(), malha.getPROCESSO(), malha.getTIPO_TECIDO(), malha.getCOR(), malha.getQTD_MALHA(), malha.getQTD_PUNHO(), malha.getQTD_GOLA(), malha.getQTD_GOLA_JUV(), malha.getSTATUS()});
            zerar_campos();
        }else{
            JOptionPane.showMessageDialog(null, "ERRO AO ADICIONAR MALHA PEDIDO");
        }
    }
    
    private void adicionar_malha_cru(){
        MalhaDTO malha = new MalhaDTO();
        
        String data = txt_data.getText();
        String processo = jComboBox_Processo.getSelectedItem().toString();
        String tipo_tecido = jComboBox_Tecido.getSelectedItem().toString();
        
        int qtd_malha = Integer.parseInt(txt_qtd_malha.getText());
        int qtd_punho = Integer.parseInt(txt_qtd_punho.getText());
        int qtd_gola = Integer.parseInt(txt_qtd_gola.getText());
        int qtd_gola_juv = Integer.parseInt(txt_qtd_gola_juvenil.getText());
        
        //String status = "PENDENTE";
        
        malha.setData(data);
        malha.setPROCESSO(processo);
        malha.setTIPO_TECIDO(tipo_tecido);
        malha.setQTD_MALHA(qtd_malha);
        malha.setQTD_PUNHO(qtd_punho);
        malha.setQTD_GOLA(qtd_gola);
        malha.setQTD_GOLA_JUV(qtd_gola_juv);
        //malha.setSTATUS(status);
        
        
        MalhaDAO dao = new MalhaDAO();
        if (dao.adicionaMalhaCru(malha)){
            DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
            model.addRow(new Object[]{malha.getId(),malha.getData(), malha.getPROCESSO(), malha.getTIPO_TECIDO(), malha.getCOR(), malha.getQTD_MALHA(), malha.getQTD_PUNHO(), malha.getQTD_GOLA(), malha.getQTD_GOLA_JUV(), malha.getSTATUS()});
            zerar_campos();
        }else{
            JOptionPane.showMessageDialog(null, "ERRO");
        }
        
    }
    
    
    
    private void zerar_campos(){
        
        txt_qtd_malha.setText("");
        txt_qtd_punho.setText("");
        txt_qtd_gola.setText("");
        txt_qtd_gola_juvenil.setText("");
        
        txt_qtd_malha.requestFocus();
    }
    
     //listar etiquetas
    
     public void listar_malha_pedidos(String processo, String status){
         //ZERAR ROW sorter
        jTable1.setRowSorter(null);
        
        jTable1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE); 
        
        MalhaDAO dao = new MalhaDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
            
        model.setNumRows(0);
        //SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");
        for (MalhaDTO malha : dao.getMalhaPedidosOuEntrega(processo, status)) {
           
                                                //malha, codigo, cor, frente, costas, manga, status, data_alteracao, data_inicio, qtd 
            model.addRow(new Object[]{malha.getId(),malha.getData(), malha.getPROCESSO(), malha.getTIPO_TECIDO(), malha.getCOR(), malha.getQTD_MALHA(), malha.getQTD_PUNHO(), malha.getQTD_GOLA(), malha.getQTD_GOLA_JUV(), malha.getSTATUS()});
        }
       //adicionar rowsorter 
       jTable1.setAutoCreateRowSorter(true);
    }//fim listar malha pedidos
    
     
     public void listar_malha_cru(){
         //ZERAR ROW sorter
        jTable1.setRowSorter(null);
        
        jTable1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE); 
        
        MalhaDAO dao = new MalhaDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
            
        model.setNumRows(0);
        //SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");
        for (MalhaDTO malha : dao.getMalhaCru()) {
           
                                                //malha, codigo, cor, frente, costas, manga, status, data_alteracao, data_inicio, qtd 
            model.addRow(new Object[]{malha.getId(),malha.getData(), malha.getPROCESSO(), malha.getTIPO_TECIDO(), malha.getCOR(), malha.getQTD_MALHA(), malha.getQTD_PUNHO(), malha.getQTD_GOLA(), malha.getQTD_GOLA_JUV(), malha.getSTATUS()});
        }
       //adicionar rowsorter 
       jTable1.setAutoCreateRowSorter(true);
    }//fim listar malha CRU
    

    public void listar_SALDO_malha_cru(){
         //ZERAR ROW sorter
        jTable3.setRowSorter(null);
        
        jTable3.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE); 
        
        MalhaDAO dao = new MalhaDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable3.getModel(); 
            
        model.setNumRows(0);
        //SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");
        for (MalhaDTO malha : dao.getSaldoMalhaCru()) {
           
                                                //malha, codigo, cor, frente, costas, manga, status, data_alteracao, data_inicio, qtd 
            model.addRow(new Object[]{malha.getTIPO_TECIDO(), malha.getQTD_MALHA(), malha.getQTD_PUNHO(), malha.getQTD_GOLA(), malha.getQTD_GOLA_JUV()});
        }
       //adicionar rowsorter 
       jTable1.setAutoCreateRowSorter(true);
    }//fim listar malha saldo CRU

     public void listar_itens_parciais(String alerta){
         //ZERAR ROW sorter
        jTable2.setRowSorter(null);
        
        jTable2.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE); 
        
        MalhaDAO dao = new MalhaDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable2.getModel(); 
            
        model.setNumRows(0);
        //SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");
        for (MalhaDTO malha : dao.getItensParciais(alerta)) {
           
                                                //malha, codigo, cor, frente, costas, manga, status, data_alteracao, data_inicio, qtd 
            model.addRow(new Object[]{malha.getId(),malha.getData(), malha.getPROCESSO(), malha.getTIPO_TECIDO(), malha.getCOR(), malha.getQTD_MALHA(), malha.getQTD_PUNHO(), malha.getQTD_GOLA(), malha.getQTD_GOLA_JUV(), malha.getALERTA()});
        }
       //adicionar rowsorter 
       //jTable1.setAutoCreateRowSorter(true);
    }//fim listar ITENS PARCIAIS
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MalhaPedidosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MalhaPedidosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MalhaPedidosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MalhaPedidosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MalhaPedidosVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Listar;
    private javax.swing.JButton btn_adicionar;
    private javax.swing.JButton btn_entregar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox_Cor;
    private javax.swing.JComboBox jComboBox_Processo;
    private javax.swing.JComboBox jComboBox_Processo_filtro;
    private javax.swing.JComboBox jComboBox_Tecido;
    private javax.swing.JComboBox jComboBox_status_filtro;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lbl_cor;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JFormattedTextField txt_data;
    private javax.swing.JTextField txt_qtd_gola;
    private javax.swing.JTextField txt_qtd_gola_juvenil;
    private javax.swing.JTextField txt_qtd_malha;
    private javax.swing.JTextField txt_qtd_punho;
    // End of variables declaration//GEN-END:variables

    
}
