/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CTR.ImagePanel;
import CTR.tdgCTR;
import DTO.CorteDTO;
import DTO.ProdutoDTO;
import dao.CorteDAO;
import dao.ItemPedidoDAO;
import dao.RelatorioDAO;
import java.awt.BorderLayout;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Locale;
import javax.print.PrintService;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.HashPrintServiceAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.PrintServiceAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.print.attribute.standard.PrinterName;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPrintServiceExporter;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimplePrintServiceExporterConfiguration;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author pedr0
 */
public class ProdutoFichaVIEW extends javax.swing.JFrame{
    
    
    private ImagePanel imgPanel;
   
    
    public ProdutoFichaVIEW() {
        
        
        
        setExtendedState(MAXIMIZED_BOTH);
        
        //"\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\xx.jpg"
        imgPanel = new ImagePanel("\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\xx.jpg");

        
        imgPanel.setLayout(new FlowLayout());
        //Definir os tamanhos dos paineis de da frame para que a janela se ajuste
        //quando se altera a imagem.
        imgPanel.setSize(imgPanel.getWidth(), imgPanel.getHeight());
        imgPanel.setPreferredSize(new Dimension(imgPanel.getWidth(), imgPanel.getHeight()));

        initComponents();
        jpContainer.add(imgPanel, BorderLayout.CENTER);

        //Definir os tamanhos dos paineis de da frame para que a janela se ajuste
        //quando se altera a imagem.
        jpContainer.setSize(imgPanel.getWidth() + 5, imgPanel.getHeight() + 5);
        jpContainer.setPreferredSize(new Dimension(imgPanel.getWidth() + 5, imgPanel.getHeight() + 5));
        jpContainer.validate();
        setPreferredSize(new Dimension(imgPanel.getWidth() + 5, imgPanel.getHeight() + 5));
        //setSize(imgPanel.getWidth() + 10, imgPanel.getHeight() + 110);
        validate();
        
        
        txt_codigo.requestFocus();
        tdgCTR.auto_selecionar(txt_codigo);
        tdgCTR.considerarEnterComoTab(txt_codigo);
        
        tdgCTR.hotkey(KeyEvent.VK_F2, "tecla_f2", btn_imprimir_corte);
        
        tdgCTR.hotkey(KeyEvent.VK_F3, "tecla_f3", btn_imprimir_cost_externa);
    }
    
   
   

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        btn_Pesquisar = new javax.swing.JButton();
        btn_ver_ficha_tecnica = new javax.swing.JButton();
        btn_imprimir_ficha_tecnica = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jpContainer = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_corte = new javax.swing.JComboBox();
        btn_ficha_corte = new javax.swing.JButton();
        btn_imprimir_corte = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_copias = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_grade = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jcombobox_imp = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jComboBox_Arquivos = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btn_ficha_costura_externa = new javax.swing.JButton();
        btn_imprimir_cost_externa = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txt_copias_ext = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ficha Tecnica");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ficha Padrão"));

        jLabel3.setText("CODIGO:");

        txt_codigo.setNextFocusableComponent(jComboBox_corte);
        txt_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_codigoFocusLost(evt);
            }
        });
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
        });

        btn_Pesquisar.setText("VER");
        btn_Pesquisar.setFocusable(false);
        btn_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PesquisarActionPerformed(evt);
            }
        });

        btn_ver_ficha_tecnica.setMnemonic('T');
        btn_ver_ficha_tecnica.setText("Ver Ficha Técnica");
        btn_ver_ficha_tecnica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ver_ficha_tecnicaActionPerformed(evt);
            }
        });

        btn_imprimir_ficha_tecnica.setText("Imprimir Ficha Técnica");
        btn_imprimir_ficha_tecnica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imprimir_ficha_tecnicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_imprimir_ficha_tecnica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Pesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btn_ver_ficha_tecnica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Pesquisar)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ver_ficha_tecnica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_imprimir_ficha_tecnica)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Imagem"));

        javax.swing.GroupLayout jpContainerLayout = new javax.swing.GroupLayout(jpContainer);
        jpContainer.setLayout(jpContainerLayout);
        jpContainerLayout.setHorizontalGroup(
            jpContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 535, Short.MAX_VALUE)
        );
        jpContainerLayout.setVerticalGroup(
            jpContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 479, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jpContainer);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ficha Corte"));

        jLabel2.setText("DIV:");

        jComboBox_corte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_corteKeyPressed(evt);
            }
        });

        btn_ficha_corte.setMnemonic('C');
        btn_ficha_corte.setText("Ver Ficha Corte");
        btn_ficha_corte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ficha_corteActionPerformed(evt);
            }
        });

        btn_imprimir_corte.setText("Imprimir Corte (F2)");
        btn_imprimir_corte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imprimir_corteActionPerformed(evt);
            }
        });

        jLabel5.setText("Nº Cópias:");

        txt_copias.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_copias.setText("2");
        txt_copias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_copiasActionPerformed(evt);
            }
        });

        jLabel4.setText("GRADE:");

        txt_grade.setEditable(false);
        txt_grade.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_ficha_corte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btn_imprimir_corte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_copias, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox_corte, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_grade))))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox_corte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_grade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ficha_corte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_imprimir_corte)
                    .addComponent(jLabel5)
                    .addComponent(txt_copias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel6.setText("Impressora:");

        jcombobox_imp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "\\\\PC_IMPRESSORAS\\EPSON L365 Series" }));
        jcombobox_imp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcombobox_impActionPerformed(evt);
            }
        });

        jLabel1.setText("REF:");

        jComboBox_Arquivos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ArquivosItemStateChanged(evt);
            }
        });
        jComboBox_Arquivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_ArquivosActionPerformed(evt);
            }
        });

        jButton5.setText("Carregar Lista Arquivos");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ficha Costura Externa"));

        btn_ficha_costura_externa.setMnemonic('E');
        btn_ficha_costura_externa.setText("Ver Ficha Costura Externa");
        btn_ficha_costura_externa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ficha_costura_externaActionPerformed(evt);
            }
        });

        btn_imprimir_cost_externa.setText("Imprimir Cost. Ext. (F3)");
        btn_imprimir_cost_externa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imprimir_cost_externaActionPerformed(evt);
            }
        });

        jLabel7.setText("Nº Cópias:");

        txt_copias_ext.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_copias_ext.setText("2");
        txt_copias_ext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_copias_extActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_ficha_costura_externa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btn_imprimir_cost_externa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_copias_ext, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_ficha_costura_externa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_imprimir_cost_externa)
                    .addComponent(jLabel7)
                    .addComponent(txt_copias_ext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcombobox_imp, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_Arquivos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jcombobox_imp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox_Arquivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)))
                .addContainerGap())
        );

        //pegando impresssoras instaladas
        for (PrintService p : PrinterJob.lookupPrintServices()) {
            jcombobox_imp.addItem(p.getName());
            //System.out.println(p.getName());
        }

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_ArquivosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ArquivosItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox_ArquivosItemStateChanged

    private void jComboBox_ArquivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_ArquivosActionPerformed
        // TODO add your handling code here:
        
        String imagem = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+jComboBox_Arquivos.getSelectedItem().toString();
        changeBackgroundImage(imagem); 
        
        //   changeBackgroundImage("\\\\pcestamparia\\D\\TDG 3000\\JPEG\\"+jComboBox1.getSelectedItem().toString()); 
        
        
        
    }//GEN-LAST:event_jComboBox_ArquivosActionPerformed

    private void btn_ficha_corteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ficha_corteActionPerformed
        // TODO add your handling code here:
        HashMap parametros = new HashMap();
        RelatorioDAO dao = new RelatorioDAO();
        
        String codigo = txt_codigo.getText();
       
        //String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+jComboBox1.getSelectedItem().toString();
        String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+codigo+".jpg";
        System.out.println("Caminho: "+ref);
        String corte = jComboBox_corte.getSelectedItem().toString();
        String grade = txt_grade.getText();
        parametros.put("arquivo", ref);
        parametros.put("codigo", codigo);
        parametros.put("corte", corte);
        parametros.put("grade", grade);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        JRResultSetDataSource jrRS = new JRResultSetDataSource(dao.ficha_corte(codigo,corte));
        JasperPrint jasperPrint;

        try {
            //PEGANDO DO DIRETORIO MAZIN
            //jasperPrint = JasperFillManager.fillReport("\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\relatorios\\"+TDG_SIS_VIEW.banco_selecionado+"\\n_pedido.jasper" , parametros, jrRS);  

                InputStream inputStream;

                inputStream = getClass().getResourceAsStream( "/relatorios_ireport/fichaCorte.jasper" );

                jasperPrint = JasperFillManager.fillReport(inputStream, parametros, jrRS);
                JasperViewer.viewReport(jasperPrint, false);
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

    }//GEN-LAST:event_btn_ficha_corteActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        jComboBox_Arquivos.removeAllItems();
        // String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+jComboBox1.getSelectedItem().toString();
        File arquivo = new File("\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\");
        File[] file = arquivo.listFiles();

        if(file != null){
            int length = file.length;

            for(int i = 0; i < length; ++i){
                File f = file[i];

                if(f.isFile()){

                    jComboBox_Arquivos.addItem(f.getName());
                    System.out.println(f.getName());
                }

                else if(f.isDirectory()){

                    System.out.println("Diretorio: " + f.getName());
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btn_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PesquisarActionPerformed
        // TODO add your handling code here:
        
        pesquisar_ref(txt_codigo.getText());
    }//GEN-LAST:event_btn_PesquisarActionPerformed

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoActionPerformed

    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
        // TODO add your handling code here:
        /*
        if(evt.getKeyCode() == evt.VK_ENTER){
            
            pesquisar_ref(txt_codigo.getText());
            
        }
        */
    }//GEN-LAST:event_txt_codigoKeyPressed

    private void txt_copiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_copiasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_copiasActionPerformed
    private void imprimir_corte(){
        HashMap parametros = new HashMap();
        RelatorioDAO dao = new RelatorioDAO();
        
        String codigo = txt_codigo.getText();
       
        //String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+jComboBox1.getSelectedItem().toString();
        String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+codigo+".jpg";
        System.out.println("Caminho: "+ref);
        String corte = jComboBox_corte.getSelectedItem().toString();
        String grade = txt_grade.getText();
        parametros.put("arquivo", ref);
        parametros.put("codigo", codigo);
        parametros.put("corte", corte);
        parametros.put("grade", grade);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        JRResultSetDataSource jrRS = new JRResultSetDataSource(dao.ficha_corte(codigo,corte));
        JasperPrint jasperPrint;

        try {
            //PEGANDO DO DIRETORIO MAZIN
            //jasperPrint = JasperFillManager.fillReport("\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\relatorios\\"+TDG_SIS_VIEW.banco_selecionado+"\\n_pedido.jasper" , parametros, jrRS);  

                InputStream inputStream;

                inputStream = getClass().getResourceAsStream( "/relatorios_ireport/fichaCorte.jasper" );

                jasperPrint = JasperFillManager.fillReport(inputStream, parametros, jrRS);

                //IMPRIME DIRETO
                //JasperPrintManager.printReport(jasperPrint,true);
                
                
                
                //new
                Integer qtd = Integer.parseInt(txt_copias.getText());
                
                
                PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
                //printRequestAttributeSet.add(MediaSizeName.ISO_A4);
                printRequestAttributeSet.add(new Copies(qtd));

                PrintServiceAttributeSet printServiceAttributeSet = new HashPrintServiceAttributeSet();
                //printServiceAttributeSet.add(new PrinterName("Argox_OS-214_plus_series_PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("Argox OS-214 plus series PPLA em pcestamparia", Locale.getDefault()));
                
               
                printServiceAttributeSet.add(new PrinterName(jcombobox_imp.getSelectedItem().toString(), Locale.getDefault()));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("//pcestamparia/Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox_OS-214_plus_series_PPLA", Locale.getDefault()));
                JRPrintServiceExporter exporter = new JRPrintServiceExporter();

                exporter.setExporterInput(new SimpleExporterInput(jasperPrint));
                SimplePrintServiceExporterConfiguration configuration = new SimplePrintServiceExporterConfiguration();
                configuration.setPrintRequestAttributeSet(printRequestAttributeSet);
                configuration.setPrintServiceAttributeSet(printServiceAttributeSet);
                exporter.setConfiguration(configuration);
                //true para aprecer opções
                configuration.setDisplayPageDialog(false);
                configuration.setDisplayPrintDialog(false);

                exporter.setConfiguration(configuration);

                System.out.println("Inicializando impressão");  
                exporter.exportReport();  
                System.out.println("Impressão finalizada"); 
                //fecha new
                

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, "ERRO AO IMPRIMIR!\n"+ex);
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            
            txt_codigo.requestFocus();
    }
    private void btn_imprimir_corteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imprimir_corteActionPerformed
        // TODO add your handling code here:
        imprimir_corte();
        //JOptionPane.showMessageDialog(rootPane, "lawww");
    }//GEN-LAST:event_btn_imprimir_corteActionPerformed

    private void txt_copias_extActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_copias_extActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_copias_extActionPerformed
    
    private void verificar_tipo_tamanho(){
            
            //pegar tipo_tamanho
            
           
            
    }
    
    private void btn_ficha_costura_externaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ficha_costura_externaActionPerformed
        // TODO add your handling code here:
        HashMap parametros = new HashMap();
        //RelatorioDAO dao = new RelatorioDAO();
        
        String codigo = txt_codigo.getText();
        //PEGAR TIPO_TAMANHO
        
        String t1 = null, t2 = null, t3 = null, t4 = null;
        
            ItemPedidoDAO dao = new ItemPedidoDAO();
            
            //pegando dados da referencia inserida

            for (ProdutoDTO p : dao.getProdutosRef(txt_codigo.getText())) {
                
                String tipo = p.getTipo_tamanho();
                System.out.println("Tipo: "+tipo);
                
                switch (tipo) {
                    case "ESPECIAL":
                    {
                        t1 = "G1";
                        t2 = "G2";
                        t3 = "G3";
                        t4 = "-";                        
                        break;
                    }
                    case "JUVENIL":
                    {
                        t1 = "10";
                        t2 = "12";
                        t3 = "14";
                        t4 = "16";    
                        break;
                    }
                    case "NORMAL":
                    {
                        t1 = "P";
                        t2 = "M";
                        t3 = "G";
                        t4 = "GG";
                        break;
                    }
                    default:{
                        //se nao existir ref, deselecionar todos
                        
                        t1 = "-";
                        t2 = "-";
                        t3 = "-";
                        t4 = "-";    
                    }

                }
                
            }//se codigo ref invalida
        
        
        //FIM PEGAR TAMANHO
        
        
       
        //String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+jComboBox1.getSelectedItem().toString();
        String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+codigo+".jpg";
        String costura_externa = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\costura_externa.gif";
        System.out.println("Caminho: "+ref);
        //String corte = jComboBox_corte.getSelectedItem().toString();
        //String grade = txt_grade.getText();
        parametros.put("arquivo", ref);
        parametros.put("T1", t1);
        parametros.put("T2", t2);
        parametros.put("T3", t3);
        parametros.put("T4", t4);
        parametros.put("costura_externa", costura_externa);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        
        ArrayList array_qtd = new ArrayList();
        array_qtd.add("Número" + 1);  
       
        
        JRBeanCollectionDataSource jrRS = new JRBeanCollectionDataSource(array_qtd);  
        
        
        //--
        
        JasperPrint jasperPrint;

        try {
            //PEGANDO DO DIRETORIO MAZIN
            //jasperPrint = JasperFillManager.fillReport("\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\relatorios\\"+TDG_SIS_VIEW.banco_selecionado+"\\n_pedido.jasper" , parametros, jrRS);  

                InputStream inputStream;

                inputStream = getClass().getResourceAsStream( "/relatorios_ireport/fichaCosturaExterna.jasper" );

                jasperPrint = JasperFillManager.fillReport(inputStream, parametros, jrRS);
                JasperViewer.viewReport(jasperPrint, false);
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btn_ficha_costura_externaActionPerformed
    private void imprimir_costura_externa(){
        HashMap parametros = new HashMap();
        //RelatorioDAO dao = new RelatorioDAO();
        
        String codigo = txt_codigo.getText();
        //PEGAR TIPO_TAMANHO
        
        String t1 = null, t2 = null, t3 = null, t4 = null;
        
            ItemPedidoDAO dao = new ItemPedidoDAO();
            
            //pegando dados da referencia inserida

            for (ProdutoDTO p : dao.getProdutosRef(txt_codigo.getText())) {
                
                String tipo = p.getTipo_tamanho();
                System.out.println("Tipo: "+tipo);
                
                switch (tipo) {
                    case "ESPECIAL":
                    {
                        t1 = "G1";
                        t2 = "G2";
                        t3 = "G3";
                        t4 = "-";                        
                        break;
                    }
                    case "JUVENIL":
                    {
                        t1 = "10";
                        t2 = "12";
                        t3 = "14";
                        t4 = "16";    
                        break;
                    }
                    case "NORMAL":
                    {
                        t1 = "P";
                        t2 = "M";
                        t3 = "G";
                        t4 = "GG";
                        break;
                    }
                    default:{
                        //se nao existir ref, deselecionar todos
                        
                        t1 = "-";
                        t2 = "-";
                        t3 = "-";
                        t4 = "-";    
                    }

                }
                
            }//se codigo ref invalida
        
        
        //FIM PEGAR TAMANHO
        
        
       
        //String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+jComboBox1.getSelectedItem().toString();
        String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+codigo+".jpg";
        String costura_externa = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\costura_externa.gif";
        System.out.println("Caminho: "+ref);
        //String corte = jComboBox_corte.getSelectedItem().toString();
        //String grade = txt_grade.getText();
        parametros.put("arquivo", ref);
        parametros.put("T1", t1);
        parametros.put("T2", t2);
        parametros.put("T3", t3);
        parametros.put("T4", t4);
        parametros.put("costura_externa", costura_externa);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        
        ArrayList array_qtd = new ArrayList();
        array_qtd.add("Número" + 1);  
       
        
        JRBeanCollectionDataSource jrRS = new JRBeanCollectionDataSource(array_qtd);  
        
        
        //--
        
        JasperPrint jasperPrint;

        try {
            //PEGANDO DO DIRETORIO MAZIN
            //jasperPrint = JasperFillManager.fillReport("\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\relatorios\\"+TDG_SIS_VIEW.banco_selecionado+"\\n_pedido.jasper" , parametros, jrRS);  

                InputStream inputStream;

                inputStream = getClass().getResourceAsStream( "/relatorios_ireport/fichaCosturaExterna.jasper" );

                jasperPrint = JasperFillManager.fillReport(inputStream, parametros, jrRS);
                



                //imprimir direto
                Integer qtd = Integer.parseInt(txt_copias_ext.getText());
                
                
                PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
                //printRequestAttributeSet.add(MediaSizeName.ISO_A4);
                printRequestAttributeSet.add(new Copies(qtd));

                PrintServiceAttributeSet printServiceAttributeSet = new HashPrintServiceAttributeSet();
                //printServiceAttributeSet.add(new PrinterName("Argox_OS-214_plus_series_PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("Argox OS-214 plus series PPLA em pcestamparia", Locale.getDefault()));
                
               
                printServiceAttributeSet.add(new PrinterName(jcombobox_imp.getSelectedItem().toString(), Locale.getDefault()));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("//pcestamparia/Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox_OS-214_plus_series_PPLA", Locale.getDefault()));
                JRPrintServiceExporter exporter = new JRPrintServiceExporter();

                exporter.setExporterInput(new SimpleExporterInput(jasperPrint));
                SimplePrintServiceExporterConfiguration configuration = new SimplePrintServiceExporterConfiguration();
                configuration.setPrintRequestAttributeSet(printRequestAttributeSet);
                configuration.setPrintServiceAttributeSet(printServiceAttributeSet);
                exporter.setConfiguration(configuration);
                //true para aprecer opções
                configuration.setDisplayPageDialog(false);
                configuration.setDisplayPrintDialog(false);

                exporter.setConfiguration(configuration);

                System.out.println("Inicializando impressão");  
                exporter.exportReport();  
                System.out.println("Impressão finalizada"); 
                //fecha new
                

            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, "ERRO AO IMPRIMIR!\n"+ex);
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            
            txt_codigo.requestFocus();
    }
    private void btn_imprimir_cost_externaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imprimir_cost_externaActionPerformed
        // TODO add your handling code here:
        imprimir_costura_externa();
    }//GEN-LAST:event_btn_imprimir_cost_externaActionPerformed

    private void btn_ver_ficha_tecnicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ver_ficha_tecnicaActionPerformed
        // TODO add your handling code here:
        HashMap parametros = new HashMap();
        //RelatorioDAO dao = new RelatorioDAO();
        
        String codigo = txt_codigo.getText();
        //PEGAR TIPO_TAMANHO
        
       
        
       
        //String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+jComboBox1.getSelectedItem().toString();
        String ref = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+codigo+".jpg";
        System.out.println("Caminho: "+ref);
        //String corte = jComboBox_corte.getSelectedItem().toString();
        //String grade = txt_grade.getText();
        parametros.put("arquivo", ref);
        
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        
        ArrayList array_qtd = new ArrayList();
        array_qtd.add("Número" + 1);  
       
        
        JRBeanCollectionDataSource jrRS = new JRBeanCollectionDataSource(array_qtd);  
        
        
        //--
        
        JasperPrint jasperPrint;

        try {
            //PEGANDO DO DIRETORIO MAZIN
            //jasperPrint = JasperFillManager.fillReport("\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\relatorios\\"+TDG_SIS_VIEW.banco_selecionado+"\\n_pedido.jasper" , parametros, jrRS);  

                InputStream inputStream;

                inputStream = getClass().getResourceAsStream( "/relatorios_ireport/fichaNormal.jasper" );

                jasperPrint = JasperFillManager.fillReport(inputStream, parametros, jrRS);
                JasperViewer.viewReport(jasperPrint, false);
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
        
        
        
    }//GEN-LAST:event_btn_ver_ficha_tecnicaActionPerformed

    private void txt_codigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_codigoFocusLost
        // TODO add your handling code here:
        pesquisar_ref(txt_codigo.getText());
        
    }//GEN-LAST:event_txt_codigoFocusLost

    private void btn_imprimir_ficha_tecnicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imprimir_ficha_tecnicaActionPerformed
        // TODO add your handling code here:
        
        txt_codigo.requestFocus();
    }//GEN-LAST:event_btn_imprimir_ficha_tecnicaActionPerformed

    private void jComboBox_corteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_corteKeyPressed
        // TODO add your handling code here:
        /*
        if(evt.getKeyCode() == evt.VK_F2){
            
           imprimir_corte();
            
        }
        if(evt.getKeyCode() == evt.VK_F3){
            
           imprimir_costura_externa();
           
            
        }
        */
        
    }//GEN-LAST:event_jComboBox_corteKeyPressed

    private void jcombobox_impActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcombobox_impActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcombobox_impActionPerformed
    
    private void pesquisar_ref(String codigo){
        //listar cores cadastradas na ref
        btn_Pesquisar.requestFocus();
        jComboBox_corte.removeAllItems();
        txt_grade.setText("");
        
        
        String imagem = "\\\\"+TDG_SIS_VIEW.ip_servidor+"\\TDG_sis_prod\\JPEG\\"+TDG_SIS_VIEW.banco_selecionado+"\\"+codigo+".jpg";
        changeBackgroundImage(imagem); 
        
        
        
        CorteDAO dao = new CorteDAO();
        
        for (CorteDTO cortes : dao.fichaCorte(codigo)) {
            jComboBox_corte.addItem(cortes.getCorte());
            txt_grade.setText(cortes.getGrade());
        }
       
        
        //txt_codigo.requestFocus();
    }
    
    
    
    private void changeBackgroundImage(String url) {
        
        if (imgPanel != null) {
            imgPanel.removeAll();
            imgPanel.setImage(url);

            //Definir os tamanhos dos paineis de da frame para que a janela se ajuste
            //quando se altera a imagem.
            imgPanel.setSize(imgPanel.getWidth(), imgPanel.getHeight());
            imgPanel.setPreferredSize(new Dimension(imgPanel.getWidth(), imgPanel.getHeight()));
            jpContainer.setSize(imgPanel.getWidth() + 5, imgPanel.getHeight() + 5);
            jpContainer.setPreferredSize(new Dimension(imgPanel.getWidth() + 5, imgPanel.getHeight() + 5));
            jpContainer.validate();
            setPreferredSize(new Dimension(imgPanel.getWidth() + 5, imgPanel.getHeight() + 5));
            //setSize(imgPanel.getWidth() + 10, imgPanel.getHeight() + 110);
            validate();
            jpContainer.repaint();
        }
    }
    
    private void changeBackgroundImageRedimencionado(String url) {
        
        if (imgPanel != null) {
            imgPanel.removeAll();
            imgPanel.setImage(url);

            //Definir os tamanhos dos paineis de da frame para que a janela se ajuste
            //quando se altera a imagem.
            imgPanel.setSize(100, 100);
            imgPanel.setPreferredSize(new Dimension(100, 100));
            //jpContainer.setSize(imgPanel.getWidth() + 5, imgPanel.getHeight() + 5);
            //jpContainer.setPreferredSize(new Dimension(imgPanel.getWidth() + 5, imgPanel.getHeight() + 5));
            jpContainer.validate();
            setPreferredSize(new Dimension(100, 100));
            //setSize(imgPanel.getWidth() + 10, imgPanel.getHeight() + 110);
            validate();
            jpContainer.repaint();
        }
    }
    
    /**
     * Redefinir o método para centrar a frame, apenas por conveniência.
     *
     * @param visible boolean indica se a frame está visível ou não.
     */

    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProdutoFichaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProdutoFichaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProdutoFichaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProdutoFichaVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProdutoFichaVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Pesquisar;
    private javax.swing.JButton btn_ficha_corte;
    private javax.swing.JButton btn_ficha_costura_externa;
    private javax.swing.JButton btn_imprimir_corte;
    private javax.swing.JButton btn_imprimir_cost_externa;
    private javax.swing.JButton btn_imprimir_ficha_tecnica;
    private javax.swing.JButton btn_ver_ficha_tecnica;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox_Arquivos;
    private javax.swing.JComboBox jComboBox_corte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcombobox_imp;
    private javax.swing.JPanel jpContainer;
    private javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_copias;
    private javax.swing.JTextField txt_copias_ext;
    private javax.swing.JTextField txt_grade;
    // End of variables declaration//GEN-END:variables

    
}
