/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CTR.tdgCTR;
import DTO.FuncionarioDTO;
import dao.FuncionarioDAO;
import java.awt.Cursor;
import java.awt.Dialog;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JRViewer;

/**
 *
 * @author pedr0
 */
public class FuncionarioBancoHorasVIEW extends javax.swing.JFrame {

    /**
     * Creates new form BancoHorasVIEW
     */
    public FuncionarioBancoHorasVIEW() {
        initComponents();
        
        setExtendedState(MAXIMIZED_BOTH);
        //busca funcionarios cadastrados
        funcionariosCombobox();
        saldoFuncionarios();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup_Assinado = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox_Funcionario = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton_entrada = new javax.swing.JRadioButton();
        jRadioButton_saida = new javax.swing.JRadioButton();
        txt_data_evento = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_area_motivo = new javax.swing.JTextArea();
        btn_cadastrar = new javax.swing.JButton();
        txt_horas = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton_listar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jRadioButton_todos = new javax.swing.JRadioButton();
        jRadioButton_sim = new javax.swing.JRadioButton();
        jRadioButton_nao = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Banco de Horas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastrar Horas"));

        jLabel1.setText("Colaborador:");

        jComboBox_Funcionario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "%" }));

        jLabel2.setText("Tipo:");

        buttonGroup1.add(jRadioButton_entrada);
        jRadioButton_entrada.setText("Entrada");

        buttonGroup1.add(jRadioButton_saida);
        jRadioButton_saida.setText("Saida");

        try {
            txt_data_evento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel3.setText("Data:");

        jLabel4.setText("Horas:");

        jLabel5.setText("Motivo:");

        txt_area_motivo.setColumns(20);
        txt_area_motivo.setRows(5);
        jScrollPane1.setViewportView(txt_area_motivo);

        btn_cadastrar.setText("Cadastrar");
        btn_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cadastrarActionPerformed(evt);
            }
        });

        try {
            txt_horas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_data_evento)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButton_entrada)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton_saida)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jComboBox_Funcionario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_horas))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5)
                                .addComponent(jScrollPane1)
                                .addComponent(btn_cadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Funcionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jRadioButton_entrada)
                    .addComponent(jRadioButton_saida))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_data_evento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_horas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_cadastrar))
        );

        jButton_listar.setText("Listar");
        jButton_listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_listarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CHECK", "FUNCIONARIO", "DATA", "TIPO", "HORAS", "MOTIVO", "ASSINADO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setMinWidth(20);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(20);
        }
        //ocultar id
        jTable1.getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable1.getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMinWidth( 0 );

        jTable1.setAutoCreateRowSorter(true);

        jButton3.setText("Relatorio");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        buttonGroup_Assinado.add(jRadioButton_todos);
        jRadioButton_todos.setText("TODOS");

        buttonGroup_Assinado.add(jRadioButton_sim);
        jRadioButton_sim.setText("ASSINADOS");

        buttonGroup_Assinado.add(jRadioButton_nao);
        jRadioButton_nao.setSelected(true);
        jRadioButton_nao.setText("NÃO ASSINADO");

        jButton1.setText("Mudar para Assinado");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton_todos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton_sim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton_nao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_listar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_excluir))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_listar)
                    .addComponent(jButton3)
                    .addComponent(jRadioButton_todos)
                    .addComponent(jRadioButton_sim)
                    .addComponent(jRadioButton_nao)
                    .addComponent(jButton1)
                    .addComponent(btn_excluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Saldos Funcionarios"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Colaborador", "Area", "Total_Entrada", "Total_Saida", "Saldo Horas"
            }
        ));
        jScrollPane3.setViewportView(jTable2);
        jTable2.setAutoCreateRowSorter(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1001, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_listarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_listarActionPerformed
        // TODO add your handling code here:
        
        
        listar();
        
        
    }//GEN-LAST:event_jButton_listarActionPerformed

    private void listar(){
        jTable1.setVisible(true);
       FuncionarioDAO dao = new FuncionarioDAO();
       DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
            
       model.setNumRows(0);
       
       String funcionario = jComboBox_Funcionario.getSelectedItem().toString();
       
       //ASSINADO
       String assinado = null;
       if (jRadioButton_todos.isSelected()){
           assinado = "%";
       }else if (jRadioButton_sim.isSelected()){
           assinado = "SIM";           
       }else{
           assinado = "NAO";
       }
       
      
       
       //SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");
       //formatarData.format(LocalDate.parse(f.getData_evento()).toDate())
       
       for (FuncionarioDTO f : dao.getBancoHorasPorNome(funcionario, assinado)) {
           
            model.addRow(new Object[]{f.getId(), new Boolean(true),  f.getNome(), tdgCTR.getDataFormatada(f.getData_evento()), f.getTipo(), f.getHoras(), f.getMotivo(), f.getAssinado()});
       }
    }
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            imprimir();
            setar_assinado();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } catch (JRException ex) {
            Logger.getLogger(MalhaConsumoVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setar_assinado();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    
    
    
    private void btn_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cadastrarActionPerformed
        // TODO add your handling code here:
        FuncionarioDTO funcionarios = new FuncionarioDTO();
        funcionarios.setNome(jComboBox_Funcionario.getSelectedItem().toString());

        String tipo = null;
        if ( jRadioButton_entrada.isSelected() ){
            tipo = "ENTRADA";
        }else{
            tipo = "SAIDA";
        }

        funcionarios.setTipo(tipo);
        funcionarios.setData_evento(txt_data_evento.getText());
        funcionarios.setHoras(txt_horas.getText());
        funcionarios.setMotivo(txt_area_motivo.getText());
        funcionarios.setAssinado("NAO");

        //fazendo a validação dos dados
        if ((  tipo.isEmpty() ) || (txt_data_evento.getText().isEmpty()) || (txt_horas.getText().isEmpty()) ) {
            JOptionPane.showMessageDialog(null, "Os campos não podem retornar vazios");
        }
        else {

            FuncionarioDAO dao = new FuncionarioDAO();
            if (dao.adiciona_hora(funcionarios)){

                DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                model.setNumRows(0);
                model.addRow(new Object[]{funcionarios.getId(), new Boolean(true), funcionarios.getNome(), funcionarios.getData_evento(), funcionarios.getTipo(), funcionarios.getHoras(), funcionarios.getMotivo(), funcionarios.getAssinado()});

                // apaga os dados preenchidos nos campos de texto

                txt_data_evento.setText("");
                txt_horas.setText("");
                txt_area_motivo.setText("");

                //ATUALIZAR SALDOS
                saldoFuncionarios();
            }
            else {
                JOptionPane.showMessageDialog(null, "Erro, hora não foi cadastrada!");
            }

        }
    }//GEN-LAST:event_btn_cadastrarActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        // TODO add your handling code here:
        excluir_horas();
    }//GEN-LAST:event_btn_excluirActionPerformed
    public void excluir_horas(){
        FuncionarioDTO funcionarios = new FuncionarioDTO();
        //Confirmação
                                String message = "Deseja excluir todos itens marcados?";
                                String title = "Ecluir";
                                int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                               
                                tdgCTR geral = new tdgCTR();
                                System.err.println("Respota:"+reply);
                                if (reply == JOptionPane.NO_OPTION){
                                
                                    JOptionPane.showMessageDialog(null, "Cancelado.");
                                }else{//sim(
                                           
                                    Boolean calcular; 
                                    Integer id;
                                    
                                    
                                    for(int i=0;i<jTable1.getRowCount();i++){ 
                                        calcular = (Boolean) jTable1.getValueAt(i, 1);
                                        
                                        //SE ESTIVER SELECIONADO
                                        if (calcular == true){
                                            //ref = (String) jTable1.getValueAt(i,2);
                                            id = (Integer) jTable1.getValueAt(i, 0);
                                           
                                            
                                            DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                            funcionarios.setId(id);
                                            
                                            FuncionarioDAO dao = new FuncionarioDAO();
                                            
                                            
                                            if (dao.excluir_hora(funcionarios)){
                                                System.out.println("atualizado");
                                                
                                            }
                                            else {
                                                JOptionPane.showMessageDialog(null, "Erro ao excluir!");
                                            }
                                
                                        }//fim selecionado
        
                                    }//fim row count
                                    
                                    listar();
                                    saldoFuncionarios();
                                }//fim confirmar excluir
    }//fim metodo excluir
    
    public void setar_assinado(){
        FuncionarioDTO funcionarios = new FuncionarioDTO();
        //Confirmação
                                String message = "Deseja mudar para assinado todos itens selelcionados?";
                                String title = "Setar como assinado";
                                
                                int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                               
                                System.err.println("Respota:"+reply);
                                if (reply == JOptionPane.NO_OPTION){
                                
                                    JOptionPane.showMessageDialog(null, "Cancelado.");
                                }else{//sim(
                                
                                           
                                    Boolean calcular; 
                                    Integer id;
                                    String assinado;
                                    
                                    for(int i=0;i<jTable1.getRowCount();i++){ 
                                        calcular = (Boolean) jTable1.getValueAt(i, 1);
                                        
                                        //SE ESTIVER SELECIONADO
                                        if (calcular == true){
                                            //ref = (String) jTable1.getValueAt(i,2);
                                            id = (Integer) jTable1.getValueAt(i, 0);
                                            //assinado = (String) jTable1.getValueAt(i, 7);
                                            assinado = "SIM";
                                            
                                            DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                            funcionarios.setId(id);
                                            funcionarios.setAssinado(assinado);

                                            
                                            FuncionarioDAO dao = new FuncionarioDAO();
                                            if (dao.atualizarAssinado(funcionarios)){
                                                System.out.println("atualizado");
                                                
                                            }
                                            else {
                                                System.out.println("Não atualizou");
                                            }
                                
                                        }//fim selecionado
        
                                    }//fim row count
                                    
                                    listar();
                                }//fim confirmar assinado
    }//fim metodo
    
    ///fim
    
    
        //passando valores para  um relatorio ireport sem conexao no banco e pegando valores da jtable
        //metodo chamado em um jbutton
        public void imprimir() throws JRException{
                String arquivo = "relatorios_ireport/banco_horas.jasper"; //arquivo de relatorio
                java.io.InputStream file = getClass().getClassLoader().getResourceAsStream(arquivo); //carrego o arquivo
                
                
                JRTableModelDataSource tabela = new JRTableModelDataSource(jTable1.getModel()); //aqui eu crio um datasource usando a propria jtable
                
                Map parametros = new HashMap(); //parametros sao as colunas da jtable ("fields" com o nome de COLUMN_0, COLUMN_1 )
                
                //PEGAR SALDO E PASSAR POR PARAMETROS
                FuncionarioDAO dao = new FuncionarioDAO();
                String total_entrada = null, total_saida = null, saldo = null;
                for (FuncionarioDTO f : dao.getSaldoFuncionario(jComboBox_Funcionario.getSelectedItem().toString())) {

                    total_entrada = f.getTotal_entrada();
                    total_saida = f.getTotal_saida();
                    saldo =  f.getSaldo();
                }
                
                parametros.put("total_entrada", total_entrada);
                parametros.put("total_saida", total_saida);
                parametros.put("saldo", saldo);
                
                JasperPrint printer = JasperFillManager.fillReport(file, parametros, tabela); //aqui eu passo a jtable(tabela) para o relatorio
                JRViewer view = new JRViewer(printer); //preview
                JDialog dialog = new JDialog(); //jdialog que contem o preview
                dialog.getContentPane().add(view); //adiciono o preview
                dialog.setSize(850,600);
                dialog.setLocationRelativeTo(this);
                dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
                dialog.setModal(true);
                dialog.setVisible(true);
                 /*
                Agora é só ir até o model do relatório no meu caso é "EmitirComanda.jrxml"
                e criar os "fields" com o nome de COLUMN_0, COLUMN_1 etc..etc..
                Cada field ira receber os dados da jtable recebida conforme sua coluna. 
                No modelo EmitirComanda.jrxml va ate suas propriedades e mude a opcao:
                "When No Data" para "No Data Section", 
                isso dira para seu .jrxml q ele naum ira receber uma conexao SQL....
                depois desses passos, basta compilar o relatorio e a aplicacao e rodar 
                para ver a magia acontecer.
                */
        }//fim imprimir
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FuncionarioBancoHorasVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FuncionarioBancoHorasVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FuncionarioBancoHorasVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FuncionarioBancoHorasVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FuncionarioBancoHorasVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cadastrar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup_Assinado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton_listar;
    private javax.swing.JComboBox jComboBox_Funcionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton_entrada;
    private javax.swing.JRadioButton jRadioButton_nao;
    private javax.swing.JRadioButton jRadioButton_saida;
    private javax.swing.JRadioButton jRadioButton_sim;
    private javax.swing.JRadioButton jRadioButton_todos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea txt_area_motivo;
    private javax.swing.JFormattedTextField txt_data_evento;
    private javax.swing.JFormattedTextField txt_horas;
    // End of variables declaration//GEN-END:variables

    private void funcionariosCombobox() {
        
        
        FuncionarioDAO dao = new FuncionarioDAO();
        //jComboBox_Funcionario.removeAllItems();
        //pegando dados colecao
        
        for (FuncionarioDTO f : dao.getFuncionarioPorNome("%")) {
            jComboBox_Funcionario.addItem(f.getNome());
            
        }
        
    
    }
    //fim funcionariosCombobox
    
    
    
    private void saldoFuncionarios() {
        
        FuncionarioDAO dao = new FuncionarioDAO();
        
        DefaultTableModel model =  (DefaultTableModel) jTable2.getModel(); 
        model.setNumRows(0);
        
        for (FuncionarioDTO f : dao.getSaldoFuncionario("%")) {
            
            model.addRow(new Object[]{f.getNome(), f.getArea(), f.getTotal_entrada(), f.getTotal_saida(), f.getSaldo()});
            
            
        }
        
    
    }
    //fim funcionariosCombobox
    
    
    
   
    
    
}
