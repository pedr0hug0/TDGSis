/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CTR.tdgCTR;
import DTO.CoresDTO;
import DTO.ProdutoDTO;
import dao.CoresDAO;
import dao.ProdutoCoresDAO;
import dao.ProdutoDAO;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PeDr0_HuG0
 */
public class ProdutoVIEW extends javax.swing.JFrame {

    /**
     * Creates new form ProdutoVIEW
     */
    public ProdutoVIEW() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        //botao x fechar apenas janela
        setDefaultCloseOperation(ProdutoVIEW.HIDE_ON_CLOSE);
        
        //ocultando coluna ID
        ocultar_coluna_tabela();
        
        
        
        tdgCTR.considerarEnterComoTab(txt_Ref);
        tdgCTR.considerarEnterComoTab(jCheckBox_Bordado);
        tdgCTR.considerarEnterComoTab(jCheckBox_Bolso);
        tdgCTR.considerarEnterComoTab(jCheckBox_Estampa);
        tdgCTR.considerarEnterComoTab(jCheckBox_Costas);
        tdgCTR.considerarEnterComoTab(jCheckBox_Manga);
        tdgCTR.considerarEnterComoTab(txt_qtd_cores);
        tdgCTR.considerarEnterComoTab(txt_rendimento);
        
        tdgCTR.considerarEnterComoTab(btn_add_cor);
        tdgCTR.considerarEnterComoTab(btn_remove_cor);
        
        
        listar_categoria_produto();
        listar_categoria_cor();
        //listar_cores_categoria(jComboBox_categoria.getSelectedItem().toString());
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPCadastrar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox_Bolso = new javax.swing.JCheckBox();
        jCheckBox_Estampa = new javax.swing.JCheckBox();
        jCheckBox_Bordado = new javax.swing.JCheckBox();
        jCheckBox_Costas = new javax.swing.JCheckBox();
        jCheckBox_Manga = new javax.swing.JCheckBox();
        btn_Limpar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_Cadastrar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txt_Ref = new javax.swing.JTextField();
        txt_id = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btn_Atualizar = new javax.swing.JButton();
        txt_qtd_tamanho = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jComboBoxTipo_tamanho = new javax.swing.JComboBox();
        jComboBox_Descricao = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        txt_rendimento = new javax.swing.JTextField();
        jCheckBox_Especial = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jComboBox_categoria = new javax.swing.JComboBox();
        btn_add_cor = new javax.swing.JButton();
        btn_remove_cor = new javax.swing.JButton();
        btn_config_cores = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_cor = new javax.swing.JTable();
        jComboBox_cor = new javax.swing.JComboBox();
        txt_qtd_cores = new javax.swing.JTextField();
        jComboBox_id_cor = new javax.swing.JComboBox();
        btn_config_cat = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_tamanho = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jComboBox_categoria_tamanho = new javax.swing.JComboBox();
        jComboBox_tamanho = new javax.swing.JComboBox();
        btn_add_tamanho = new javax.swing.JButton();
        btn_remove_tamanho = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_ref_pesquisar = new javax.swing.JTextField();
        btn_Excluir = new javax.swing.JButton();
        btn_Listar = new javax.swing.JButton();
        btn_Limpar_Lista = new javax.swing.JButton();
        btn_Editar = new javax.swing.JButton();
        btn_Pesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Produto");
        setName("Cadastro Produto"); // NOI18N

        jPCadastrar.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Referencia"));

        jLabel2.setText("Ref:");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCheckBox_Bolso.setText("Bolso");

        jCheckBox_Estampa.setSelected(true);
        jCheckBox_Estampa.setText("Estampa");

        jCheckBox_Bordado.setText("Bordado");
        jCheckBox_Bordado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_BordadoActionPerformed(evt);
            }
        });

        jCheckBox_Costas.setText("Costas");
        jCheckBox_Costas.setNextFocusableComponent(jCheckBox_Manga);

        jCheckBox_Manga.setText("Manga");
        jCheckBox_Manga.setNextFocusableComponent(jComboBox_cor);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox_Estampa)
                    .addComponent(jCheckBox_Bordado)
                    .addComponent(jCheckBox_Bolso)
                    .addComponent(jCheckBox_Costas)
                    .addComponent(jCheckBox_Manga))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jCheckBox_Bordado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_Estampa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_Bolso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_Costas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_Manga)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_Limpar.setText("Limpar");
        btn_Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LimparActionPerformed(evt);
            }
        });

        jLabel3.setText("Descrição:");

        btn_Cadastrar.setText("Cadastrar");
        btn_Cadastrar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btn_CadastrarFocusGained(evt);
            }
        });
        btn_Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CadastrarActionPerformed(evt);
            }
        });

        jLabel8.setText("Tipo tamanho:");

        txt_Ref.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txt_Ref.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_RefFocusLost(evt);
            }
        });

        txt_id.setEnabled(false);

        jLabel9.setText("ID:");

        btn_Atualizar.setText("Atualizar");
        btn_Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AtualizarActionPerformed(evt);
            }
        });

        txt_qtd_tamanho.setBackground(new java.awt.Color(240, 240, 240));
        txt_qtd_tamanho.setText("4");
        txt_qtd_tamanho.setEnabled(false);

        jLabel10.setText("Qtd tamanho:");

        jComboBoxTipo_tamanho.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NORMAL", "JUVENIL", "ESPECIAL", "BABY", "KIDS", "MANUAL" }));
        jComboBoxTipo_tamanho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipo_tamanhoItemStateChanged(evt);
            }
        });
        jComboBoxTipo_tamanho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxTipo_tamanhoKeyPressed(evt);
            }
        });

        jComboBox_Descricao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        jComboBox_Descricao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_DescricaoItemStateChanged(evt);
            }
        });
        jComboBox_Descricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_DescricaoActionPerformed(evt);
            }
        });
        jComboBox_Descricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_DescricaoKeyPressed(evt);
            }
        });

        jLabel12.setText("Rendimento:");

        txt_rendimento.setFocusable(false);

        jCheckBox_Especial.setText("NÃO É COLEÇÃO");

        jLabel11.setText("Cat. Cor:");

        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CATEGORIA" }));
        jComboBox_categoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_categoriaItemStateChanged(evt);
            }
        });
        jComboBox_categoria.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox_categoriaFocusGained(evt);
            }
        });

        btn_add_cor.setText("+");
        btn_add_cor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_corActionPerformed(evt);
            }
        });

        btn_remove_cor.setText("-");
        btn_remove_cor.setFocusable(false);
        btn_remove_cor.setRequestFocusEnabled(false);
        btn_remove_cor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_remove_corActionPerformed(evt);
            }
        });

        btn_config_cores.setText("CONFIG. CORES");
        btn_config_cores.setFocusable(false);
        btn_config_cores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_config_coresActionPerformed(evt);
            }
        });

        jLabel4.setText("Qtd Cores:");

        jTable_cor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "REF", "COR", "ID_COR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_cor.setFocusable(false);
        jTable_cor.getTableHeader().setReorderingAllowed(false);
        jTable_cor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable_corComponentResized(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_cor);
        if (jTable_cor.getColumnModel().getColumnCount() > 0) {
            jTable_cor.getColumnModel().getColumn(0).setResizable(false);
            jTable_cor.getColumnModel().getColumn(1).setResizable(false);
            jTable_cor.getColumnModel().getColumn(2).setResizable(false);
            jTable_cor.getColumnModel().getColumn(3).setResizable(false);
        }

        jComboBox_cor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_corKeyPressed(evt);
            }
        });

        txt_qtd_cores.setEditable(false);
        txt_qtd_cores.setFocusable(false);
        txt_qtd_cores.setRequestFocusEnabled(false);

        jComboBox_id_cor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "id_cor" }));

        btn_config_cat.setText("CAD. CATEGORIA");
        btn_config_cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_config_catActionPerformed(evt);
            }
        });

        jTable_tamanho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "REF", "TAMANHO", "ID_TAM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_tamanho.setFocusable(false);
        jTable_tamanho.getTableHeader().setReorderingAllowed(false);
        jTable_tamanho.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jTable_tamanhoComponentResized(evt);
            }
        });
        jScrollPane4.setViewportView(jTable_tamanho);
        if (jTable_tamanho.getColumnModel().getColumnCount() > 0) {
            jTable_tamanho.getColumnModel().getColumn(0).setResizable(false);
            jTable_tamanho.getColumnModel().getColumn(1).setResizable(false);
            jTable_tamanho.getColumnModel().getColumn(2).setResizable(false);
            jTable_tamanho.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel13.setText("Cat. Tam:");

        jComboBox_categoria_tamanho.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CATEGORIA" }));
        jComboBox_categoria_tamanho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_categoria_tamanhoItemStateChanged(evt);
            }
        });
        jComboBox_categoria_tamanho.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox_categoria_tamanhoFocusGained(evt);
            }
        });

        jComboBox_tamanho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_tamanhoKeyPressed(evt);
            }
        });

        btn_add_tamanho.setText("+");
        btn_add_tamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_tamanhoActionPerformed(evt);
            }
        });

        btn_remove_tamanho.setText("-");
        btn_remove_tamanho.setFocusable(false);
        btn_remove_tamanho.setRequestFocusEnabled(false);
        btn_remove_tamanho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_remove_tamanhoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPCadastrarLayout = new javax.swing.GroupLayout(jPCadastrar);
        jPCadastrar.setLayout(jPCadastrarLayout);
        jPCadastrarLayout.setHorizontalGroup(
            jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCadastrarLayout.createSequentialGroup()
                        .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPCadastrarLayout.createSequentialGroup()
                                .addComponent(btn_Cadastrar)
                                .addGap(18, 18, 18)
                                .addComponent(btn_Atualizar)
                                .addGap(18, 18, 18)
                                .addComponent(btn_Limpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPCadastrarLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_Ref, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCadastrarLayout.createSequentialGroup()
                        .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPCadastrarLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(2, 2, 2)
                                .addComponent(jComboBoxTipo_tamanho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_qtd_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPCadastrarLayout.createSequentialGroup()
                                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(jPCadastrarLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBox_categoria_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_add_tamanho)
                                    .addComponent(btn_remove_tamanho, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPCadastrarLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_cor, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPCadastrarLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_qtd_cores, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_rendimento, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_add_cor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_remove_cor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox_Especial)
                    .addComponent(jComboBox_id_cor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_config_cat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_config_cores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPCadastrarLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_add_tamanho, btn_remove_tamanho});

        jPCadastrarLayout.setVerticalGroup(
            jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCadastrarLayout.createSequentialGroup()
                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCadastrarLayout.createSequentialGroup()
                        .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(txt_Ref, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_Descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jComboBox_cor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_add_cor)
                            .addComponent(jComboBox_categoria_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jComboBox_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_add_tamanho))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPCadastrarLayout.createSequentialGroup()
                                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_remove_cor)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_remove_tamanho))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(jComboBoxTipo_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(txt_qtd_tamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn_Cadastrar)
                                    .addComponent(btn_Atualizar)
                                    .addComponent(btn_Limpar)
                                    .addComponent(jLabel9)
                                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPCadastrarLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPCadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txt_qtd_cores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(txt_rendimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPCadastrarLayout.createSequentialGroup()
                        .addComponent(jCheckBox_Especial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_id_cor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_config_cat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_config_cores)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPCadastrarLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_add_tamanho, btn_remove_tamanho});

        jComboBox_id_cor.setVisible(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Alterar / Excluir"));

        jLabel1.setText("Ref:");

        btn_Excluir.setText("Excluir");
        btn_Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ExcluirActionPerformed(evt);
            }
        });

        btn_Listar.setText("Listar Todos");
        btn_Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListarActionPerformed(evt);
            }
        });

        btn_Limpar_Lista.setText("Limpar");
        btn_Limpar_Lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Limpar_ListaActionPerformed(evt);
            }
        });

        btn_Editar.setText("Editar");
        btn_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EditarActionPerformed(evt);
            }
        });

        btn_Pesquisar.setText("Pesquisar");
        btn_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_ref_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Pesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_Excluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Listar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Limpar_Lista)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_ref_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Excluir)
                    .addComponent(btn_Listar)
                    .addComponent(btn_Limpar_Lista)
                    .addComponent(btn_Editar)
                    .addComponent(btn_Pesquisar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "REF", "Descrição", "Qtd Cores", "Qtd Tamanhos", "Bordado", "Estampa", "Bolso", "Tipo Tamanho", "Costas", "Manga", "Rendimento", "Especial"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
        );

        jPCadastrar.getAccessibleContext().setAccessibleName("");

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void listar_categoria_produto(){
        ProdutoDAO dao = new ProdutoDAO();
        
        for (ProdutoDTO p : dao.listarCategorias() ) {
            jComboBox_Descricao.addItem(p.getCategoria());
        }
    }
    
    
    private void listar_categoria_cor(){
        CoresDAO dao = new CoresDAO();
        jComboBox_categoria.removeAllItems();
       
        for (CoresDTO c : dao.ListarCategoria()) {
            jComboBox_categoria.addItem(c.getCategoria());
        }
    }
    
    private void listar_cores_categoria(String categoria){
        CoresDAO dao = new CoresDAO();
        
        jComboBox_cor.removeAllItems();
        jComboBox_id_cor.removeAllItems();
        
        for (CoresDTO c : dao.ListarCoresCategoria(categoria)) {
            jComboBox_cor.addItem(c.getCor());
            jComboBox_id_cor.addItem(c.getId());
        }
       
        
    }
    
    
    public void ocultar_coluna_tabela(){
        //ocultar coluna ID da tabela
        jTable1.getColumnModel().getColumn( 0 ).setMaxWidth( 0 );  
        jTable1.getColumnModel().getColumn( 0 ).setMinWidth( 0 );  
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMaxWidth( 0 );  
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMinWidth( 0 ); 
        //fim ocultar
    }
    
    private void btn_CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CadastrarActionPerformed
        
        // fazendo a validação dos dados
        if ((txt_Ref.getText().isEmpty()) ||  (txt_qtd_tamanho.getText().isEmpty()) || (txt_qtd_cores.getText().isEmpty()) || (txt_qtd_cores.getText().equals("") || (txt_rendimento.getText().equals("")))) {
            JOptionPane.showMessageDialog(null, "Os campos não podem retornar vazios");
        }
        else if (txt_qtd_cores.getText().equals("0")){
                JOptionPane.showMessageDialog(null, "É necessario adicionar uma cor!");
        }
        else {
            
            
            
        // instanciando a classe Usuario do pacote modelo e criando seu objeto usuarios
        ProdutoDTO produtos = new ProdutoDTO();
        produtos.setCodigo(txt_Ref.getText());
        produtos.setDescricao(jComboBox_Descricao.getSelectedItem().toString());
        produtos.setQtd_tamanho(Integer.parseInt(txt_qtd_tamanho.getText()));
        produtos.setQtd_cores(Integer.parseInt(txt_qtd_cores.getText()));
        
        
        produtos.setRendimento(Double.parseDouble(txt_rendimento.getText()));
        
        if (jCheckBox_Bordado.isSelected()){
            produtos.setBordado(1);
        }else {
            produtos.setBordado(0); // false
        }
        if (jCheckBox_Estampa.isSelected()){
            produtos.setEstampa(1);
        }else {
            produtos.setEstampa(0); // false
        }
        if (jCheckBox_Bolso.isSelected()){
            produtos.setBolso(1);
        }else {
            produtos.setBolso(0); // false
        }
        if (jCheckBox_Costas.isSelected()){
            produtos.setCostas(1);
        }else {
            produtos.setCostas(0); // false
        }
        if (jCheckBox_Manga.isSelected()){
            produtos.setManga(1);
        }else {
            produtos.setManga(0); // false
        }
        produtos.setTipo_tamanho(jComboBoxTipo_tamanho.getSelectedItem().toString());
        
        //se não é colecao(especial = 1)
        if (jCheckBox_Especial.isSelected()){
            produtos.setEspecial(1);
        }else {
            produtos.setEspecial(0); // false
        }

            // instanciando a classe ProdutoDAO do pacote dao e criando seu objeto dao

            ProdutoDAO dao = new ProdutoDAO();
            if (dao.adiciona(produtos)){
                JOptionPane.showMessageDialog(null, "Produto "+txt_Ref.getText()+" inserido com sucesso! ");
                
                 // apaga os dados preenchidos nos campos de texto
                    txt_Ref.setText("");
                    txt_id.setText("");
                    
                    
                    //listando todos produtos
                     DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
                     model.setNumRows(0);
                     model.addRow(new Object[]{produtos.getId(), produtos.getCodigo(), produtos.getDescricao(), produtos.getQtd_cores(), produtos.getQtd_tamanho(), produtos.getBordado(), produtos.getEstampa(), produtos.getBolso(), produtos.getTipo_tamanho(), produtos.getCostas(), produtos.getManga(), produtos.getRendimento(), produtos.getEspecial()});
                     txt_Ref.requestFocus();
            }
            else {
                JOptionPane.showMessageDialog(null, "Erro, o produto "+txt_Ref.getText()+" não foi cadastrado! ");
            }
            //DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
            //Adiciona produto recem cadastrado(Id não atualiza)
            //model.addRow(new Object[]{produtos.getId(), produtos.getCodigo(), produtos.getDescricao(), produtos.getQtd_cores(), produtos.getQtd_tamanho(), produtos.getCor1(), produtos.getCor2(), produtos.getCor3(), produtos.getBordado(), produtos.getEstampa(), produtos.getBolso()});

        }

       //setar_rendimento();
        
    }//GEN-LAST:event_btn_CadastrarActionPerformed

    private void btn_LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LimparActionPerformed

        // TODO add your handling code here:
        txt_Ref.setText("");
        //txt_Descricao.setText("");
        //txt_qtd_tamanho.setText("");
        //txt_qtd_cores.setText("");
        txt_id.setText("");
        txt_rendimento.setText("");
        txt_Ref.requestFocus();
    }//GEN-LAST:event_btn_LimparActionPerformed

    private void jCheckBox_BordadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_BordadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_BordadoActionPerformed

    private void btn_AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AtualizarActionPerformed
        // TODO add your handling code here:
        ProdutoDTO produtos = new ProdutoDTO();
        
        Integer linhaSelecionada = -1;
		linhaSelecionada = jTable1.getSelectedRow();
                
            if (linhaSelecionada >= 0) {
                    Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                    String codigo = (String) jTable1.getValueAt(linhaSelecionada, 1);
        
                    produtos.setId(id);
                    
                    produtos.setCodigo(txt_Ref.getText());
                    produtos.setDescricao(jComboBox_Descricao.getSelectedItem().toString());
                    produtos.setQtd_tamanho(Integer.parseInt(txt_qtd_tamanho.getText()));
                    produtos.setQtd_cores(Integer.parseInt(txt_qtd_cores.getText()));
                    //produtos.setCor1(txt_cor1.getText());
                    //produtos.setCor2(txt_cor2.getText());
                    //produtos.setCor3(txt_cor3.getText());
                    produtos.setRendimento(Double.parseDouble(txt_rendimento.getText()));

                    if (jCheckBox_Bordado.isSelected()){
                        produtos.setBordado(1);
                    }else {
                        produtos.setBordado(0); // false
                    }
                    if (jCheckBox_Estampa.isSelected()){
                        produtos.setEstampa(1);
                    }else {
                        produtos.setEstampa(0); // false
                    }
                    if (jCheckBox_Bolso.isSelected()){
                        produtos.setBolso(1);
                    }else {
                        produtos.setBolso(0); // false
                    }
                    if (jCheckBox_Costas.isSelected()){
                        produtos.setCostas(1);
                    }else {
                        produtos.setCostas(0); // false
                    }
                    if (jCheckBox_Manga.isSelected()){
                        produtos.setManga(1);
                    }else {
                        produtos.setManga(0); // false
                    }
                    
                    produtos.setTipo_tamanho(jComboBoxTipo_tamanho.getSelectedItem().toString());
                    
                    //se é especial (não é colecao)
                    if (jCheckBox_Especial.isSelected()){
                        produtos.setEspecial(1);
                    }else {
                        produtos.setEspecial(0); // false
                    }
                    
                    
                    
                    
                    
                    // fazendo a validação dos dados
                    if ((txt_Ref.getText().isEmpty()) || (txt_qtd_tamanho.getText().isEmpty()) || (txt_qtd_cores.getText().isEmpty()) || (txt_rendimento.getText().isEmpty())) {
                        JOptionPane.showMessageDialog(null, "Os campos não podem retornar vazios");
                    }
                    else {

                        // instanciando a classe ProdutoDAO do pacote dao e criando seu objeto dao

                        ProdutoDAO dao = new ProdutoDAO();
                        if (dao.alterar(produtos)){
                            JOptionPane.showMessageDialog(null, "Produto "+txt_Ref.getText()+" alterado para "+txt_ref_pesquisar.getText()+" com sucesso! ");
                            
                            
                             // apaga os dados preenchidos nos campos de texto
                                txt_Ref.setText("");
                                //txt_Descricao.setText("");
                                //txt_qtd_tamanho.setText("");
                                //txt_qtd_cores.setText("");
                                //txt_cor2.setText("");
                                //txt_cor1.setText("");
                                //txt_cor3.setText("");
                                txt_id.setText("");
                                txt_rendimento.setText("");
                        }
                        else {
                            JOptionPane.showMessageDialog(null, "Erro, o produto "+txt_Ref.getText()+" não foi alterado!");
                        }

                    }
        
            }else{
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
            }   // fim linha selecionada
    }//GEN-LAST:event_btn_AtualizarActionPerformed

    private void btn_ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ExcluirActionPerformed
        
 
                ProdutoDTO produtos = new ProdutoDTO();
                
                Integer linhaSelecionada = -1;
		linhaSelecionada = jTable1.getSelectedRow();
                
            if (linhaSelecionada >= 0) {//se linha selecionada
                
                    Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                    String codigo = (String) jTable1.getValueAt(linhaSelecionada, 1);
                    
                    //Confirmação
                    String message = "Deseja realmente excluir a REF: "+codigo+" ?";
                    String title = "Confirmação";
                    int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                    if (reply == JOptionPane.YES_OPTION)
                    {//sim
                            //se confirmou
                            DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                            produtos.setId(id);//setar o id pra excluir
                            produtos.setCodigo(codigo);
                            ProdutoDAO dao = new ProdutoDAO();
                            if (dao.excluir(produtos)){
                                JOptionPane.showMessageDialog(null, "REF "+codigo+" excluido com sucesso!");
                            }
                            else {
                                JOptionPane.showMessageDialog(null, "Erro, a REF "+codigo+" não foi excluido!");
                            }
                            model.removeRow(linhaSelecionada);
                    }else{
                        //não confirmou
                    }
                 
            }
            else{ //se linha não estiver selecionada
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
            }   // fim linha selecionada
       
                    
            
            
    }//GEN-LAST:event_btn_ExcluirActionPerformed

    private void btn_ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListarActionPerformed
        // TODO add your handling code here:
       
       jTable1.setVisible(true);
       ProdutoDAO dao = new ProdutoDAO();
       DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
            
       model.setNumRows(0);
        

        for (ProdutoDTO p : dao.getProdutos()) {
            model.addRow(new Object[]{p.getId(), p.getCodigo(), p.getDescricao(), p.getQtd_cores(), p.getQtd_tamanho(), p.getBordado(), p.getEstampa(), p.getBolso(), p.getTipo_tamanho(), p.getCostas(), p.getManga(), p.getRendimento(), p.getEspecial()});
        }
         
        
            
        
    }//GEN-LAST:event_btn_ListarActionPerformed

    private void btn_Limpar_ListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Limpar_ListaActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
        
       model.setNumRows(0);
        //String[] linha = new String[]{"Pedro", "15" , "Masculino"};
        //model.addRow(linha);
        
    }//GEN-LAST:event_btn_Limpar_ListaActionPerformed

    private void btn_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EditarActionPerformed
        // TODO add your handling code here:
        
			Integer linhaSelecionada = -1;
			linhaSelecionada = jTable1.getSelectedRow();
                        
			if (linhaSelecionada >= 0) {
				Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                                
                                DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                
                                ProdutoDAO dao = new ProdutoDAO();
                                ProdutoDTO produto = dao.getProdutoById(id);
                                
                                txt_id.setText(Integer.toString(produto.getId()));
                                txt_Ref.setText(produto.getCodigo());
                                jComboBox_Descricao.setSelectedItem(produto.getDescricao());
                                txt_qtd_cores.setText(Integer.toString(produto.getQtd_cores()));
                                txt_qtd_tamanho.setText(Integer.toString(produto.getQtd_tamanho()));
                                
                                //trazer cores do produto
                                listar_cores_ref(txt_Ref.getText());
                                
                                txt_rendimento.setText(Double.toString(produto.getRendimento()));
                                Integer bordado = produto.getBordado();
                                if ( bordado == 1){
                                    jCheckBox_Bordado.setSelected(true);
                                }else {// se for 0 ou outra coisa
                                    jCheckBox_Bordado.setSelected(false);
                                }
                                
                                Integer estampa = produto.getEstampa();
                                if ( estampa == 1){
                                    jCheckBox_Estampa.setSelected(true);
                                }else {// se for 0 ou outra coisa
                                    jCheckBox_Estampa.setSelected(false);
                                }
                                
                                Integer bolso = produto.getBolso();
                                if ( bolso == 1){
                                    jCheckBox_Bolso.setSelected(true);
                                }else {// se for 0 ou outra coisa
                                    jCheckBox_Bolso.setSelected(false);
                                }
                                
                                jComboBoxTipo_tamanho.setSelectedItem(produto.getTipo_tamanho());
                                //linhaSelecionada = linha;
                                
                                Integer costas = produto.getCostas();
                                if ( costas == 1){
                                    jCheckBox_Costas.setSelected(true);
                                }else {// se for 0 ou outra coisa
                                    jCheckBox_Costas.setSelected(false);
                                }
                                Integer manga = produto.getManga();
                                if ( manga == 1){
                                    jCheckBox_Manga.setSelected(true);
                                }else {// se for 0 ou outra coisa
                                    jCheckBox_Manga.setSelected(false);
                                }
                                
                                Integer especial = produto.getEspecial();
                                if ( especial == 1){
                                    jCheckBox_Especial.setSelected(true);
                                }else {// se for 0 ou outra coisa
                                    jCheckBox_Especial.setSelected(false);
                                }
                                
			} else {
				JOptionPane.showMessageDialog(null, "É necesário selecionar uma linha. Clique em Listar e selecione!");
			}
		
	
    }//GEN-LAST:event_btn_EditarActionPerformed

    private void btn_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PesquisarActionPerformed
        // TODO add your handling code here:
        
        
       jTable1.setVisible(true);
       ProdutoDAO dao = new ProdutoDAO();
       DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
            
       model.setNumRows(0);
       
        for (ProdutoDTO p : dao.getProdutosRef(txt_ref_pesquisar.getText())) {
           
            model.addRow(new Object[]{p.getId(), p.getCodigo(), p.getDescricao(), p.getQtd_cores(), p.getQtd_tamanho(), p.getBordado(), p.getEstampa(), p.getBolso(), p.getTipo_tamanho(), p.getCostas(), p.getManga(), p.getRendimento(), p.getEspecial() });
        }

  
       
    }//GEN-LAST:event_btn_PesquisarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // se clicar na jtable
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBoxTipo_tamanhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipo_tamanhoItemStateChanged
        // TODO add your handling code here:
        if ( (jComboBoxTipo_tamanho.getSelectedItem().equals("ESPECIAL")) 
           || (jComboBoxTipo_tamanho.getSelectedItem()=="BABY") 
                || (jComboBoxTipo_tamanho.getSelectedItem()=="KIDS")
           ){
            txt_qtd_tamanho.setText("3");
        }else{
            txt_qtd_tamanho.setText("4");
        }
    }//GEN-LAST:event_jComboBoxTipo_tamanhoItemStateChanged

    private void jComboBox_DescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_DescricaoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            
                jCheckBox_Bordado.requestFocus();
            
        }
    }//GEN-LAST:event_jComboBox_DescricaoKeyPressed

    private void jComboBoxTipo_tamanhoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxTipo_tamanhoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            
                jComboBox_cor.requestFocus();
            
        }
    }//GEN-LAST:event_jComboBoxTipo_tamanhoKeyPressed

    private void btn_CadastrarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_CadastrarFocusGained
        // TODO add your handling code here:
        tdgCTR geral = new tdgCTR();
        geral.reagirEnter(btn_Cadastrar);
    }//GEN-LAST:event_btn_CadastrarFocusGained
/*
    public void setar_rendimento(){
        switch (jComboBox_Descricao.getSelectedItem().toString()) {
            case "01 MACHAO":
            txt_rendimento.setText("7");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;
            //4,8    
            case "02 GOLA CARECA":
            txt_rendimento.setText("4.8");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;
            case "03 GOLA V":
            txt_rendimento.setText("4.8");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;
            case "04 GOLA POLO":
            txt_rendimento.setText("4.8");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;
            //ESPECIAL 2,5
            case "05 CARECA ESPECIAL":
            txt_rendimento.setText("2.5");
            jComboBoxTipo_tamanho.setSelectedItem("ESPECIAL");
            break;
            case "06 V ESPECIAL":
            txt_rendimento.setText("2.5");
            jComboBoxTipo_tamanho.setSelectedItem("ESPECIAL");
            break;    
            case "07 POLO ESPECIAL":
            txt_rendimento.setText("2.5");
            jComboBoxTipo_tamanho.setSelectedItem("ESPECIAL");
            break;
            //JUVENIL 6
            case "08 CARECA JUVENIL":
            txt_rendimento.setText("6");
            jComboBoxTipo_tamanho.setSelectedItem("JUVENIL");
            break;
            case "09 V JUVENIL":
            txt_rendimento.setText("6");
            jComboBoxTipo_tamanho.setSelectedItem("JUVENIL");
            break;
            case "10 POLO JUVENIL":
            txt_rendimento.setText("6");
            jComboBoxTipo_tamanho.setSelectedItem("JUVENIL");
            break;
            //MANGA LONGA 2,5    
            case "11 CARECA ML":
            txt_rendimento.setText("2.5");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;
            case "12 V ML":
            txt_rendimento.setText("2.5");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;
            case "13 POLO ML":
            txt_rendimento.setText("2.5");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;
            //PIQUET 3,8    
            case "14 PIQUET":
            txt_rendimento.setText("3.8");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;
            //PIQUET 3,8    
            case "15 P001":
            txt_rendimento.setText("3.8");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            break;      
            default:
            txt_rendimento.setText("1");
            jComboBoxTipo_tamanho.setSelectedItem("NORMAL");
            }
    }
    */
    private void jComboBox_DescricaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_DescricaoItemStateChanged
        // TODO add your handling code here:
        //pegar dados categoria ****
       
       
    }//GEN-LAST:event_jComboBox_DescricaoItemStateChanged
    
    private void DadosCategoria(String categoria){
        ProdutoDAO dao = new ProdutoDAO();
        
        for (ProdutoDTO p : dao.getDadosCategorias(categoria)) {
            jComboBoxTipo_tamanho.setSelectedItem(p.getTipo_tamanho());
            txt_rendimento.setText(p.getRendimento().toString());
            //p.getGrade();
        }
    }
    
    
    private void txt_RefFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_RefFocusLost
        // TODO add your handling code here:
        
        String codigo = txt_Ref.getText();
        
        
        if (txt_Ref.getText().equals("P001") || txt_Ref.getText().equals("p001")){
            jComboBox_Descricao.setSelectedItem("15 P001");
        }
        
        
        
        
        listar_cores_ref(txt_Ref.getText());
        
        
    }//GEN-LAST:event_txt_RefFocusLost
    
    
    
    private void listar_cores_ref(String codigo){
        //listar cores cadastradas na ref
        ProdutoCoresDAO dao = new ProdutoCoresDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable_cor.getModel(); 
            
        model.setNumRows(0);
        for (CoresDTO cores : dao.ListarProdutoCores(codigo)) {
            model.addRow(new Object[]{cores.getId(), cores.getCodigo(), cores.getCor(), cores.getId_cor()});
        }
        
        
        
        
        
    }
    private void btn_config_coresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_config_coresActionPerformed
        // TODO add your handling code here:
        new CoresVIEW().setVisible(true);
    }//GEN-LAST:event_btn_config_coresActionPerformed

    private void jComboBox_categoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_categoriaItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
          Object item = evt.getItem();
          listar_cores_categoria(jComboBox_categoria.getSelectedItem().toString());
          
       }
    }//GEN-LAST:event_jComboBox_categoriaItemStateChanged

    private void jComboBox_categoriaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox_categoriaFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox_categoriaFocusGained

    private void btn_remove_corActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_remove_corActionPerformed
        // TODO add your handling code here:
        CoresDTO produto_cores = new CoresDTO();

        Integer linhaSelecionada = -1;
        linhaSelecionada = jTable_cor.getSelectedRow();

        if (linhaSelecionada >= 0) {//se linha selecionada

            Integer id = (Integer) jTable_cor.getValueAt(linhaSelecionada, 0);
            String cor = (String) jTable_cor.getValueAt(linhaSelecionada, 2);

            
                //se confirmou
                DefaultTableModel model =  (DefaultTableModel) jTable_cor.getModel();
                produto_cores.setId(id);//setar o id pra excluir
                produto_cores.setCor(cor);
                ProdutoCoresDAO dao = new ProdutoCoresDAO();
                if (dao.excluir(produto_cores)){
                    model.removeRow(linhaSelecionada);
                }
                else {
                    JOptionPane.showMessageDialog(null, "Erro, a COR "+cor+" não foi excluida!");
                }
                
           

        }
        else{ //se linha não estiver selecionada
            JOptionPane.showMessageDialog(null, "Selecione uma linha!");
        }   // fim linha selecionada
        
        
        jComboBox_cor.requestFocus();
        
    }//GEN-LAST:event_btn_remove_corActionPerformed

    private void btn_add_corActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_corActionPerformed
        // TODO add your handling code here:
        CoresDTO produto_cores = new CoresDTO();
        
        String codigo = txt_Ref.getText();
        String cor = jComboBox_cor.getSelectedItem().toString();
        Integer index_da_cor = jComboBox_cor.getSelectedIndex();
        Integer id_cor = Integer.parseInt(jComboBox_id_cor.getItemAt(index_da_cor).toString());
        
        produto_cores.setCodigo(codigo);
        produto_cores.setCor(cor);
        produto_cores.setId_cor(id_cor);
        
        ProdutoCoresDAO dao = new ProdutoCoresDAO();
        if (dao.adicionaProdutoCor(produto_cores)){
            DefaultTableModel model =  (DefaultTableModel) jTable_cor.getModel();
            model.addRow(new Object[]{produto_cores.getId(),produto_cores.getCodigo(), produto_cores.getCor(), produto_cores.getId_cor()});
            
        }else{
            JOptionPane.showMessageDialog(null, "ERRO AO ADICIONAR COR");
        }
        
        jComboBox_cor.requestFocus();
    }//GEN-LAST:event_btn_add_corActionPerformed

    private void jTable_corComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable_corComponentResized
        // TODO add your handling code here:
        Integer qtd_cor = jTable_cor.getRowCount();
        
        txt_qtd_cores.setText(qtd_cor.toString());
    }//GEN-LAST:event_jTable_corComponentResized

    private void jComboBox_corKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_corKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == evt.VK_ENTER){
            
                btn_add_cor.requestFocus();
            
        }
    }//GEN-LAST:event_jComboBox_corKeyPressed

    private void btn_config_catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_config_catActionPerformed
        // TODO add your handling code here:
        new ProdutoCategoriaVIEW().setVisible(true);
    }//GEN-LAST:event_btn_config_catActionPerformed

    private void jComboBox_DescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_DescricaoActionPerformed
        // TODO add your handling code here:
        DadosCategoria(jComboBox_Descricao.getSelectedItem().toString());
    }//GEN-LAST:event_jComboBox_DescricaoActionPerformed

    private void jTable_tamanhoComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable_tamanhoComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_tamanhoComponentResized

    private void jComboBox_categoria_tamanhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_categoria_tamanhoItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_categoria_tamanhoItemStateChanged

    private void jComboBox_categoria_tamanhoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox_categoria_tamanhoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_categoria_tamanhoFocusGained

    private void jComboBox_tamanhoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_tamanhoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_tamanhoKeyPressed

    private void btn_add_tamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_tamanhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_add_tamanhoActionPerformed

    private void btn_remove_tamanhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_remove_tamanhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_remove_tamanhoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProdutoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProdutoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProdutoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProdutoVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProdutoVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Atualizar;
    private javax.swing.JButton btn_Cadastrar;
    private javax.swing.JButton btn_Editar;
    private javax.swing.JButton btn_Excluir;
    private javax.swing.JButton btn_Limpar;
    private javax.swing.JButton btn_Limpar_Lista;
    private javax.swing.JButton btn_Listar;
    private javax.swing.JButton btn_Pesquisar;
    private javax.swing.JButton btn_add_cor;
    private javax.swing.JButton btn_add_tamanho;
    private javax.swing.JButton btn_config_cat;
    private javax.swing.JButton btn_config_cores;
    private javax.swing.JButton btn_remove_cor;
    private javax.swing.JButton btn_remove_tamanho;
    private javax.swing.JCheckBox jCheckBox_Bolso;
    private javax.swing.JCheckBox jCheckBox_Bordado;
    private javax.swing.JCheckBox jCheckBox_Costas;
    private javax.swing.JCheckBox jCheckBox_Especial;
    private javax.swing.JCheckBox jCheckBox_Estampa;
    private javax.swing.JCheckBox jCheckBox_Manga;
    private javax.swing.JComboBox jComboBoxTipo_tamanho;
    private javax.swing.JComboBox jComboBox_Descricao;
    private javax.swing.JComboBox jComboBox_categoria;
    private javax.swing.JComboBox jComboBox_categoria_tamanho;
    private javax.swing.JComboBox jComboBox_cor;
    private javax.swing.JComboBox jComboBox_id_cor;
    private javax.swing.JComboBox jComboBox_tamanho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPCadastrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable_cor;
    private javax.swing.JTable jTable_tamanho;
    private javax.swing.JTextField txt_Ref;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_qtd_cores;
    private javax.swing.JTextField txt_qtd_tamanho;
    private javax.swing.JTextField txt_ref_pesquisar;
    private javax.swing.JTextField txt_rendimento;
    // End of variables declaration//GEN-END:variables
}
