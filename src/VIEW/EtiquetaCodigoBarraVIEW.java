/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import CTR.tdgCTR;
import DTO.EtiquetaDTO;
import dao.EtiquetaDAO;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dialog;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.HashPrintServiceAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.PrintServiceAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.print.attribute.standard.PrinterName;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPrintServiceExporter;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimplePrintServiceExporterConfiguration;
import net.sf.jasperreports.view.JRViewer;

/**
 *
 * @author PeDr0_HuG0
 */
public class EtiquetaCodigoBarraVIEW extends javax.swing.JFrame {

    /**
     * Creates new form ProducaoVIEW
     */
    public EtiquetaCodigoBarraVIEW() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        setDefaultCloseOperation(ProdutoVIEW.HIDE_ON_CLOSE);
        
        txt_ref_pesquisar.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn_etiqueta_feita = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_t1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_t2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_t3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_t4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_etq_por_pagina = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btn_imprimir = new javax.swing.JButton();
        jCheckBox_visualizar = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        btn_Listar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_Processo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        txt_ref_pesquisar = new javax.swing.JTextField();
        btn_Pesquisar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btn_etq_sortida = new javax.swing.JButton();
        jCheckBox_visualizar_avulsa = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_t1_avulso = new javax.swing.JTextField();
        txt_t2_avulso = new javax.swing.JTextField();
        txt_t3_avulso = new javax.swing.JTextField();
        txt_t4_avulso = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Processos de Etiquetas");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("PROCESSOS DE ETIQUETAS"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CORTE", "REF", "COR", "T1", "T2", "T3", "T4", "TOTAL", "QTD MONTADO", "ETIQUETA FEITA", "ULTIMA ALTERACAO", "CALCULAR", "TIPO_TAMANHO", "DESCRICAO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, true, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        //ordenando cliacando nas tabelas
        jTable1.setAutoCreateRowSorter(true);

        //
        jTable1.setFocusable(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        //COMBOBOX STATUS
        TableColumn statusCol = jTable1.getColumnModel().getColumn(10);

        JComboBox comboBox_Status = new JComboBox();

        comboBox_Status.addItem("SIM");
        comboBox_Status.addItem("NAO");
        statusCol.setCellEditor(new DefaultCellEditor(comboBox_Status));
        //FIM COMBOBOX STATUS
        //ocultar coluna ID da tabela
        jTable1.getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable1.getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMaxWidth( 0 );
        jTable1.getTableHeader().getColumnModel().getColumn( 0 ).setMinWidth( 0 );
        //fim ocultar

        //colorir
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                //A coluna do status é 3
                Object qtd = table.getValueAt(row, 8);//Coluna frente
                Object qtd_montado = table.getValueAt(row, 9);//Coluna costas

                //Coloca cor na COLUNA(4)(frente) que tem o valor "COSTURA"

                Integer iqtd = (Integer) qtd;
                Integer iqtd_montado = (Integer) qtd_montado;

                boolean sel = isSelected;
                //frente
                if (qtd_montado != null && column == 9 && (iqtd_montado>iqtd)  ) {

                    //setBackground(Color.YELLOW);
                    setForeground(Color.RED);
                    return this;
                }
                else if (qtd_montado != null && column == 8 && (iqtd_montado>iqtd)  ) {
                    setForeground(Color.BLUE);
                    return this;
                }
                else{
                    //boolean sel = isSelected;
                    if (sel == true) {
                        setBackground(getBackground());
                        setForeground(getForeground());

                    } else {//Se Status não for "Aberto"
                        setBackground(Color.WHITE);//Preenche a linha de branco
                        setForeground(new Color(51, 51, 51));//E a fonte de preto
                    }
                }
                return this;

            }//fim component
        });

        btn_etiqueta_feita.setText("ETIQUETA FEITA ");
        btn_etiqueta_feita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_etiqueta_feitaActionPerformed(evt);
            }
        });

        jLabel1.setText("Nº DE COPIAS: T1:");

        txt_t1.setEditable(false);
        txt_t1.setFocusable(false);

        jLabel2.setText("T2:");

        txt_t2.setEditable(false);
        txt_t2.setFocusable(false);

        jLabel3.setText("T3:");

        txt_t3.setEditable(false);
        txt_t3.setFocusable(false);

        jLabel5.setText("T4:");

        txt_t4.setEditable(false);
        txt_t4.setFocusable(false);
        txt_t4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_t4ActionPerformed(evt);
            }
        });

        jLabel7.setText("ETQ por pagina:");

        txt_etq_por_pagina.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_etq_por_pagina.setText("2");
        txt_etq_por_pagina.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_etq_por_paginaFocusLost(evt);
            }
        });

        jButton1.setText("Selecionar Todos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btn_imprimir.setText("IMPRIMIR");
        btn_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imprimirActionPerformed(evt);
            }
        });

        jCheckBox_visualizar.setText("VISUALIZAR");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_etq_por_pagina, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_t1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_t2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_t3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_t4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox_visualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_imprimir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_etiqueta_feita)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txt_t4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txt_t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_etiqueta_feita)
                        .addComponent(jLabel1)
                        .addComponent(txt_t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(txt_t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(txt_etq_por_pagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(btn_imprimir)
                        .addComponent(jCheckBox_visualizar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Funções"));

        btn_Listar.setText("LISTAR PROCESSOS");
        btn_Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ListarActionPerformed(evt);
            }
        });

        jLabel6.setText("FILTRAR ETIQUETAS FEITAS:");

        jComboBox_Processo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NAO", "SIM", "TODOS" }));

        jLabel4.setText("Ref:");

        txt_ref_pesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ref_pesquisarKeyPressed(evt);
            }
        });

        btn_Pesquisar.setText("Pesquisar");
        btn_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_Processo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(btn_Listar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_ref_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Pesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox_Processo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Listar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_ref_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Pesquisar)))
        );

        //selfselect
        txt_ref_pesquisar.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_ref_pesquisar.selectAll();
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Etiqueta Avulsa"));

        btn_etq_sortida.setText("ETIQUETA AVULSA");
        btn_etq_sortida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_etq_sortidaActionPerformed(evt);
            }
        });

        jCheckBox_visualizar_avulsa.setText("Visualizar");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("T1");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("T2");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("T3");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("T4");

        txt_t1_avulso.setText("0");

        txt_t2_avulso.setText("0");

        txt_t3_avulso.setText("0");

        txt_t4_avulso.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_etq_sortida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox_visualizar_avulsa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_t1_avulso, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(txt_t2_avulso))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(txt_t3_avulso))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_t4_avulso, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(6, 6, 6))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_t1_avulso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_t2_avulso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_t3_avulso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_t4_avulso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_etq_sortida)
                    .addComponent(jCheckBox_visualizar_avulsa)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ListarActionPerformed
        // TODO add your handling code here:
        listar_etiquetas();
        calc_totais();
    }//GEN-LAST:event_btn_ListarActionPerformed

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
        calc_totais();
        
       
        EtiquetaDTO etiquetas = new EtiquetaDTO();
        if ("tableCellEditor".equals(evt.getPropertyName()))
		{
			if (jTable1.isEditing()){
                        }	
                        else{
                            
                            Integer linhaSelecionada = -1;
                            linhaSelecionada = jTable1.getSelectedRow();

                            if (linhaSelecionada >= 0) {
                                Integer id = (Integer) jTable1.getValueAt(linhaSelecionada, 0);
                                
                                String etiqueta = (String) jTable1.getValueAt(linhaSelecionada, 10);
                                
                                
                                
                                DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                etiquetas.setId(id);//setar o id pra excluir
                                etiquetas.setEtiqueta(etiqueta);
                                
                                EtiquetaDAO dao = new EtiquetaDAO();
                                if (dao.atualizar(etiquetas)){
                                    System.out.println("atualizado");
                                    //listar?
                                }
                                else {
                                    System.out.println("Não atualizou");
                                }
                                  
                                        
                                        
                            }else{
                                JOptionPane.showMessageDialog(null, "Selecione uma linha!");
                            }
                        }    
		}
        
        
    }//GEN-LAST:event_jTable1PropertyChange

    private void btn_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PesquisarActionPerformed
        // TODO add your handling code here:
        
        listar_por_ref();
        calc_totais();
    }//GEN-LAST:event_btn_PesquisarActionPerformed

     public void listar_por_ref(){
         //zerar row sorter
         jTable1.setRowSorter(null);
         
        String status = jComboBox_Processo.getSelectedItem().toString();
        String codigo = txt_ref_pesquisar.getText();
        
        EtiquetaDAO dao = new EtiquetaDAO();
        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
        
        model.setNumRows(0);

        for (EtiquetaDTO c : dao.getEtiquetaRef(status, codigo)) {
                                     //"ID", "CORTE", "REF", "COR", "FRENTE", "COSTAS", "MANGA", "ALTERADO", "DATA_INICIO", "QTD", "STATUS"
            model.addRow(new Object[]{c.getId(), c.getCorte(), c.getCodigo(), c.getCor(), c.getT1(), c.getT2(), c.getT3(), c.getT4(), c.getQtd(), c.getQtd_montado(), c.getEtiqueta(), c.getData_alteracao(), new Boolean(true), c.getTipo_tamanho(), c.getDescricao()});
        }
        jTable1.setAutoCreateRowSorter(true);
     }
    private void btn_etiqueta_feitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_etiqueta_feitaActionPerformed
        // TODO add your handling code here:
        etiqueta_feita();
        
    }//GEN-LAST:event_btn_etiqueta_feitaActionPerformed
    private void etiqueta_feita(){
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
       
                            EtiquetaDTO etiquetas = new EtiquetaDTO();
                            
                            
                             String message = "Deseja marcar como feitas todas ref selelcionadas?";
                                String title = "Setar como etiqueta feita";
                                int resposta = JOptionPane.showConfirmDialog(null, message);
                                
                                System.err.println("Resposta:"+resposta);
                                if ((resposta == 1) || (resposta == 2) || (resposta == -1)) 
                                {
                                    JOptionPane.showMessageDialog(null, "Cancelado.");
                                }else{//sim(
                                     
                                    Boolean calcular; 
                                    
                                    
                                    for(int i=0;i<jTable1.getRowCount();i++){ 
                                        calcular = (Boolean) jTable1.getValueAt(i, 12);
                                        
                                        //SE ESTIVER SELECIONADO
                                        if (calcular == true){
                                    
                                        Integer id = (Integer) jTable1.getValueAt(i, 0);
                                        String etiqueta = "SIM";
                                        DefaultTableModel model =  (DefaultTableModel) jTable1.getModel();
                                            etiquetas.setId(id);//setar o id pra excluir
                                            etiquetas.setEtiqueta(etiqueta);

                                          
                                            EtiquetaDAO dao = new EtiquetaDAO();
                                            if (dao.atualizar(etiquetas)){
                                                System.out.println("atualizado");
                                                //listar?
                                                
                                            }
                                            else {
                                                System.out.println("Não atualizou");
                                            }
                                        }
                                    }//fim row count
                                    //terminou de atualizar, fazer listagem novamente
                                    if (txt_ref_pesquisar.getText().equals("")){
                                        listar_etiquetas();
                                    }else{
                                        listar_por_ref();
                                    }
                                    
                                }//fim sim
                                       
            
           setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        txt_ref_pesquisar.requestFocus();
    }
    private void txt_ref_pesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ref_pesquisarKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode() == evt.VK_ENTER){
            
                listar_por_ref();
                calc_totais();
        }
    }//GEN-LAST:event_txt_ref_pesquisarKeyPressed

    private void txt_t4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_t4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_t4ActionPerformed

    private void txt_etq_por_paginaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_etq_por_paginaFocusLost
        // TODO add your handling code here:
        calc_totais();
    }//GEN-LAST:event_txt_etq_por_paginaFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        tdgCTR.selecionarTudo(jTable1, 12);
        calc_totais();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imprimirActionPerformed
        
        //GERAL
        Integer t1, t2, t3, t4;
        Integer etq_por_pagina = Integer.parseInt(txt_etq_por_pagina.getText());
        
        Boolean calcular;
        String codigo = null, cor = null, descricao = null;
        String tipo_tamanho, tam_t1 = null, tam_t2 = null, tam_t3 = null, tam_t4 = null;
        for(int i=0;i<jTable1.getRowCount();i++){ 
            calcular = (Boolean) jTable1.getValueAt(i, 12);
             
            //SE ESTIVER SELECIONADO
            if (calcular == true){
                //pegar tamanhos de t1, cor, tipo_tamanho e imprimir
                tipo_tamanho = (String) jTable1.getValueAt(i, 13);
                codigo = (String) jTable1.getValueAt(i, 2);
                cor = (String) jTable1.getValueAt(i, 3);
                descricao = (String) jTable1.getValueAt(i, 14);
                
                
                if (tipo_tamanho.equals("NORMAL")){
                    tam_t1 = "P";
                    tam_t2 = "M";
                    tam_t3 = "G";
                    tam_t4 = "GG";
                }else if (tipo_tamanho.equals("JUVENIL")){
                    tam_t1 = "10";
                    tam_t2 = "12";
                    tam_t3 = "14";
                    tam_t4 = "16";
                }else{//ESPECIAL
                    tam_t1 = "G1";
                    tam_t2 = "G2";
                    tam_t3 = "G3";
                    tam_t4 = "G4";
                }
                
                t1 = (Integer) jTable1.getValueAt(i, 4);
                t2 = (Integer) jTable1.getValueAt(i, 5);
                t3 = (Integer) jTable1.getValueAt(i, 6);
                t4 = (Integer) jTable1.getValueAt(i, 7);
                
                if (t1 != 0){
                    t1 = t1/etq_por_pagina;
                    t1=(t1+3);
                }
                if (t2 != 0){
                    t2 = t2/etq_por_pagina;
                    t2=(t2+3);
                }
                if (t3 != 0){
                    t3 = t3/etq_por_pagina;
                    t3=(t3+3);
                }
                if (t4 != 0){
                    t4 = t4/etq_por_pagina;
                    t4=(t4+3);
                }
                
                //IMPRIMI CADA LINHA
                try {
            
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    imprimirCodigoBarra(codigo, cor, tam_t1, t1, descricao, 1);
                    imprimirCodigoBarra(codigo, cor, tam_t2, t2, descricao, 2);
                    imprimirCodigoBarra(codigo, cor, tam_t3, t3, descricao, 3);

                    if (t4 != 0){
                    imprimirCodigoBarra(codigo, cor, tam_t4, t4, descricao, 4);
                    }

                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));


                    //depois que imprimiu perguntar se vai mudar para etiqueta feita
                    etiqueta_feita();

                } catch (JRException ex) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    JOptionPane.showMessageDialog(null, "ERRO AO IMPRIMIR\n"+ex+"\nImpressora procurada: Argox OS-214 plus series PPLA");
                    Logger.getLogger(EtiquetaCodigoBarraVIEW.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            }
        }//fim for, seria ele pegar todo o codigo e a cada troca de linha uma impressão (com cor)
        
        
        
        
        
        
        
    }//GEN-LAST:event_btn_imprimirActionPerformed

    private void btn_etq_sortidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_etq_sortidaActionPerformed
        // TODO add your handling code here:
        String codigo = null;
        
        codigo = JOptionPane.showInputDialog(null, "Codigo referencia:");
        
        String op = "0";
        String tam_t1 = null, tam_t2 = null, tam_t3 = null, tam_t4 = null;
        Integer t1 = null, t2 = null, t3 = null, t4 = null;
        
        t1 = Integer.parseInt(txt_t1_avulso.getText());
        t2 = Integer.parseInt(txt_t2_avulso.getText());
        t3 = Integer.parseInt(txt_t3_avulso.getText());
        t4 = Integer.parseInt(txt_t4_avulso.getText());
            
        op = JOptionPane.showInputDialog("TIPO_TAMANHO:  \n 1: P - M - G - GG \n 2: 10 - 12 - 14 - 16 \n 3: G1 - G2 - G3");  
        
        switch (op) {
            case "1":
                tam_t1 = "P";
                tam_t2 = "M";
                tam_t3 = "G";
                tam_t4 = "GG";
                break;
            case "2":
                tam_t1 = "10";
                tam_t2 = "12";
                tam_t3 = "14";
                tam_t4 = "16";
                break;
            case "3":
                //ESPECIAL
                tam_t1 = "G1";
                tam_t2 = "G2";
                tam_t3 = "G3";
                break;
            default:
                JOptionPane.showMessageDialog(rootPane, "Opção invalida");
                return;
        }
        
        
       if (!codigo.isEmpty()){//SE TEM CODIGO DA REF
           try {
                    String arquivo = "relatorios_ireport/etiqueta_ref_tamanho.jasper";
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    
                    if (t1 != 0){
                        imprimir_sortido(codigo, tam_t1, arquivo, t1);
                    }
                    
                    if (t2 != 0){
                        imprimir_sortido(codigo, tam_t2, arquivo, t2);
                    }
                    
                    if (t3 !=0){
                        imprimir_sortido(codigo, tam_t3, arquivo, t3);
                    }
                    

                    if ( (tam_t4 != null) && (t4 != 0) ){
                    imprimir_sortido(codigo, tam_t4, arquivo, t4);
                    }

                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));


                } catch (JRException ex) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    JOptionPane.showMessageDialog(null, "ERRO AO IMPRIMIR\n"+ex+"\nImpressora procurada: Argox OS-214 plus series PPLA");
                    Logger.getLogger(EtiquetaCodigoBarraVIEW.class.getName()).log(Level.SEVERE, null, ex);
                }
       }else{//SE NÃO TEM CODIGO, IMPRIMIR SÓ TAMANHO
            try {
                    String arquivo = "relatorios_ireport/etiqueta_tamanhos.jasper";
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    
                    
                    if (t1 != 0){
                        imprimir_sortido(codigo, tam_t1, arquivo, t1);
                    }
                    
                    if (t2 != 0){
                        imprimir_sortido(codigo, tam_t2, arquivo, t2);
                    }
                    
                    if (t3 !=0){
                        imprimir_sortido(codigo, tam_t3, arquivo, t3);
                    }
                    

                    if ( (tam_t4 != null) && (t4 != 0) ){
                    imprimir_sortido(codigo, tam_t4, arquivo, t4);
                    }

                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));


                } catch (JRException ex) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    JOptionPane.showMessageDialog(null, "ERRO AO IMPRIMIR\n"+ex+"\nImpressora procurada: Argox OS-214 plus series PPLA");
                    Logger.getLogger(EtiquetaCodigoBarraVIEW.class.getName()).log(Level.SEVERE, null, ex);
                }
       }         
          
    }//GEN-LAST:event_btn_etq_sortidaActionPerformed
    
    public void imprimir_sortido(String codigo, String tamanho, String arquivo, Integer qtd) throws JRException{
                
        
        java.io.InputStream file = getClass().getClassLoader().getResourceAsStream(arquivo); //carrego o arquivo

        //NUMERO DE REPETIÇÕES
        ArrayList array_qtd = new ArrayList();
        
        //completar as 3 colunas com mesmo valor
        for(int i = 0; i < 3; i++){  
                array_qtd.add("Número" + i);  
        }
        
        JRBeanCollectionDataSource dados_qtd = new JRBeanCollectionDataSource(array_qtd);  
        
        
        Map parametros = new HashMap();
        
        //parametro 1 (codigo)
        parametros.put("codigo", codigo);
        //parametro 2 (tamanho)
        parametros.put("tamanho", tamanho);
       
        //CRIANDO
        JasperPrint printer = null;
        printer = JasperFillManager.fillReport(file, parametros, dados_qtd); 
        
        //exportar para pdf
        //JasperExportManager.exportReportToPdfFile(printer,"D://sample_report.pdf");
        if (jCheckBox_visualizar_avulsa.isSelected()){
        
            //CHAMAR VIEW 1 DE CADA VEZ (FECHOU ABRE O OUTRO)
            JRViewer view = new JRViewer(printer); //preview
            JDialog dialog = new JDialog(); //jdialog que contem o preview

            dialog.getContentPane().add(view); //adiciono o preview
            dialog.setSize(600,300);
            dialog.setLocationRelativeTo(jPanel2);
            dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
            dialog.setModal(true);
            dialog.setVisible(true);
            //CHAMAR VIEW DIRETO(TODOS AS QTD DE UMA VEZ)
            //JasperViewer.viewReport(printer, false);
        }else{
             
                PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
                //printRequestAttributeSet.add(MediaSizeName.ISO_A4);
                printRequestAttributeSet.add(new Copies(qtd));

                PrintServiceAttributeSet printServiceAttributeSet = new HashPrintServiceAttributeSet();
                //printServiceAttributeSet.add(new PrinterName("Argox_OS-214_plus_series_PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("Argox OS-214 plus series PPLA em pcestamparia", Locale.getDefault()));
                printServiceAttributeSet.add(new PrinterName("Argox OS-214 plus series PPLA", Locale.getDefault()));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("//pcestamparia/Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox_OS-214_plus_series_PPLA", Locale.getDefault()));
                JRPrintServiceExporter exporter = new JRPrintServiceExporter();

                exporter.setExporterInput(new SimpleExporterInput(printer));
                SimplePrintServiceExporterConfiguration configuration = new SimplePrintServiceExporterConfiguration();
                configuration.setPrintRequestAttributeSet(printRequestAttributeSet);
                configuration.setPrintServiceAttributeSet(printServiceAttributeSet);
                exporter.setConfiguration(configuration);
                //true para aprecer opções
                configuration.setDisplayPageDialog(false);
                configuration.setDisplayPrintDialog(false);

                exporter.setConfiguration(configuration);

                System.out.println("Inicializando impressão");  
                exporter.exportReport();  
                System.out.println("Impressão finalizada"); 
            
                   
                
            //IMPRIMIR DIRETO
            //JasperPrintManager.printReport(printer,false);
            }
            
            
            
    }
    
    
    public void imprimir(String codigo, String tamanho, Integer qtd, String descricao) throws JRException{
        
        String arquivo = "relatorios_ireport/etiqueta_ref_tamanho.jasper"; //arquivo de relatorio
        //String arquivo = "relatorios_ireport/etiqueta_ref_tamanho.jasper"; //arquivo de relatorio
        java.io.InputStream file = getClass().getClassLoader().getResourceAsStream(arquivo); //carrego o arquivo

        //NUMERO DE REPETIÇÕES
        ArrayList array_qtd = new ArrayList();
        
        //completar as 3 colunas com mesmo valor
        for(int i = 0; i < 3; i++){  
                array_qtd.add("Número" + i);  
        }
        
        /*SE FOR TER DIFERENÇA NO CHECK OU N
        
        if (jCheckBox_visualizar.isSelected()){
            //APENAS 3 NO RELATORIO
            for(int i = 0; i < 3; i++){  
                array_qtd.add("Número" + i);  
            }
            
        }else{//QTD NECESSARIA
            for(int i = 0; i < qtd; i++){  
                array_qtd.add("Número" + i);  
            }
        }
        */
        
        JRBeanCollectionDataSource dados_qtd = new JRBeanCollectionDataSource(array_qtd);  
        
        
        Map parametros = new HashMap(); //parametros sao as colunas da jtable ("fields" com o nome de COLUMN_0, COLUMN_1 )
        
        
        
        
        if (descricao.contains("PIQUET")){
            //parametro 1 (codigo) COM "P" NA FRENTE
            parametros.put("codigo", "P"+codigo);
        }else{
            //parametro 1 (codigo)
            parametros.put("codigo", codigo);
        }
        
        
        //parametro 2 (tamanho)
        parametros.put("tamanho", tamanho);
        
        
        
        //CRIANDO
        JasperPrint printer = null;
        printer = JasperFillManager.fillReport(file, parametros, dados_qtd); //aqui eu passo a jtable(tabela) para o relatorio
        
        //exportar para pdf
        //JasperExportManager.exportReportToPdfFile(printer,"D://sample_report.pdf");
        
            if (jCheckBox_visualizar.isSelected()){
            
            //CHAMAR VIEW 1 DE CADA VEZ (FECHOU ABRE O OUTRO)
            JRViewer view = new JRViewer(printer); //preview
            JDialog dialog = new JDialog(); //jdialog que contem o preview

            dialog.getContentPane().add(view); //adiciono o preview
            dialog.setSize(600,300);
            dialog.setLocationRelativeTo(jPanel2);
            dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
            dialog.setModal(true);
            dialog.setVisible(true);
            //CHAMAR VIEW DIRETO(TODOS AS QTD DE UMA VEZ)
            //JasperViewer.viewReport(printer, false);
            
            }else{
             //testes
                PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
                //printRequestAttributeSet.add(MediaSizeName.ISO_A4);
                printRequestAttributeSet.add(new Copies(qtd));

                PrintServiceAttributeSet printServiceAttributeSet = new HashPrintServiceAttributeSet();
                //printServiceAttributeSet.add(new PrinterName("Argox_OS-214_plus_series_PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("Argox OS-214 plus series PPLA em pcestamparia", Locale.getDefault()));
                printServiceAttributeSet.add(new PrinterName("Argox OS-214 plus series PPLA", Locale.getDefault()));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("//pcestamparia/Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox_OS-214_plus_series_PPLA", Locale.getDefault()));
                JRPrintServiceExporter exporter = new JRPrintServiceExporter();

                exporter.setExporterInput(new SimpleExporterInput(printer));
                SimplePrintServiceExporterConfiguration configuration = new SimplePrintServiceExporterConfiguration();
                configuration.setPrintRequestAttributeSet(printRequestAttributeSet);
                configuration.setPrintServiceAttributeSet(printServiceAttributeSet);
                exporter.setConfiguration(configuration);
                //true para aprecer opções
                configuration.setDisplayPageDialog(false);
                configuration.setDisplayPrintDialog(false);

                exporter.setConfiguration(configuration);

                System.out.println("Inicializando impressão");  
                exporter.exportReport();  
                System.out.println("Impressão finalizada"); 
            
                   
                
            //IMPRIMIR DIRETO
            //JasperPrintManager.printReport(printer,false);
            }
        
        
    }//fim imprimir
    
    public void imprimirCodigoBarra(String codigo, String cor, String tamanho, Integer qtd, String descricao, Integer codigo_tamanho) throws JRException{
        
        String arquivo = "relatorios_ireport/barcode_2etq_128.jasper"; //arquivo de relatorio
        //String arquivo = "relatorios_ireport/etiqueta_ref_tamanho.jasper"; //arquivo de relatorio
        java.io.InputStream file = getClass().getClassLoader().getResourceAsStream(arquivo); //carrego o arquivo

        
        
        EtiquetaDAO dao = new EtiquetaDAO();
        JRResultSetDataSource jrRS = new JRResultSetDataSource(dao.getId_Cor(codigo, cor));  
        
        
        
        
        Map parametros = new HashMap(); //parametros sao as colunas da jtable ("fields" com o nome de COLUMN_0, COLUMN_1 )
        
        
        
        
        if (descricao.contains("PIQUET")){
            //parametro 1 (codigo) COM "P" NA FRENTE
            parametros.put("ref", "P"+codigo);
        }else{
            //parametro 1 (codigo)
            parametros.put("ref", codigo);
        }
        
        //parametro 2 (tamanho)
        parametros.put("tamanho", tamanho);
        
        //parametro 3 (COR)
        parametros.put("cor", cor);
        
        //parametro 4 (CODIGO_TAMANHO)
        parametros.put("codigo_tamanho", codigo_tamanho);
        
        //parametro 5 (CODIGO_REF)
        parametros.put("codigo_ref", codigo);
        
        //CRIANDO
        JasperPrint printer = null;
        printer = JasperFillManager.fillReport(file, parametros, jrRS); //aqui eu passo a jtable(tabela) para o relatorio
        
        //exportar para pdf
        //JasperExportManager.exportReportToPdfFile(printer,"D://sample_report.pdf");
        
            if (jCheckBox_visualizar.isSelected()){
            
            //CHAMAR VIEW 1 DE CADA VEZ (FECHOU ABRE O OUTRO)
            JRViewer view = new JRViewer(printer); //preview
            JDialog dialog = new JDialog(); //jdialog que contem o preview

            dialog.getContentPane().add(view); //adiciono o preview
            dialog.setSize(600,300);
            dialog.setLocationRelativeTo(jPanel2);
            dialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
            dialog.setModal(true);
            dialog.setVisible(true);
            //CHAMAR VIEW DIRETO(TODOS AS QTD DE UMA VEZ)
            //JasperViewer.viewReport(printer, false);
            
            }else{
             //testes
                PrintRequestAttributeSet printRequestAttributeSet = new HashPrintRequestAttributeSet();
                //printRequestAttributeSet.add(MediaSizeName.ISO_A4);
                printRequestAttributeSet.add(new Copies(qtd));

                PrintServiceAttributeSet printServiceAttributeSet = new HashPrintServiceAttributeSet();
                //printServiceAttributeSet.add(new PrinterName("Argox_OS-214_plus_series_PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("Argox OS-214 plus series PPLA em pcestamparia", Locale.getDefault()));
                printServiceAttributeSet.add(new PrinterName("Argox OS-214 plus series PPLA", Locale.getDefault()));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("//pcestamparia/Argox OS-214 plus series PPLA", null));
                //printServiceAttributeSet.add(new PrinterName("////pcestamparia//Argox_OS-214_plus_series_PPLA", Locale.getDefault()));
                JRPrintServiceExporter exporter = new JRPrintServiceExporter();

                exporter.setExporterInput(new SimpleExporterInput(printer));
                SimplePrintServiceExporterConfiguration configuration = new SimplePrintServiceExporterConfiguration();
                configuration.setPrintRequestAttributeSet(printRequestAttributeSet);
                configuration.setPrintServiceAttributeSet(printServiceAttributeSet);
                exporter.setConfiguration(configuration);
                //true para aprecer opções
                configuration.setDisplayPageDialog(false);
                configuration.setDisplayPrintDialog(false);

                exporter.setConfiguration(configuration);

                System.out.println("Inicializando impressão");  
                exporter.exportReport();  
                System.out.println("Impressão finalizada"); 
            
                   
                
            //IMPRIMIR DIRETO
            //JasperPrintManager.printReport(printer,false);
            }
        
        
    }//fim imprimir CODIGO BARRAS

    
    
     //listar etiquetas
    
     public void listar_etiquetas(){
         //ZERAR ROW sorter
         jTable1.setRowSorter(null);
        


        //deseleciona a linha
         //jTable1.getSelectionModel().clearSelection();
        //perde o foco de onde está editando (necessario para atualizar o campo)
         jTable1.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE); 
        
        String status = jComboBox_Processo.getSelectedItem().toString();
         
         EtiquetaDAO dao = new EtiquetaDAO();
         DefaultTableModel model =  (DefaultTableModel) jTable1.getModel(); 
            
       model.setNumRows(0);
       //SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");
        for (EtiquetaDTO c : dao.getEtiqueta(status)) {
           
                                                //corte, codigo, cor, frente, costas, manga, status, data_alteracao, data_inicio, qtd 
            model.addRow(new Object[]{c.getId(), c.getCorte(), c.getCodigo(), c.getCor(), c.getT1(), c.getT2(), c.getT3(), c.getT4(), c.getQtd(), c.getQtd_montado(), c.getEtiqueta(), c.getData_alteracao(), new Boolean(true), c.getTipo_tamanho(), c.getDescricao()});
        }
       //adicionar rowsorter 
       jTable1.setAutoCreateRowSorter(true);
    }//fim listar etiquetas
    
     

    

  

     
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EtiquetaCodigoBarraVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EtiquetaCodigoBarraVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EtiquetaCodigoBarraVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EtiquetaCodigoBarraVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EtiquetaCodigoBarraVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Listar;
    private javax.swing.JButton btn_Pesquisar;
    private javax.swing.JButton btn_etiqueta_feita;
    private javax.swing.JButton btn_etq_sortida;
    private javax.swing.JButton btn_imprimir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox_visualizar;
    private javax.swing.JCheckBox jCheckBox_visualizar_avulsa;
    private javax.swing.JComboBox jComboBox_Processo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_etq_por_pagina;
    private javax.swing.JTextField txt_ref_pesquisar;
    private javax.swing.JTextField txt_t1;
    private javax.swing.JTextField txt_t1_avulso;
    private javax.swing.JTextField txt_t2;
    private javax.swing.JTextField txt_t2_avulso;
    private javax.swing.JTextField txt_t3;
    private javax.swing.JTextField txt_t3_avulso;
    private javax.swing.JTextField txt_t4;
    private javax.swing.JTextField txt_t4_avulso;
    // End of variables declaration//GEN-END:variables

    private void calc_totais() {
        if ( (txt_etq_por_pagina.getText().equals("")) || (txt_etq_por_pagina.getText().isEmpty()) || (!tdgCTR.isInt(txt_etq_por_pagina.getText())) ){
            txt_etq_por_pagina.setText("1");
        }
        //txt_n_etiqueta_por_pagina
        //onde boolean = true
        Boolean calcular = false;
        Integer t1, total_t1 = 0;
        Integer t2, total_t2 = 0;
        Integer t3, total_t3 = 0;
        Integer t4, total_t4 = 0;
                                    for(int i=0;i<jTable1.getRowCount();i++){ 
                                        calcular = (Boolean) jTable1.getValueAt(i, 12);
                                        
                                        //SE ESTIVER SELECIONADO
                                        if (calcular == true){
                                            t1 = (Integer) jTable1.getValueAt(i, 4);
                                            t2 = (Integer) jTable1.getValueAt(i, 5);
                                            t3 = (Integer) jTable1.getValueAt(i, 6);
                                            t4 = (Integer) jTable1.getValueAt(i, 7);
                                            
                                            total_t1 = total_t1+t1;
                                            total_t2 = total_t2+t2;
                                            total_t3 = total_t3+t3;
                                            total_t4 = total_t4+t4;
                                            
                                            
                                            
                                
                                        }//fim se selecionado
        
                                    }//fim row count
        
        Integer etq_por_pagina = Integer.parseInt(txt_etq_por_pagina.getText());
        
        total_t1=total_t1/etq_por_pagina;
        total_t2=total_t2/etq_por_pagina;
        total_t3=total_t3/etq_por_pagina;
        total_t4=total_t4/etq_por_pagina;
        txt_t1.setText(total_t1.toString());
        txt_t2.setText(total_t2.toString());
        txt_t3.setText(total_t3.toString());
        txt_t4.setText(total_t4.toString());
        
        /*
        tdgCTR geral = new tdgCTR();
        
        Integer t1 = (geral.calc_Total_Itens_int(jTable1, 4))/3;
        Integer t2 = (geral.calc_Total_Itens_int(jTable1, 5))/3;
        Integer t3 = (geral.calc_Total_Itens_int(jTable1, 6))/3;
        Integer t4 = (geral.calc_Total_Itens_int(jTable1, 7))/3;
        txt_t1.setText(t1.toString());
        txt_t2.setText(t2.toString());
        txt_t3.setText(t3.toString());
        txt_t4.setText(t4.toString());
                */
    }
}
